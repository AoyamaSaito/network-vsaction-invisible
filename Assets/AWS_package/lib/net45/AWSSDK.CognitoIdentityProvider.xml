<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CognitoIdentityProvider</name>
    </assembly>
    <members>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig">
            <summary>
            Configuration for accessing Amazon CognitoIdentityProvider service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration">
            <summary>
            Configuration for accessing Amazon CognitoIdentityProvider service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration.GetAllConfigurations">
            <summary>
            Collection of all <see cref="T:Amazon.Runtime.DefaultConfiguration"/>s supported by
            CognitoIdentityProvider
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration.Standard">
            <summary>
            <p>The STANDARD mode provides the latest recommended default values that should be safe to run in most scenarios</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration.InRegion">
            <summary>
            <p>The IN_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services from within the same AWS region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration.CrossRegion">
            <summary>
            <p>The CROSS_REGION mode builds on the standard mode and includes optimization tailored for applications which call AWS services in a different region</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration.Mobile">
            <summary>
            <p>The MOBILE mode builds on the standard mode and includes optimization tailored for mobile applications</p><p>Note that the default values vended from this mode might change as best practices may evolve. As a result, it is encouraged to perform tests when upgrading the SDK</p>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration.Auto">
            <summary>
            <p>The AUTO mode is an experimental mode that builds on the standard mode. The SDK will attempt to discover the execution environment to determine the appropriate settings automatically.</p><p>Note that the auto detection is heuristics-based and does not guarantee 100% accuracy. STANDARD mode will be used if the execution environment cannot be determined. The auto detection might query <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">EC2 Instance Metadata service</a>, which might introduce latency. Therefore we recommend choosing an explicit defaults_mode instead if startup latency is critical to your application</p>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderDefaultConfiguration.Legacy">
            <summary>
            <p>The LEGACY mode provides default settings that vary per SDK and were used prior to establishment of defaults_mode</p>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Endpoints.CognitoIdentityProviderEndpointParameters">
            <summary>
            Contains parameters used for resolving CognitoIdentityProvider endpoints
            Parameters can be sourced from client config and service operations
            Used by internal CognitoIdentityProviderEndpointProvider and CognitoIdentityProviderEndpointResolver
            Can be used by custom EndpointProvider, see ClientConfig.EndpointProvider
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Endpoints.CognitoIdentityProviderEndpointParameters.#ctor">
            <summary>
            CognitoIdentityProviderEndpointParameters constructor
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Endpoints.CognitoIdentityProviderEndpointParameters.Region">
            <summary>
            Region parameter
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Endpoints.CognitoIdentityProviderEndpointParameters.UseDualStack">
            <summary>
            UseDualStack parameter
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Endpoints.CognitoIdentityProviderEndpointParameters.UseFIPS">
            <summary>
            UseFIPS parameter
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Endpoints.CognitoIdentityProviderEndpointParameters.Endpoint">
            <summary>
            Endpoint parameter
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException">
            <summary>
             Common exception for the CognitoIdentityProvider service.
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCognitoIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCognitoIdentityProviderException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderEndpointProvider">
            <summary>
            Amazon CognitoIdentityProvider endpoint provider.
            Resolves endpoint for given set of CognitoIdentityProviderEndpointParameters.
            Can throw AmazonClientException if endpoint resolution is unsuccessful.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderEndpointProvider.ResolveEndpoint(Amazon.Runtime.Endpoints.EndpointParameters)">
            <summary>
            Resolve endpoint for CognitoIdentityProviderEndpointParameters
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderEndpointResolver">
            <summary>
            Amazon CognitoIdentityProvider endpoint resolver.
            Custom PipelineHandler responsible for resolving endpoint and setting authentication parameters for CognitoIdentityProvider service requests.
            Collects values for CognitoIdentityProviderEndpointParameters and then tries to resolve endpoint by calling 
            ResolveEndpoint method on GlobalEndpoints.Provider if present, otherwise uses CognitoIdentityProviderEndpointProvider.
            Responsible for setting authentication and http headers provided by resolved endpoint.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderMetadata">
            <summary>
            Service metadata for  Amazon CognitoIdentityProvider service
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Internal.AmazonCognitoIdentityProviderMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AccountRecoverySettingType">
            <summary>
            The data type for <code>AccountRecoverySetting</code>.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountRecoverySettingType.RecoveryMechanisms">
            <summary>
            Gets and sets the property RecoveryMechanisms. 
            <para>
            The list of <code>RecoveryOptionTypes</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionsType">
            <summary>
            Account takeover actions type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionsType.HighAction">
            <summary>
            Gets and sets the property HighAction. 
            <para>
            Action to take for a high risk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionsType.LowAction">
            <summary>
            Gets and sets the property LowAction. 
            <para>
            Action to take for a low risk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionsType.MediumAction">
            <summary>
            Gets and sets the property MediumAction. 
            <para>
            Action to take for a medium risk.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionType">
            <summary>
            Account takeover action type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionType.EventAction">
            <summary>
            Gets and sets the property EventAction. 
            <para>
            The action to take in response to the account takeover action. Valid values are as
            follows:
            </para>
             <ul> <li> 
            <para>
             <code>BLOCK</code> Choosing this action will block the request.
            </para>
             </li> <li> 
            <para>
             <code>MFA_IF_CONFIGURED</code> Present an MFA challenge if user has configured it,
            else allow the request.
            </para>
             </li> <li> 
            <para>
             <code>MFA_REQUIRED</code> Present an MFA challenge if user has configured it, else
            block the request.
            </para>
             </li> <li> 
            <para>
             <code>NO_ACTION</code> Allow the user to sign in.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionType.Notify">
            <summary>
            Gets and sets the property Notify. 
            <para>
            Flag specifying whether to send a notification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AccountTakeoverRiskConfigurationType">
            <summary>
            Configuration for mitigation actions and notification for different levels of risk
            detected for a potential account takeover.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountTakeoverRiskConfigurationType.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            Account takeover risk configuration actions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AccountTakeoverRiskConfigurationType.NotifyConfiguration">
            <summary>
            Gets and sets the property NotifyConfiguration. 
            <para>
            The notify configuration used to construct email notifications.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest">
            <summary>
            Container for the parameters to the AddCustomAttributes operation.
            Adds additional user attributes to the user pool schema.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest.CustomAttributes">
            <summary>
            Gets and sets the property CustomAttributes. 
            <para>
            An array of custom attributes, such as Mutable and Name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to add custom attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AddCustomAttributesResponse">
            <summary>
            Represents the response from the server for the request to add custom attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest">
            <summary>
            Container for the parameters to the AdminAddUserToGroup operation.
            Adds the specified user to the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The group name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupResponse">
            <summary>
            This is the response object from the AdminAddUserToGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest">
            <summary>
            Container for the parameters to the AdminConfirmSignUp operation.
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            If your user pool configuration includes triggers, the AdminConfirmSignUp API action
            invokes the Lambda function that is specified for the <i>post confirmation</i> trigger.
            When Amazon Cognito invokes this function, it passes a JSON payload, which the function
            receives as input. In this payload, the <code>clientMetadata</code> attribute provides
            the data that you assigned to the ClientMetadata parameter in your AdminConfirmSignUp
            request. In your function code in Lambda, you can process the ClientMetadata value
            to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name for which you want to confirm user registration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for which you want to confirm user registration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpResponse">
            <summary>
            Represents the response from the server for the request to confirm registration.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType">
            <summary>
            The configuration for creating a new user profile.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType.AllowAdminCreateUserOnly">
            <summary>
            Gets and sets the property AllowAdminCreateUserOnly. 
            <para>
            Set to <code>True</code> if only the administrator is allowed to create user profiles.
            Set to <code>False</code> if users can sign themselves up via an app.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType.InviteMessageTemplate">
            <summary>
            Gets and sets the property InviteMessageTemplate. 
            <para>
            The message template to be used for the welcome message to new users.
            </para>
             
            <para>
            See also <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization">Customizing
            User Invitation Messages</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType.UnusedAccountValidityDays">
            <summary>
            Gets and sets the property UnusedAccountValidityDays. 
            <para>
            The user account expiration limit, in days, after which a new account that hasn't
            signed in is no longer usable. To reset the account after that time limit, you must
            call <code>AdminCreateUser</code> again, specifying <code>"RESEND"</code> for the
            <code>MessageAction</code> parameter. The default value for this parameter is 7. 
            </para>
             <note> 
            <para>
            If you set a value for <code>TemporaryPasswordValidityDays</code> in <code>PasswordPolicy</code>,
            that value will be used, and <code>UnusedAccountValidityDays</code> will be no longer
            be an available parameter for that user pool.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest">
            <summary>
            Container for the parameters to the AdminCreateUser operation.
            Creates a new user in the specified user pool.
            
             
            <para>
            If <code>MessageAction</code> isn't set, the default is to send a welcome message
            via email or phone (SMS).
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            This message is based on a template that you configured in your call to create or
            update a user pool. This template includes your custom sign-up instructions and placeholders
            for user name and temporary password.
            </para>
             
            <para>
            Alternatively, you can call <code>AdminCreateUser</code> with <code>SUPPRESS</code>
            for the <code>MessageAction</code> parameter, and Amazon Cognito won't send any email.
            
            </para>
             
            <para>
            In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until
            they sign in and change their password.
            </para>
             
            <para>
             <code>AdminCreateUser</code> requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the AdminCreateUser API action, Amazon Cognito invokes the function that is
            assigned to the <i>pre sign-up</i> trigger. When Amazon Cognito invokes this function,
            it passes a JSON payload, which the function receives as input. This payload contains
            a <code>clientMetadata</code> attribute, which provides the data that you assigned
            to the ClientMetadata parameter in your AdminCreateUser request. In your function
            code in Lambda, you can process the <code>clientMetadata</code> value to enhance your
            workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.DesiredDeliveryMediums">
            <summary>
            Gets and sets the property DesiredDeliveryMediums. 
            <para>
            Specify <code>"EMAIL"</code> if email will be used to send the welcome message. Specify
            <code>"SMS"</code> if the phone number will be used. The default value is <code>"SMS"</code>.
            You can specify more than one value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.ForceAliasCreation">
            <summary>
            Gets and sets the property ForceAliasCreation. 
            <para>
            This parameter is used only if the <code>phone_number_verified</code> or <code>email_verified</code>
            attribute is set to <code>True</code>. Otherwise, it is ignored.
            </para>
             
            <para>
            If this parameter is set to <code>True</code> and the phone number or email address
            specified in the UserAttributes parameter already exists as an alias with a different
            user, the API call will migrate the alias from the previous user to the newly created
            user. The previous user will no longer be able to log in using that alias.
            </para>
             
            <para>
            If this parameter is set to <code>False</code>, the API throws an <code>AliasExistsException</code>
            error if the alias already exists. The default value is <code>False</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.MessageAction">
            <summary>
            Gets and sets the property MessageAction. 
            <para>
            Set to <code>RESEND</code> to resend the invitation message to a user that already
            exists and reset the expiration limit on the user's account. Set to <code>SUPPRESS</code>
            to suppress sending the message. You can specify only one value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.TemporaryPassword">
            <summary>
            Gets and sets the property TemporaryPassword. 
            <para>
            The user's temporary password. This password must conform to the password policy that
            you specified when you created the user pool.
            </para>
             
            <para>
            The temporary password is valid only once. To complete the Admin Create User flow,
            the user must enter the temporary password in the sign-in page, along with a new password
            to be used in all future sign-ins.
            </para>
             
            <para>
            This parameter isn't required. If you don't specify a value, Amazon Cognito generates
            one for you.
            </para>
             
            <para>
            The temporary password can only be used until the user account expiration limit that
            you specified when you created the user pool. To reset the account after that time
            limit, you must call <code>AdminCreateUser</code> again, specifying <code>"RESEND"</code>
            for the <code>MessageAction</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs that contain user attributes and attribute values to
            be set for the user to be created. You can create a user without specifying any attributes
            other than <code>Username</code>. However, any attributes that you specify as required
            (when creating a user pool or in the <b>Attributes</b> tab of the console) either
            you should supply (in your call to <code>AdminCreateUser</code>) or the user should
            supply (when they sign up in response to your welcome message).
            </para>
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            To send a message inviting the user to sign up, you must specify the user's email
            address or phone number. You can do this in your call to AdminCreateUser or in the
            <b>Users</b> tab of the Amazon Cognito console for managing your user pools.
            </para>
             
            <para>
            In your call to <code>AdminCreateUser</code>, you can set the <code>email_verified</code>
            attribute to <code>True</code>, and you can set the <code>phone_number_verified</code>
            attribute to <code>True</code>. You can also do this by calling <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html">AdminUpdateUserAttributes</a>.
            </para>
             <ul> <li> 
            <para>
             <b>email</b>: The email address of the user to whom the message that contains the
            code and username will be sent. Required if the <code>email_verified</code> attribute
            is set to <code>True</code>, or if <code>"EMAIL"</code> is specified in the <code>DesiredDeliveryMediums</code>
            parameter.
            </para>
             </li> <li> 
            <para>
             <b>phone_number</b>: The phone number of the user to whom the message that contains
            the code and username will be sent. Required if the <code>phone_number_verified</code>
            attribute is set to <code>True</code>, or if <code>"SMS"</code> is specified in the
            <code>DesiredDeliveryMediums</code> parameter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user. Must be unique within the user pool. Must be a UTF-8 string
            between 1 and 128 characters. After the user is created, the username can't be changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where the user will be created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest.ValidationData">
            <summary>
            Gets and sets the property ValidationData. 
            <para>
            The user's validation data. This is an array of name-value pairs that contain user
            attributes and attribute values that you can use for custom validation, such as restricting
            the types of user accounts that can be registered. For example, you might choose to
            allow or disallow user sign-up based on the user's domain.
            </para>
             
            <para>
            To configure custom validation, you must create a Pre Sign-up Lambda trigger for the
            user pool as described in the Amazon Cognito Developer Guide. The Lambda trigger receives
            the validation data and uses it in the validation process.
            </para>
             
            <para>
            The user's validation data isn't persisted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminCreateUserResponse">
            <summary>
            Represents the response from the server to the request to create the user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminCreateUserResponse.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The newly created user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest">
            <summary>
            Container for the parameters to the AdminDeleteUserAttributes operation.
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest.UserAttributeNames">
            <summary>
            Gets and sets the property UserAttributeNames. 
            <para>
            An array of strings representing the user attribute names you want to delete.
            </para>
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user from which you would like to delete attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to delete user attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesResponse">
            <summary>
            Represents the response received from the server for a request to delete user attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest">
            <summary>
            Container for the parameters to the AdminDeleteUser operation.
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to delete the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDeleteUserResponse">
            <summary>
            This is the response object from the AdminDeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest">
            <summary>
            Container for the parameters to the AdminDisableProviderForUser operation.
            Prevents the user from signing in with the specified external (SAML or social) identity
            provider (IdP). If the user that you want to deactivate is a Amazon Cognito user pools
            native username + password user, they can't use their password to sign in. If the
            user to deactivate is a linked external IdP user, any link between that user and an
            existing user is removed. When the external user signs in again, and the user is no
            longer attached to the previously linked <code>DestinationUser</code>, the user must
            create a new user account. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html">AdminLinkProviderForUser</a>.
            
             
            <para>
            This action is enabled only for admin access and requires developer credentials.
            </para>
             
            <para>
            The <code>ProviderName</code> must match the value specified when creating an IdP
            for the pool. 
            </para>
             
            <para>
            To deactivate a native username + password user, the <code>ProviderName</code> value
            must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>.
            The <code>ProviderAttributeValue</code> must be the name that is used in the user
            pool for the user.
            </para>
             
            <para>
            The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code>
            for social IdPs. The <code>ProviderAttributeValue</code> must always be the exact
            subject that was used when the user was originally linked as a source user.
            </para>
             
            <para>
            For de-linking a SAML identity, there are two scenarios. If the linked identity has
            not yet been used to sign in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code>
            must be the same values that were used for the <code>SourceUser</code> when the identities
            were originally linked using <code> AdminLinkProviderForUser</code> call. (If the
            linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>,
            the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code>
            must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must
            be the subject of the SAML assertion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user to be disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserResponse">
            <summary>
            This is the response object from the AdminDisableProviderForUser operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest">
            <summary>
            Container for the parameters to the AdminDisableUser operation.
            Deactivates a user and revokes all access tokens for the user. A deactivated user
            can't sign in, but still appears in the responses to <code>GetUser</code> and <code>ListUsers</code>
            API requests.
            
             
            <para>
            You must make this API request with Amazon Web Services credentials that have <code>cognito-idp:AdminDisableUser</code>
            permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you want to disable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to disable the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminDisableUserResponse">
            <summary>
            Represents the response received from the server to disable the user as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest">
            <summary>
            Container for the parameters to the AdminEnableUser operation.
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you want to enable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to enable the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminEnableUserResponse">
            <summary>
            Represents the response from the server for the request to enable a user as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest">
            <summary>
            Container for the parameters to the AdminForgetDevice operation.
            Forgets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceResponse">
            <summary>
            This is the response object from the AdminForgetDevice operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest">
            <summary>
            Container for the parameters to the AdminGetDevice operation.
            Gets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceResponse">
            <summary>
            Gets the device response, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetDeviceResponse.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest">
            <summary>
            Container for the parameters to the AdminGetUser operation.
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to get information about the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse">
            <summary>
            Represents the response from the server from the request to get the specified user
            as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Indicates that the status is <code>enabled</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
             <i>This response parameter is no longer supported.</i> It provides information only
            about SMS MFA configurations. It doesn't provide information about time-based one-time
            password (TOTP) software token MFA configurations. To look up information about either
            type of MFA configuration, use UserMFASettingList instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.PreferredMfaSetting">
            <summary>
            Gets and sets the property PreferredMfaSetting. 
            <para>
            The user's preferred MFA setting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserCreateDate">
            <summary>
            Gets and sets the property UserCreateDate. 
            <para>
            The date the user was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserLastModifiedDate">
            <summary>
            Gets and sets the property UserLastModifiedDate. 
            <para>
            The date the user was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserMFASettingList">
            <summary>
            Gets and sets the property UserMFASettingList. 
            <para>
            The MFA options that are activated for the user. The possible values in this list
            are <code>SMS_MFA</code> and <code>SOFTWARE_TOKEN_MFA</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user about whom you're receiving information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminGetUserResponse.UserStatus">
            <summary>
            Gets and sets the property UserStatus. 
            <para>
            The user status. Can be one of the following:
            </para>
             <ul> <li> 
            <para>
            UNCONFIRMED - User has been created but not confirmed.
            </para>
             </li> <li> 
            <para>
            CONFIRMED - User has been confirmed.
            </para>
             </li> <li> 
            <para>
            ARCHIVED - User is no longer active.
            </para>
             </li> <li> 
            <para>
            UNKNOWN - User status isn't known.
            </para>
             </li> <li> 
            <para>
            RESET_REQUIRED - User is confirmed, but the user must request a code and reset their
            password before they can sign in.
            </para>
             </li> <li> 
            <para>
            FORCE_CHANGE_PASSWORD - The user is confirmed and the user can sign in using a temporary
            password, but on first sign-in, the user must change their password to a new value
            before doing anything else. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest">
            <summary>
            Container for the parameters to the AdminInitiateAuth operation.
            Initiates the authentication flow, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The analytics metadata for collecting Amazon Pinpoint metrics for <code>AdminInitiateAuth</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.AuthFlow">
            <summary>
            Gets and sets the property AuthFlow. 
            <para>
            The authentication flow for this call to run. The API action will depend on this value.
            For example:
            </para>
             <ul> <li> 
            <para>
             <code>REFRESH_TOKEN_AUTH</code> will take in a valid refresh token and return new
            tokens.
            </para>
             </li> <li> 
            <para>
             <code>USER_SRP_AUTH</code> will take in <code>USERNAME</code> and <code>SRP_A</code>
            and return the Secure Remote Password (SRP) protocol variables to be used for next
            challenge execution.
            </para>
             </li> <li> 
            <para>
             <code>ADMIN_USER_PASSWORD_AUTH</code> will take in <code>USERNAME</code> and <code>PASSWORD</code>
            and return the next challenge or tokens.
            </para>
             </li> </ul> 
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>USER_SRP_AUTH</code>: Authentication flow for the Secure Remote Password (SRP)
            protocol.
            </para>
             </li> <li> 
            <para>
             <code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>: Authentication flow for
            refreshing the access token and ID token by supplying a valid refresh token.
            </para>
             </li> <li> 
            <para>
             <code>CUSTOM_AUTH</code>: Custom authentication flow.
            </para>
             </li> <li> 
            <para>
             <code>ADMIN_NO_SRP_AUTH</code>: Non-SRP authentication flow; you can pass in the
            USERNAME and PASSWORD directly if the flow is enabled for calling the app client.
            </para>
             </li> <li> 
            <para>
             <code>ADMIN_USER_PASSWORD_AUTH</code>: Admin-based user password authentication.
            This replaces the <code>ADMIN_NO_SRP_AUTH</code> authentication flow. In this flow,
            Amazon Cognito receives the password in the request instead of using the SRP process
            to verify passwords.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.AuthParameters">
            <summary>
            Gets and sets the property AuthParameters. 
            <para>
            The authentication parameters. These are inputs corresponding to the <code>AuthFlow</code>
            that you're invoking. The required values depend on the value of <code>AuthFlow</code>:
            </para>
             <ul> <li> 
            <para>
            For <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>
            (required), <code>SECRET_HASH</code> (required if the app client is configured with
            a client secret), <code>DEVICE_KEY</code>.
            </para>
             </li> <li> 
            <para>
            For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>: <code>REFRESH_TOKEN</code> (required),
            <code>SECRET_HASH</code> (required if the app client is configured with a client secret),
            <code>DEVICE_KEY</code>.
            </para>
             </li> <li> 
            <para>
            For <code>ADMIN_NO_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SECRET_HASH</code>
            (if app client is configured with client secret), <code>PASSWORD</code> (required),
            <code>DEVICE_KEY</code>.
            </para>
             </li> <li> 
            <para>
            For <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required), <code>SECRET_HASH</code>
            (if app client is configured with client secret), <code>DEVICE_KEY</code>. To start
            the authentication flow with password verification, include <code>ChallengeName: SRP_A</code>
            and <code>SRP_A: (The SRP_A Value)</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for certain custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the AdminInitiateAuth API action, Amazon Cognito invokes the Lambda functions
            that are specified for various triggers. The ClientMetadata value is passed as input
            to the functions for only the following triggers:
            </para>
             <ul> <li> 
            <para>
            Pre signup
            </para>
             </li> <li> 
            <para>
            Pre authentication
            </para>
             </li> <li> 
            <para>
            User migration
            </para>
             </li> </ul> 
            <para>
            When Amazon Cognito invokes the functions for these triggers, it passes a JSON payload,
            which the function receives as input. This payload contains a <code>validationData</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your AdminInitiateAuth request. In your function code in Lambda, you can process
            the <code>validationData</code> value to enhance your workflow for your specific needs.
            </para>
             
            <para>
            When you use the AdminInitiateAuth API action, Amazon Cognito also invokes the functions
            for the following triggers, but it doesn't provide the ClientMetadata value as input:
            </para>
             <ul> <li> 
            <para>
            Post authentication
            </para>
             </li> <li> 
            <para>
            Custom message
            </para>
             </li> <li> 
            <para>
            Pre token generation
            </para>
             </li> <li> 
            <para>
            Create auth challenge
            </para>
             </li> <li> 
            <para>
            Define auth challenge
            </para>
             </li> <li> 
            <para>
            Verify auth challenge
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.ContextData">
            <summary>
            Gets and sets the property ContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The ID of the Amazon Cognito user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse">
            <summary>
            Initiates the authentication response, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result of the authentication response. This is only returned if the caller doesn't
            need to pass another challenge. If the caller does need to pass another challenge
            before it gets tokens, <code>ChallengeName</code>, <code>ChallengeParameters</code>,
            and <code>Session</code> are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge that you're responding to with this call. This is returned
            in the <code>AdminInitiateAuth</code> response if you must pass another challenge.
            </para>
             <ul> <li> 
            <para>
             <code>MFA_SETUP</code>: If MFA is required, users who don't have at least one of
            the MFA methods set up are presented with an <code>MFA_SETUP</code> challenge. The
            user must set up at least one MFA type to continue to authenticate.
            </para>
             </li> <li> 
            <para>
             <code>SELECT_MFA_TYPE</code>: Selects the MFA type. Valid MFA options are <code>SMS_MFA</code>
            for text SMS MFA, and <code>SOFTWARE_TOKEN_MFA</code> for time-based one-time password
            (TOTP) software token MFA.
            </para>
             </li> <li> 
            <para>
             <code>SMS_MFA</code>: Next challenge is to supply an <code>SMS_MFA_CODE</code>, delivered
            via SMS.
            </para>
             </li> <li> 
            <para>
             <code>PASSWORD_VERIFIER</code>: Next challenge is to supply <code>PASSWORD_CLAIM_SIGNATURE</code>,
            <code>PASSWORD_CLAIM_SECRET_BLOCK</code>, and <code>TIMESTAMP</code> after the client-side
            SRP calculations.
            </para>
             </li> <li> 
            <para>
             <code>CUSTOM_CHALLENGE</code>: This is returned if your custom authentication flow
            determines that the user should pass another challenge before tokens are issued.
            </para>
             </li> <li> 
            <para>
             <code>DEVICE_SRP_AUTH</code>: If device tracking was activated in your user pool
            and the previous challenges were passed, this challenge is returned so that Amazon
            Cognito can start tracking this device.
            </para>
             </li> <li> 
            <para>
             <code>DEVICE_PASSWORD_VERIFIER</code>: Similar to <code>PASSWORD_VERIFIER</code>,
            but for devices only.
            </para>
             </li> <li> 
            <para>
             <code>ADMIN_NO_SRP_AUTH</code>: This is returned if you must authenticate with <code>USERNAME</code>
            and <code>PASSWORD</code> directly. An app client must be enabled to use this flow.
            </para>
             </li> <li> 
            <para>
             <code>NEW_PASSWORD_REQUIRED</code>: For users who are required to change their passwords
            after successful first login. Respond to this challenge with <code>NEW_PASSWORD</code>
            and any required attributes that Amazon Cognito returned in the <code>requiredAttributes</code>
            parameter. You can also set values for attributes that aren't required by your user
            pool and that your app client can write. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminRespondToAuthChallenge.html">AdminRespondToAuthChallenge</a>.
            </para>
             <note> 
            <para>
            In a <code>NEW_PASSWORD_REQUIRED</code> challenge response, you can't modify a required
            attribute that already has a value. In <code>AdminRespondToAuthChallenge</code>, set
            a value for any keys that Amazon Cognito returned in the <code>requiredAttributes</code>
            parameter, then use the <code>AdminUpdateUserAttributes</code> API operation to modify
            the value of any additional attributes.
            </para>
             </note> </li> <li> 
            <para>
             <code>MFA_SETUP</code>: For users who are required to set up an MFA factor before
            they can sign in. The MFA types activated for the user pool will be listed in the
            challenge parameters <code>MFA_CAN_SETUP</code> value. 
            </para>
             
            <para>
             To set up software token MFA, use the session returned here from <code>InitiateAuth</code>
            as an input to <code>AssociateSoftwareToken</code>, and use the session returned by
            <code>VerifySoftwareToken</code> as an input to <code>RespondToAuthChallenge</code>
            with challenge name <code>MFA_SETUP</code> to complete sign-in. To set up SMS MFA,
            users will need help from an administrator to add a phone number to their account
            and then call <code>InitiateAuth</code> again to restart sign-in.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters. These are returned to you in the <code>AdminInitiateAuth</code>
            response if you must pass another challenge. The responses in this parameter should
            be used to compute inputs to the next call (<code>AdminRespondToAuthChallenge</code>).
            </para>
             
            <para>
            All challenges require <code>USERNAME</code> and <code>SECRET_HASH</code> (if applicable).
            </para>
             
            <para>
            The value of the <code>USER_ID_FOR_SRP</code> attribute is the user's actual username,
            not an alias (such as email address or phone number), even if you specified an alias
            in your call to <code>AdminInitiateAuth</code>. This happens because, in the <code>AdminRespondToAuthChallenge</code>
            API <code>ChallengeResponses</code>, the <code>USERNAME</code> attribute can't be
            an alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            If <code>AdminInitiateAuth</code> or <code>AdminRespondToAuthChallenge</code> API
            call determines that the caller must pass another challenge, they return a session
            with other challenge parameters. This session should be passed as it is to the next
            <code>AdminRespondToAuthChallenge</code> API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest">
            <summary>
            Container for the parameters to the AdminLinkProviderForUser operation.
            Links an existing user account in a user pool (<code>DestinationUser</code>) to an
            identity from an external IdP (<code>SourceUser</code>) based on a specified attribute
            name and value from the external IdP. This allows you to create a link from the existing
            user account to an external federated user identity that has not yet been used to
            sign in. You can then use the federated user identity to sign in as the existing user
            account. 
            
             
            <para>
             For example, if there is an existing user with a username and password, this API
            links that user to a federated user identity. When the user signs in with a federated
            user identity, they sign in as the existing user account.
            </para>
             <note> 
            <para>
            The maximum number of federated identities linked to a user is five.
            </para>
             </note> <important> 
            <para>
            Because this API allows a user with an external federated identity to sign in as an
            existing user in the user pool, it is critical that it only be used with external
            IdPs and provider attributes that have been trusted by the application owner.
            </para>
             </important> 
            <para>
            This action is administrative and requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest.DestinationUser">
            <summary>
            Gets and sets the property DestinationUser. 
            <para>
            The existing user in the user pool that you want to assign to the external IdP user
            account. This user can be a native (Username + Password) Amazon Cognito user pools
            user or a federated user (for example, a SAML or Facebook user). If the user doesn't
            exist, Amazon Cognito generates an exception. Amazon Cognito returns this user when
            the new user (with the linked IdP attribute) signs in.
            </para>
             
            <para>
            For a native username + password user, the <code>ProviderAttributeValue</code> for
            the <code>DestinationUser</code> should be the username in the user pool. For a federated
            user, it should be the provider-specific <code>user_id</code>.
            </para>
             
            <para>
            The <code>ProviderAttributeName</code> of the <code>DestinationUser</code> is ignored.
            </para>
             
            <para>
            The <code>ProviderName</code> should be set to <code>Cognito</code> for users in Cognito
            user pools.
            </para>
             <important> 
            <para>
            All attributes in the DestinationUser profile must be mutable. If you have assigned
            the user any immutable custom attributes, the operation won't succeed.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest.SourceUser">
            <summary>
            Gets and sets the property SourceUser. 
            <para>
            An external IdP account for a user who doesn't exist yet in the user pool. This user
            must be a federated user (for example, a SAML or Facebook user), not another native
            user.
            </para>
             
            <para>
            If the <code>SourceUser</code> is using a federated social IdP, such as Facebook,
            Google, or Login with Amazon, you must set the <code>ProviderAttributeName</code>
            to <code>Cognito_Subject</code>. For social IdPs, the <code>ProviderName</code> will
            be <code>Facebook</code>, <code>Google</code>, or <code>LoginWithAmazon</code>, and
            Amazon Cognito will automatically parse the Facebook, Google, and Login with Amazon
            tokens for <code>id</code>, <code>sub</code>, and <code>user_id</code>, respectively.
            The <code>ProviderAttributeValue</code> for the user must be the same value as the
            <code>id</code>, <code>sub</code>, or <code>user_id</code> value found in the social
            IdP token.
            </para>
              
            <para>
            For SAML, the <code>ProviderAttributeName</code> can be any value that matches a claim
            in the SAML assertion. If you want to link SAML users based on the subject of the
            SAML assertion, you should map the subject to a claim through the SAML IdP and submit
            that claim name as the <code>ProviderAttributeName</code>. If you set <code>ProviderAttributeName</code>
            to <code>Cognito_Subject</code>, Amazon Cognito will automatically parse the default
            unique identifier found in the subject from the SAML token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserResponse">
            <summary>
            This is the response object from the AdminLinkProviderForUser operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest">
            <summary>
            Container for the parameters to the AdminListDevices operation.
            Lists devices, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the devices request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse">
            <summary>
            Lists the device's response, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            The devices in the list of devices response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListDevicesResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest">
            <summary>
            Container for the parameters to the AdminListGroupsForUser operation.
            Lists the groups that the user belongs to.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the request to list groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse">
            <summary>
            This is the response object from the AdminListGroupsForUser operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The groups that the user belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest">
            <summary>
            Container for the parameters to the AdminListUserAuthEvents operation.
            A history of user activity and any risks detected as part of Amazon Cognito advanced
            security.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of authentication events to return. Returns 60 events if you set
            <code>MaxResults</code> to 0, or if you don't include a <code>MaxResults</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user pool username or an alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsResponse">
            <summary>
            This is the response object from the AdminListUserAuthEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsResponse.AuthEvents">
            <summary>
            Gets and sets the property AuthEvents. 
            <para>
            The response object. It includes the <code>EventID</code>, <code>EventType</code>,
            <code>CreationDate</code>, <code>EventRisk</code>, and <code>EventResponse</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest">
            <summary>
            Container for the parameters to the AdminRemoveUserFromGroup operation.
            Removes the specified user from the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The group name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The username for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupResponse">
            <summary>
            This is the response object from the AdminRemoveUserFromGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest">
            <summary>
            Container for the parameters to the AdminResetUserPassword operation.
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the AdminResetUserPassword API action, Amazon Cognito invokes the function
            that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your AdminResetUserPassword request.
            In your function code in Lambda, you can process the <code>clientMetadata</code> value
            to enhance your workflow for your specific needs. 
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user whose password you want to reset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to reset the user's password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordResponse">
            <summary>
            Represents the response from the server to reset a user password as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest">
            <summary>
            Container for the parameters to the AdminRespondToAuthChallenge operation.
            Responds to an authentication challenge, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The analytics metadata for collecting Amazon Pinpoint metrics for <code>AdminRespondToAuthChallenge</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The challenge name. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html">AdminInitiateAuth</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ChallengeResponses">
            <summary>
            Gets and sets the property ChallengeResponses. 
            <para>
            The challenge responses. These are inputs corresponding to the value of <code>ChallengeName</code>,
            for example:
            </para>
             <ul> <li> 
            <para>
             <code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>, <code>USERNAME</code>, <code>SECRET_HASH</code>
            (if app client is configured with client secret).
            </para>
             </li> <li> 
            <para>
             <code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,
            <code>TIMESTAMP</code>, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client
            is configured with client secret).
            </para>
             <note> 
            <para>
             <code>PASSWORD_VERIFIER</code> requires <code>DEVICE_KEY</code> when signing in with
            a remembered device.
            </para>
             </note> </li> <li> 
            <para>
             <code>ADMIN_NO_SRP_AUTH</code>: <code>PASSWORD</code>, <code>USERNAME</code>, <code>SECRET_HASH</code>
            (if app client is configured with client secret). 
            </para>
             </li> <li> 
            <para>
             <code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>, <code>USERNAME</code>,
            <code>SECRET_HASH</code> (if app client is configured with client secret). To set
            any required attributes that Amazon Cognito returned as <code>requiredAttributes</code>
            in the <code>AdminInitiateAuth</code> response, add a <code>userAttributes.<i>attributename</i>
            </code> parameter. This parameter can also set values for writable attributes that
            aren't required by your user pool.
            </para>
             <note> 
            <para>
            In a <code>NEW_PASSWORD_REQUIRED</code> challenge response, you can't modify a required
            attribute that already has a value. In <code>AdminRespondToAuthChallenge</code>, set
            a value for any keys that Amazon Cognito returned in the <code>requiredAttributes</code>
            parameter, then use the <code>AdminUpdateUserAttributes</code> API operation to modify
            the value of any additional attributes.
            </para>
             </note> </li> <li> 
            <para>
             <code>MFA_SETUP</code> requires <code>USERNAME</code>, plus you must use the session
            value returned by <code>VerifySoftwareToken</code> in the <code>Session</code> parameter.
            </para>
             </li> </ul> 
            <para>
            The value of the <code>USERNAME</code> attribute must be the user's actual username,
            not an alias (such as an email address or phone number). To make this simpler, the
            <code>AdminInitiateAuth</code> response includes the actual username value in the
            <code>USERNAMEUSER_ID_FOR_SRP</code> attribute. This happens even if you specified
            an alias in your call to <code>AdminInitiateAuth</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the AdminRespondToAuthChallenge API action, Amazon Cognito invokes any functions
            that you have assigned to the following triggers: 
            </para>
             <ul> <li> 
            <para>
            pre sign-up
            </para>
             </li> <li> 
            <para>
            custom message
            </para>
             </li> <li> 
            <para>
            post authentication
            </para>
             </li> <li> 
            <para>
            user migration
            </para>
             </li> <li> 
            <para>
            pre token generation
            </para>
             </li> <li> 
            <para>
            define auth challenge
            </para>
             </li> <li> 
            <para>
            create auth challenge
            </para>
             </li> <li> 
            <para>
            verify auth challenge response
            </para>
             </li> </ul> 
            <para>
            When Amazon Cognito invokes any of these functions, it passes a JSON payload, which
            the function receives as input. This payload contains a <code>clientMetadata</code>
            attribute that provides the data that you assigned to the ClientMetadata parameter
            in your AdminRespondToAuthChallenge request. In your function code in Lambda, you
            can process the <code>clientMetadata</code> value to enhance your workflow for your
            specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.ContextData">
            <summary>
            Gets and sets the property ContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            If an <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code> API call determines
            that the caller must pass another challenge, it returns a session with other challenge
            parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
            API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The ID of the Amazon Cognito user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse">
            <summary>
            Responds to the authentication challenge, as an administrator.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result returned by the server in response to the authentication request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html">AdminInitiateAuth</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html">AdminInitiateAuth</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            If the caller must pass another challenge, they return a session with other challenge
            parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
            API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest">
            <summary>
            Container for the parameters to the AdminSetUserMFAPreference operation.
            The user's multi-factor authentication (MFA) preference, including which MFA options
            are activated, and if any are preferred. Only one factor can be set as preferred.
            The preferred MFA factor will be used to authenticate a user if multiple factors are
            activated. If multiple options are activated and no preference is set, a challenge
            to choose an MFA option will be returned during sign-in.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest.SMSMfaSettings">
            <summary>
            Gets and sets the property SMSMfaSettings. 
            <para>
            The SMS text message MFA settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest.SoftwareTokenMfaSettings">
            <summary>
            Gets and sets the property SoftwareTokenMfaSettings. 
            <para>
            The time-based one-time password software token MFA settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user pool username or alias.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceResponse">
            <summary>
            This is the response object from the AdminSetUserMFAPreference operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest">
            <summary>
            Container for the parameters to the AdminSetUserPassword operation.
            Sets the specified user's password in a user pool as an administrator. Works on any
            user. 
            
             
            <para>
            The password can be temporary or permanent. If it is temporary, the user status enters
            the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries to sign in,
            the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code>
            challenge. If the user doesn't sign in before it expires, the user won't be able to
            sign in, and an administrator must reset their password. 
            </para>
             
            <para>
            Once the user has set a new password, or the password is permanent, the user status
            is set to <code>Confirmed</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest.Permanent">
            <summary>
            Gets and sets the property Permanent. 
            <para>
             <code>True</code> if the password is permanent, <code>False</code> if it is temporary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user whose password you want to set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to set the user's password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordResponse">
            <summary>
            This is the response object from the AdminSetUserPassword operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest">
            <summary>
            Container for the parameters to the AdminSetUserSettings operation.
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html">AdminSetUserMFAPreference</a>
            instead.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            You can use this parameter only to set an SMS configuration that uses SMS for delivery.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user whose options you're setting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The ID of the user pool that contains the user whose options you're setting.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsResponse">
            <summary>
            Represents the response from the server to set user settings as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest">
            <summary>
            Container for the parameters to the AdminUpdateAuthEventFeedback operation.
            Provides feedback for an authentication event indicating if it was from a valid user.
            This feedback is used for improving the risk evaluation decision for the user pool
            as part of Amazon Cognito advanced security.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The authentication event ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest.FeedbackValue">
            <summary>
            Gets and sets the property FeedbackValue. 
            <para>
            The authentication event feedback value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user pool username.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackResponse">
            <summary>
            This is the response object from the AdminUpdateAuthEventFeedback operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest">
            <summary>
            Container for the parameters to the AdminUpdateDeviceStatus operation.
            Updates the device status as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.DeviceRememberedStatus">
            <summary>
            Gets and sets the property DeviceRememberedStatus. 
            <para>
            The status indicating whether a device has been remembered or not.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusResponse">
            <summary>
            The status response to the request to update the device, as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest">
            <summary>
            Container for the parameters to the AdminUpdateUserAttributes operation.
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            In addition to updating user attributes, this API can also be used to mark phone and
            email as verified.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the AdminUpdateUserAttributes API action, Amazon Cognito invokes the function
            that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your AdminUpdateUserAttributes
            request. In your function code in Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            If your user pool requires verification before Amazon Cognito updates an attribute
            value that you specify in this request, Amazon Cognito doesn’t immediately update
            the value of that attribute. After your user receives and responds to a verification
            message to verify the new value, Amazon Cognito updates the attribute value. Your
            user can sign in and receive messages with the original attribute value until they
            verify the new value.
            </para>
             
            <para>
            To update the value of an attribute that requires verification in the same API request,
            include the <code>email_verified</code> or <code>phone_number_verified</code> attribute,
            with a value of <code>true</code>. If you set the <code>email_verified</code> or <code>phone_number_verified</code>
            value for an <code>email</code> or <code>phone_number</code> attribute that requires
            verification to <code>true</code>, Amazon Cognito doesn’t send a verification message
            to your user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user for whom you want to update user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to update user attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesResponse">
            <summary>
            Represents the response from the server for the request to update user attributes
            as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest">
            <summary>
            Container for the parameters to the AdminUserGlobalSignOut operation.
            Signs out a user from all devices. You must sign <code>AdminUserGlobalSignOut</code>
            requests with Amazon Web Services credentials. It also invalidates all refresh tokens
            that Amazon Cognito has issued to a user. The user's current access and ID tokens
            remain valid until they expire. By default, access and ID tokens expire one hour after
            they're issued. A user can still use a hosted UI cookie to retrieve new tokens for
            the duration of the cookie validity period of 1 hour.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutResponse">
            <summary>
            The global sign-out response, as an administrator.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            <summary>
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String)">
            <summary>
            Constructs a new AliasExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AliasExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AliasExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.AliasExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType">
            <summary>
            The Amazon Pinpoint analytics configuration necessary to collect metrics for a user
            pool.
            
             <note> 
            <para>
            In Regions where Amazon Pinpointisn't available, user pools only support sending events
            to Amazon Pinpoint projects in us-east-1. In Regions where Amazon Pinpoint is available,
            user pools support sending events to Amazon Pinpoint projects within that same Region.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType.ApplicationArn">
            <summary>
            Gets and sets the property ApplicationArn. 
            <para>
            The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can use the Amazon
            Pinpoint project to integrate with the chosen user pool Client. Amazon Cognito publishes
            events to the Amazon Pinpoint project that the app ARN declares.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType.ApplicationId">
            <summary>
            Gets and sets the property ApplicationId. 
            <para>
            The application ID for an Amazon Pinpoint application.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an Identity and Access Management role that authorizes Amazon Cognito to
            publish events to Amazon Pinpoint analytics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType.UserDataShared">
            <summary>
            Gets and sets the property UserDataShared. 
            <para>
            If <code>UserDataShared</code> is <code>true</code>, Amazon Cognito includes user
            data in the events that it publishes to Amazon Pinpoint analytics.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AnalyticsMetadataType">
            <summary>
            An Amazon Pinpoint analytics endpoint.
            
             
            <para>
            An endpoint uniquely identifies a mobile device, email address, or phone number that
            can receive messages from Amazon Pinpoint analytics. For more information about Amazon
            Web Services Regions that can contain Amazon Pinpoint resources for use with Amazon
            Cognito user pools, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-pinpoint-integration.html">Using
            Amazon Pinpoint analytics with Amazon Cognito user pools</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AnalyticsMetadataType.AnalyticsEndpointId">
            <summary>
            Gets and sets the property AnalyticsEndpointId. 
            <para>
            The endpoint ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest">
            <summary>
            Container for the parameters to the AssociateSoftwareToken operation.
            Begins setup of time-based one-time password (TOTP) multi-factor authentication (MFA)
            for a user, with a unique private key that Amazon Cognito generates and returns in
            the API response. You can authorize an <code>AssociateSoftwareToken</code> request
            with either the user's access token, or a session string from a challenge response
            that you received from Amazon Cognito.
            
             <note> 
            <para>
            Amazon Cognito disassociates an existing software token when you verify the new token
            in a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifySoftwareToken.html">
            VerifySoftwareToken</a> API request. If you don't verify the software token and your
            user pool doesn't require MFA, the user can then authenticate with user name and password
            credentials alone. If your user pool requires TOTP MFA, Amazon Cognito generates an
            <code>MFA_SETUP</code> or <code>SOFTWARE_TOKEN_SETUP</code> challenge each time your
            user signs. Complete setup with <code>AssociateSoftwareToken</code> and <code>VerifySoftwareToken</code>.
            </para>
             
            <para>
            After you set up software token MFA for your user, Amazon Cognito generates a <code>SOFTWARE_TOKEN_MFA</code>
            challenge when they authenticate. Respond to this challenge with your user's TOTP.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose software token you
            want to generate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            This allows authentication of the user as part of the MFA setup process.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenResponse">
            <summary>
            This is the response object from the AssociateSoftwareToken operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenResponse.SecretCode">
            <summary>
            Gets and sets the property SecretCode. 
            <para>
            A unique generated shared secret code that is used in the TOTP algorithm to generate
            a one-time code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            This allows authentication of the user as part of the MFA setup process.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AttributeType">
            <summary>
            Specifies whether the attribute is standard or custom.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AttributeType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AttributeType.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType">
            <summary>
            The authentication result.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user who you want to authenticate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.ExpiresIn">
            <summary>
            Gets and sets the property ExpiresIn. 
            <para>
            The expiration period of the authentication result in seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.IdToken">
            <summary>
            Gets and sets the property IdToken. 
            <para>
            The ID token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.NewDeviceMetadata">
            <summary>
            Gets and sets the property NewDeviceMetadata. 
            <para>
            The new device metadata from an authentication result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.RefreshToken">
            <summary>
            Gets and sets the property RefreshToken. 
            <para>
            The refresh token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthenticationResultType.TokenType">
            <summary>
            Gets and sets the property TokenType. 
            <para>
            The token type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AuthEventType">
            <summary>
            The authentication event type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.ChallengeResponses">
            <summary>
            Gets and sets the property ChallengeResponses. 
            <para>
            The challenge responses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The creation date
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.EventContextData">
            <summary>
            Gets and sets the property EventContextData. 
            <para>
            The user context data captured at the time of an event request. This value provides
            additional information about the client from which event the request is received.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.EventFeedback">
            <summary>
            Gets and sets the property EventFeedback. 
            <para>
            A flag specifying the user feedback captured at the time of an event request is good
            or bad. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The event ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.EventResponse">
            <summary>
            Gets and sets the property EventResponse. 
            <para>
            The event response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.EventRisk">
            <summary>
            Gets and sets the property EventRisk. 
            <para>
            The event risk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AuthEventType.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ChallengeResponseType">
            <summary>
            The challenge response type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChallengeResponseType.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The challenge name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChallengeResponseType.ChallengeResponse">
            <summary>
            Gets and sets the property ChallengeResponse. 
            <para>
            The challenge response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest">
            <summary>
            Container for the parameters to the ChangePassword operation.
            Changes the password for a specified user in a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose password you want
            to change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.PreviousPassword">
            <summary>
            Gets and sets the property PreviousPassword. 
            <para>
            The old password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.ProposedPassword">
            <summary>
            Gets and sets the property ProposedPassword. 
            <para>
            The new password.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ChangePasswordResponse">
            <summary>
            The response from the server to the change password request.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType">
            <summary>
            The delivery details for an email or SMS message that Amazon Cognito sent for authentication
            or verification.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the attribute that Amazon Cognito verifies with the code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType.DeliveryMedium">
            <summary>
            Gets and sets the property DeliveryMedium. 
            <para>
            The method that Amazon Cognito used to send the code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CodeDeliveryDetailsType.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The email address or phone number destination where Amazon Cognito sent the code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            <summary>
            This exception is thrown when a verification code fails to deliver successfully.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String)">
            <summary>
            Constructs a new CodeDeliveryFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeDeliveryFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CodeDeliveryFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            <summary>
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new CodeMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CodeMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CodeMismatchException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CodeMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsActionsType">
            <summary>
            The compromised credentials actions type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsActionsType.EventAction">
            <summary>
            Gets and sets the property EventAction. 
            <para>
            The event action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsRiskConfigurationType">
            <summary>
            The compromised credentials risk configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsRiskConfigurationType.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The compromised credentials risk configuration actions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsRiskConfigurationType.EventFilter">
            <summary>
            Gets and sets the property EventFilter. 
            <para>
            Perform the action for these events. The default is to perform all events if no event
            filter is specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            <summary>
            This exception is thrown if two or more modifications are happening concurrently.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentModificationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest">
            <summary>
            Container for the parameters to the ConfirmDevice operation.
            Confirms tracking of the device. This API call is the call that begins device tracking.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose device you want
            to confirm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest.DeviceSecretVerifierConfig">
            <summary>
            Gets and sets the property DeviceSecretVerifierConfig. 
            <para>
            The configuration of the device secret verifier.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceResponse">
            <summary>
            Confirms the device response.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmDeviceResponse.UserConfirmationNecessary">
            <summary>
            Gets and sets the property UserConfirmationNecessary. 
            <para>
            Indicates whether the user confirmation must confirm the device response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest">
            <summary>
            Container for the parameters to the ConfirmForgotPassword operation.
            Allows a user to enter a confirmation code to reset a forgotten password.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The Amazon Pinpoint analytics metadata for collecting metrics for <code>ConfirmForgotPassword</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID of the app associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the ConfirmForgotPassword API action, Amazon Cognito invokes the function
            that is assigned to the <i>post confirmation</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your ConfirmForgotPassword request.
            In your function code in Lambda, you can process the <code>clientMetadata</code> value
            to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.ConfirmationCode">
            <summary>
            Gets and sets the property ConfirmationCode. 
            <para>
            The confirmation code from your user's request to reset their password. For more information,
            see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ForgotPassword.html">ForgotPassword</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The new password that your user wants to set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.UserContextData">
            <summary>
            Gets and sets the property UserContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user for whom you want to enter a code to retrieve a forgotten
            password.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordResponse">
            <summary>
            The response from the server that results from a user's request to retrieve a forgotten
            password.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest">
            <summary>
            Container for the parameters to the ConfirmSignUp operation.
            Confirms registration of a new user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The Amazon Pinpoint analytics metadata for collecting metrics for <code>ConfirmSignUp</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the app client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the ConfirmSignUp API action, Amazon Cognito invokes the function that is
            assigned to the <i>post confirmation</i> trigger. When Amazon Cognito invokes this
            function, it passes a JSON payload, which the function receives as input. This payload
            contains a <code>clientMetadata</code> attribute, which provides the data that you
            assigned to the ClientMetadata parameter in your ConfirmSignUp request. In your function
            code in Lambda, you can process the <code>clientMetadata</code> value to enhance your
            workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.ConfirmationCode">
            <summary>
            Gets and sets the property ConfirmationCode. 
            <para>
            The confirmation code sent by a user's request to confirm registration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.ForceAliasCreation">
            <summary>
            Gets and sets the property ForceAliasCreation. 
            <para>
            Boolean to be specified to force user confirmation irrespective of existing alias.
            By default set to <code>False</code>. If this parameter is set to <code>True</code>
            and the phone number/email used for sign up confirmation already exists as an alias
            with a different user, the API call will migrate the alias from the previous user
            to the newly created user being confirmed. If set to <code>False</code>, the API will
            throw an <b>AliasExistsException</b> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.UserContextData">
            <summary>
            Gets and sets the property UserContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user whose registration you want to confirm.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ConfirmSignUpResponse">
            <summary>
            Represents the response from the server for the registration confirmation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ContextDataType">
            <summary>
            Contextual user data type used for evaluating the risk of an unexpected event by Amazon
            Cognito advanced security.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ContextDataType.EncodedData">
            <summary>
            Gets and sets the property EncodedData. 
            <para>
            Encoded device-fingerprint details that your app collected with the Amazon Cognito
            context data collection library. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-adaptive-authentication.html#user-pool-settings-adaptive-authentication-device-fingerprint">Adding
            user device and session data to API requests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ContextDataType.HttpHeaders">
            <summary>
            Gets and sets the property HttpHeaders. 
            <para>
            HttpHeaders received on your server in same order.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ContextDataType.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The source IP address of your user's device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ContextDataType.ServerName">
            <summary>
            Gets and sets the property ServerName. 
            <para>
            Your server endpoint where this API is invoked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ContextDataType.ServerPath">
            <summary>
            Gets and sets the property ServerPath. 
            <para>
            Your server path where this API is invoked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest">
            <summary>
            Container for the parameters to the CreateGroup operation.
            Creates a new group in the specified user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group. Must be unique.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.Precedence">
            <summary>
            Gets and sets the property Precedence. 
            <para>
            A non-negative integer value that specifies the precedence of this group relative
            to the other groups that a user can belong to in the user pool. Zero is the highest
            precedence value. Groups with lower <code>Precedence</code> values take precedence
            over groups with higher or null <code>Precedence</code> values. If a user belongs
            to two or more groups, it is the group with the lowest precedence value whose role
            ARN is given in the user's tokens for the <code>cognito:roles</code> and <code>cognito:preferred_role</code>
            claims.
            </para>
             
            <para>
            Two groups can have the same <code>Precedence</code> value. If this happens, neither
            group takes precedence over the other. If two groups with the same <code>Precedence</code>
            have the same role ARN, that role is used in the <code>cognito:preferred_role</code>
            claim in tokens for users in each group. If the two groups have different role ARNs,
            the <code>cognito:preferred_role</code> claim isn't set in users' tokens.
            </para>
             
            <para>
            The default <code>Precedence</code> value is null. The maximum <code>Precedence</code>
            value is <code>2^31-1</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The role Amazon Resource Name (ARN) for the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateGroupResponse">
            <summary>
            This is the response object from the CreateGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateGroupResponse.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The group object for the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest">
            <summary>
            Container for the parameters to the CreateIdentityProvider operation.
            Creates an IdP for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest.AttributeMapping">
            <summary>
            Gets and sets the property AttributeMapping. 
            <para>
            A mapping of IdP attributes to standard and custom user pool attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest.IdpIdentifiers">
            <summary>
            Gets and sets the property IdpIdentifiers. 
            <para>
            A list of IdP identifiers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest.ProviderDetails">
            <summary>
            Gets and sets the property ProviderDetails. 
            <para>
            The IdP details. The following list describes the provider detail keys for each IdP
            type.
            </para>
             <ul> <li> 
            <para>
            For Google and Login with Amazon:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            client_secret
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> </ul> </li> <li> 
            <para>
            For Facebook:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            client_secret
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> <li> 
            <para>
            api_version
            </para>
             </li> </ul> </li> <li> 
            <para>
            For Sign in with Apple:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            team_id
            </para>
             </li> <li> 
            <para>
            key_id
            </para>
             </li> <li> 
            <para>
            private_key
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> </ul> </li> <li> 
            <para>
            For OpenID Connect (OIDC) providers:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            client_secret
            </para>
             </li> <li> 
            <para>
            attributes_request_method
            </para>
             </li> <li> 
            <para>
            oidc_issuer
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> <li> 
            <para>
            The following keys are only present if Amazon Cognito didn't discover them at the
            <code>oidc_issuer</code> URL.
            </para>
             <ul> <li> 
            <para>
            authorize_url 
            </para>
             </li> <li> 
            <para>
            token_url 
            </para>
             </li> <li> 
            <para>
            attributes_url 
            </para>
             </li> <li> 
            <para>
            jwks_uri 
            </para>
             </li> </ul> </li> <li> 
            <para>
            Amazon Cognito sets the value of the following keys automatically. They are read-only.
            </para>
             <ul> <li> 
            <para>
            attributes_url_add_attributes 
            </para>
             </li> </ul> </li> </ul> </li> <li> 
            <para>
            For SAML providers:
            </para>
             <ul> <li> 
            <para>
            MetadataFile or MetadataURL
            </para>
             </li> <li> 
            <para>
            IDPSignout <i>optional</i> 
            </para>
             </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The IdP name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest.ProviderType">
            <summary>
            Gets and sets the property ProviderType. 
            <para>
            The IdP type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderResponse">
            <summary>
            This is the response object from the CreateIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderResponse.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The newly created IdP object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest">
            <summary>
            Container for the parameters to the CreateResourceServer operation.
            Creates a new OAuth2.0 resource server and defines custom scopes within it.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            A unique resource server identifier for the resource server. This could be an HTTPS
            endpoint where the resource server is located, such as <code>https://my-weather-api.example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A friendly name for the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest.Scopes">
            <summary>
            Gets and sets the property Scopes. 
            <para>
            A list of scopes. Each scope is a key-value map with the keys <code>name</code> and
            <code>description</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateResourceServerResponse">
            <summary>
            This is the response object from the CreateResourceServer operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateResourceServerResponse.ResourceServer">
            <summary>
            Gets and sets the property ResourceServer. 
            <para>
            The newly created resource server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest">
            <summary>
            Container for the parameters to the CreateUserImportJob operation.
            Creates the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest.CloudWatchLogsRoleArn">
            <summary>
            Gets and sets the property CloudWatchLogsRoleArn. 
            <para>
            The role ARN for the Amazon CloudWatch Logs Logging role for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The job name for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to create the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest">
            <summary>
            Container for the parameters to the CreateUserPoolClient operation.
            Creates the user pool client.
            
             
            <para>
            When you create a new user pool client, token revocation is automatically activated.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.AccessTokenValidity">
            <summary>
            Gets and sets the property AccessTokenValidity. 
            <para>
            The access token time limit. After this limit expires, your user can't use their access
            token. To specify the time unit for <code>AccessTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>AccessTokenValidity</code> to <code>10</code> and
            <code>TokenValidityUnits</code> to <code>hours</code>, your user can authorize access
            with their access token for 10 hours.
            </para>
             
            <para>
            The default time unit for <code>AccessTokenValidity</code> in an API request is hours.
            <i>Valid range</i> is displayed below in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your access
            tokens are valid for one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.AllowedOAuthFlows">
            <summary>
            Gets and sets the property AllowedOAuthFlows. 
            <para>
            The allowed OAuth flows.
            </para>
             <dl> <dt>code</dt> <dd> 
            <para>
            Use a code grant flow, which provides an authorization code as the response. This
            code can be exchanged for access tokens with the <code>/oauth2/token</code> endpoint.
            </para>
             </dd> <dt>implicit</dt> <dd> 
            <para>
            Issue the access token (and, optionally, ID token, based on scopes) directly to your
            user.
            </para>
             </dd> <dt>client_credentials</dt> <dd> 
            <para>
            Issue the access token from the <code>/oauth2/token</code> endpoint directly to a
            non-person user using a combination of the client ID and client secret.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.AllowedOAuthFlowsUserPoolClient">
            <summary>
            Gets and sets the property AllowedOAuthFlowsUserPoolClient. 
            <para>
            Set to true if the client is allowed to follow the OAuth protocol when interacting
            with Amazon Cognito user pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.AllowedOAuthScopes">
            <summary>
            Gets and sets the property AllowedOAuthScopes. 
            <para>
            The allowed OAuth scopes. Possible values provided by OAuth are <code>phone</code>,
            <code>email</code>, <code>openid</code>, and <code>profile</code>. Possible values
            provided by Amazon Web Services are <code>aws.cognito.signin.user.admin</code>. Custom
            scopes created in Resource Servers are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.AnalyticsConfiguration">
            <summary>
            Gets and sets the property AnalyticsConfiguration. 
            <para>
            The user pool analytics configuration for collecting metrics and sending them to your
            Amazon Pinpoint campaign.
            </para>
             <note> 
            <para>
            In Amazon Web Services Regions where Amazon Pinpoint isn't available, user pools only
            support sending events to Amazon Pinpoint projects in Amazon Web Services Region us-east-1.
            In Regions where Amazon Pinpoint is available, user pools support sending events to
            Amazon Pinpoint projects within that same Region.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.AuthSessionValidity">
            <summary>
            Gets and sets the property AuthSessionValidity. 
            <para>
            Amazon Cognito creates a session token for each API request in an authentication flow.
            <code>AuthSessionValidity</code> is the duration, in minutes, of that session token.
            Your user pool native user must respond to each authentication challenge before the
            session expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.CallbackURLs">
            <summary>
            Gets and sets the property CallbackURLs. 
            <para>
            A list of allowed redirect (callback) URLs for the IdPs.
            </para>
             
            <para>
            A redirect URI must:
            </para>
             <ul> <li> 
            <para>
            Be an absolute URI.
            </para>
             </li> <li> 
            <para>
            Be registered with the authorization server.
            </para>
             </li> <li> 
            <para>
            Not include a fragment component.
            </para>
             </li> </ul> 
            <para>
            See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.
            </para>
             
            <para>
            Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.
            </para>
             
            <para>
            App callback URLs such as myapp://example are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name for the user pool client you would like to create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.DefaultRedirectURI">
            <summary>
            Gets and sets the property DefaultRedirectURI. 
            <para>
            The default redirect URI. Must be in the <code>CallbackURLs</code> list.
            </para>
             
            <para>
            A redirect URI must:
            </para>
             <ul> <li> 
            <para>
            Be an absolute URI.
            </para>
             </li> <li> 
            <para>
            Be registered with the authorization server.
            </para>
             </li> <li> 
            <para>
            Not include a fragment component.
            </para>
             </li> </ul> 
            <para>
            See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.
            </para>
             
            <para>
            Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.
            </para>
             
            <para>
            App callback URLs such as myapp://example are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.EnablePropagateAdditionalUserContextData">
            <summary>
            Gets and sets the property EnablePropagateAdditionalUserContextData. 
            <para>
            Activates the propagation of additional user context data. For more information about
            propagation of user context data, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html">
            Adding advanced security to a user pool</a>. If you don’t include this parameter,
            you can't send device fingerprint information, including source IP address, to Amazon
            Cognito advanced security. You can only activate <code>EnablePropagateAdditionalUserContextData</code>
            in an app client that has a client secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.EnableTokenRevocation">
            <summary>
            Gets and sets the property EnableTokenRevocation. 
            <para>
            Activates or deactivates token revocation. For more information about revoking tokens,
            see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
             
            <para>
            If you don't include this parameter, token revocation is automatically activated for
            the new user pool client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.ExplicitAuthFlows">
            <summary>
            Gets and sets the property ExplicitAuthFlows. 
            <para>
            The authentication flows that you want your user pool client to support. For each
            app client in your user pool, you can sign in your users with any combination of one
            or more flows, including with a user name and Secure Remote Password (SRP), a user
            name and password, or a custom authentication process that you define with Lambda
            functions.
            </para>
             <note> 
            <para>
            If you don't specify a value for <code>ExplicitAuthFlows</code>, your user client
            supports <code>ALLOW_REFRESH_TOKEN_AUTH</code>, <code>ALLOW_USER_SRP_AUTH</code>,
            and <code>ALLOW_CUSTOM_AUTH</code>.
            </para>
             </note> 
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable admin based user password authentication
            flow <code>ADMIN_USER_PASSWORD_AUTH</code>. This setting replaces the <code>ADMIN_NO_SRP_AUTH</code>
            setting. With this authentication flow, your app passes a user name and password to
            Amazon Cognito in the request, instead of using the Secure Remote Password (SRP) protocol
            to securely transmit the password.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based authentication.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_USER_PASSWORD_AUTH</code>: Enable user password-based authentication.
            In this flow, Amazon Cognito receives the password in the request instead of using
            the SRP protocol to verify passwords.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_USER_SRP_AUTH</code>: Enable SRP-based authentication.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_REFRESH_TOKEN_AUTH</code>: Enable authflow to refresh tokens.
            </para>
             </li> </ul> 
            <para>
            In some environments, you will see the values <code>ADMIN_NO_SRP_AUTH</code>, <code>CUSTOM_AUTH_FLOW_ONLY</code>,
            or <code>USER_PASSWORD_AUTH</code>. You can't assign these legacy <code>ExplicitAuthFlows</code>
            values to user pool clients at the same time as values that begin with <code>ALLOW_</code>,
            like <code>ALLOW_USER_SRP_AUTH</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.GenerateSecret">
            <summary>
            Gets and sets the property GenerateSecret. 
            <para>
            Boolean to specify whether you want to generate a secret for the user pool client
            being created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.IdTokenValidity">
            <summary>
            Gets and sets the property IdTokenValidity. 
            <para>
            The ID token time limit. After this limit expires, your user can't use their ID token.
            To specify the time unit for <code>IdTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>IdTokenValidity</code> as <code>10</code> and <code>TokenValidityUnits</code>
            as <code>hours</code>, your user can authenticate their session with their ID token
            for 10 hours.
            </para>
             
            <para>
            The default time unit for <code>AccessTokenValidity</code> in an API request is hours.
            <i>Valid range</i> is displayed below in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your ID tokens
            are valid for one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.LogoutURLs">
            <summary>
            Gets and sets the property LogoutURLs. 
            <para>
            A list of allowed logout URLs for the IdPs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.PreventUserExistenceErrors">
            <summary>
            Gets and sets the property PreventUserExistenceErrors. 
            <para>
            Errors and responses that you want Amazon Cognito APIs to return during authentication,
            account confirmation, and password recovery when the user doesn't exist in the user
            pool. When set to <code>ENABLED</code> and the user doesn't exist, authentication
            returns an error indicating either the username or password was incorrect. Account
            confirmation and password recovery return a response indicating a code was sent to
            a simulated destination. When set to <code>LEGACY</code>, those APIs return a <code>UserNotFoundException</code>
            exception if the user doesn't exist in the user pool.
            </para>
             
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>ENABLED</code> - This prevents user existence-related errors.
            </para>
             </li> <li> 
            <para>
             <code>LEGACY</code> - This represents the early behavior of Amazon Cognito where
            user existence related errors aren't prevented.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.ReadAttributes">
            <summary>
            Gets and sets the property ReadAttributes. 
            <para>
            The read attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.RefreshTokenValidity">
            <summary>
            Gets and sets the property RefreshTokenValidity. 
            <para>
            The refresh token time limit. After this limit expires, your user can't use their
            refresh token. To specify the time unit for <code>RefreshTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>RefreshTokenValidity</code> as <code>10</code> and
            <code>TokenValidityUnits</code> as <code>days</code>, your user can refresh their
            session and retrieve new access and ID tokens for 10 days.
            </para>
             
            <para>
            The default time unit for <code>RefreshTokenValidity</code> in an API request is days.
            You can't set <code>RefreshTokenValidity</code> to 0. If you do, Amazon Cognito overrides
            the value with the default value of 30 days. <i>Valid range</i> is displayed below
            in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your refresh
            tokens are valid for 30 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.SupportedIdentityProviders">
            <summary>
            Gets and sets the property SupportedIdentityProviders. 
            <para>
            A list of provider names for the identity providers (IdPs) that are supported on this
            client. The following are supported: <code>COGNITO</code>, <code>Facebook</code>,
            <code>Google</code>, <code>SignInWithApple</code>, and <code>LoginWithAmazon</code>.
            You can also specify the names that you configured for the SAML and OIDC IdPs in your
            user pool, for example <code>MySAMLIdP</code> or <code>MyOIDCIdP</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.TokenValidityUnits">
            <summary>
            Gets and sets the property TokenValidityUnits. 
            <para>
            The units in which the validity times are represented. The default unit for RefreshToken
            is days, and default for ID and access tokens are hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to create a user pool client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest.WriteAttributes">
            <summary>
            Gets and sets the property WriteAttributes. 
            <para>
            The user pool attributes that the app client can write to.
            </para>
             
            <para>
            If your app client allows users to sign in through an IdP, this array must include
            all attributes that you have mapped to IdP attributes. Amazon Cognito updates mapped
            attributes when users sign in to your application through an IdP. If your app client
            does not have write access to a mapped attribute, Amazon Cognito throws an error when
            it tries to update the attribute. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html">Specifying
            IdP Attribute Mappings for Your user pool</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientResponse">
            <summary>
            Represents the response from the server to create a user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientResponse.UserPoolClient">
            <summary>
            Gets and sets the property UserPoolClient. 
            <para>
            The user pool client that was just created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest">
            <summary>
            Container for the parameters to the CreateUserPoolDomain operation.
            Creates a new domain for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest.CustomDomainConfig">
            <summary>
            Gets and sets the property CustomDomainConfig. 
            <para>
            The configuration for a custom domain that hosts the sign-up and sign-in webpages
            for your application.
            </para>
             
            <para>
            Provide this parameter only if you want to use a custom domain for your user pool.
            Otherwise, you can exclude this parameter and use the Amazon Cognito hosted domain
            instead.
            </para>
             
            <para>
            For more information about the hosted domain and custom domains, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain.html">Configuring
            a User Pool Domain</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain string. For custom domains, this is the fully-qualified domain name, such
            as <code>auth.example.com</code>. For Amazon Cognito prefix domains, this is the prefix
            alone, such as <code>auth</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainResponse">
            <summary>
            This is the response object from the CreateUserPoolDomain operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainResponse.CloudFrontDomain">
            <summary>
            Gets and sets the property CloudFrontDomain. 
            <para>
            The Amazon CloudFront endpoint that you use as the target of the alias that you set
            up with your Domain Name Service (DNS) provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest">
            <summary>
            Container for the parameters to the CreateUserPool operation.
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.AccountRecoverySetting">
            <summary>
            Gets and sets the property AccountRecoverySetting. 
            <para>
            The available verified method a user can use to recover their password when they call
            <code>ForgotPassword</code>. You can use this setting to define a preferred method
            when a user has more than one method available. With this setting, SMS doesn't qualify
            for a valid password recovery mechanism if the user also has SMS multi-factor authentication
            (MFA) activated. In the absence of this setting, Amazon Cognito uses the legacy behavior
            to determine the recovery method where SMS is preferred through email.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.AdminCreateUserConfig">
            <summary>
            Gets and sets the property AdminCreateUserConfig. 
            <para>
            The configuration for <code>AdminCreateUser</code> requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.AliasAttributes">
            <summary>
            Gets and sets the property AliasAttributes. 
            <para>
            Attributes supported as an alias for this user pool. Possible values: <b>phone_number</b>,
            <b>email</b>, or <b>preferred_username</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.AutoVerifiedAttributes">
            <summary>
            Gets and sets the property AutoVerifiedAttributes. 
            <para>
            The attributes to be auto-verified. Possible values: <b>email</b>, <b>phone_number</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            When active, <code>DeletionProtection</code> prevents accidental deletion of your
            user pool. Before you can delete a user pool that you have protected against deletion,
            you must deactivate this feature.
            </para>
             
            <para>
            When you try to delete a protected user pool in a <code>DeleteUserPool</code> API
            request, Amazon Cognito returns an <code>InvalidParameterException</code> error. To
            delete a protected user pool, send a new <code>DeleteUserPool</code> request after
            you deactivate deletion protection in an <code>UpdateUserPool</code> API request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.DeviceConfiguration">
            <summary>
            Gets and sets the property DeviceConfiguration. 
            <para>
            The device-remembering configuration for a user pool. A null value indicates that
            you have deactivated device remembering in your user pool.
            </para>
             <note> 
            <para>
            When you provide a value for any <code>DeviceConfiguration</code> field, you activate
            the Amazon Cognito device-remembering feature.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.EmailConfiguration">
            <summary>
            Gets and sets the property EmailConfiguration. 
            <para>
            The email configuration of your user pool. The email configuration type sets your
            preferred sending method, Amazon Web Services Region, and sender for messages from
            your user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.EmailVerificationMessage">
            <summary>
            Gets and sets the property EmailVerificationMessage. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.EmailVerificationSubject">
            <summary>
            Gets and sets the property EmailVerificationSubject. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            The Lambda trigger configuration information for the new user pool.
            </para>
             <note> 
            <para>
            In a push model, event sources (such as Amazon S3 and custom applications) need permission
            to invoke a function. So you must make an extra call to add permission for these event
            sources to invoke your Lambda function.
            </para>
              
            <para>
            For more information on using the Lambda API to add permission, see<a href="https://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html">
            AddPermission </a>. 
            </para>
             
            <para>
            For adding permission using the CLI, see<a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/add-permission.html">
            add-permission </a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            Specifies MFA configuration details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            The policies associated with the new user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.PoolName">
            <summary>
            Gets and sets the property PoolName. 
            <para>
            A string used to name the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            An array of schema attributes for the new user pool. These attributes can be standard
            or custom attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.SmsAuthenticationMessage">
            <summary>
            Gets and sets the property SmsAuthenticationMessage. 
            <para>
            A string representing the SMS authentication message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.SmsConfiguration">
            <summary>
            Gets and sets the property SmsConfiguration. 
            <para>
            The SMS configuration with the settings that your Amazon Cognito user pool must use
            to send an SMS message from your Amazon Web Services account through Amazon Simple
            Notification Service. To send SMS messages with Amazon SNS in the Amazon Web Services
            Region that you want, the Amazon Cognito user pool uses an Identity and Access Management
            (IAM) role in your Amazon Web Services account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.SmsVerificationMessage">
            <summary>
            Gets and sets the property SmsVerificationMessage. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.UserAttributeUpdateSettings">
            <summary>
            Gets and sets the property UserAttributeUpdateSettings. 
            <para>
            The settings for updates to user attributes. These settings include the property <code>AttributesRequireVerificationBeforeUpdate</code>,
            a user-pool setting that tells Amazon Cognito how to handle changes to the value of
            your users' email address and phone number attributes. For more information, see <a
            href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates">
            Verifying updates to email addresses and phone numbers</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.UsernameAttributes">
            <summary>
            Gets and sets the property UsernameAttributes. 
            <para>
            Specifies whether a user can use an email address or phone number as a username when
            they sign up.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.UsernameConfiguration">
            <summary>
            Gets and sets the property UsernameConfiguration. 
            <para>
            Case sensitivity on the username input for the selected sign-in option. For example,
            when case sensitivity is set to <code>False</code>, users can sign in using either
            "username" or "Username". This configuration is immutable once it has been set. For
            more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UsernameConfigurationType.html">UsernameConfigurationType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.UserPoolAddOns">
            <summary>
            Gets and sets the property UserPoolAddOns. 
            <para>
            Enables advanced security risk detection. Set the key <code>AdvancedSecurityMode</code>
            to the value "AUDIT".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.UserPoolTags">
            <summary>
            Gets and sets the property UserPoolTags. 
            <para>
            The tag keys and values to assign to the user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest.VerificationMessageTemplate">
            <summary>
            Gets and sets the property VerificationMessageTemplate. 
            <para>
            The template for the verification message that the user sees when the app requests
            permission to access the user's information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CreateUserPoolResponse">
            <summary>
            Represents the response from the server for the request to create a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CreateUserPoolResponse.UserPool">
            <summary>
            Gets and sets the property UserPool. 
            <para>
            A container for the user pool details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CustomDomainConfigType">
            <summary>
            The configuration for a custom domain that hosts the sign-up and sign-in webpages
            for your application.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CustomDomainConfigType.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of an Certificate Manager SSL certificate. You use
            this certificate for the subdomain of your custom domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CustomEmailLambdaVersionConfigType">
            <summary>
            A custom email sender Lambda configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CustomEmailLambdaVersionConfigType.LambdaArn">
            <summary>
            Gets and sets the property LambdaArn. 
            <para>
            The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates
            to send email notifications to users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CustomEmailLambdaVersionConfigType.LambdaVersion">
            <summary>
            Gets and sets the property LambdaVersion. 
            <para>
            Signature of the "request" attribute in the "event" information Amazon Cognito passes
            to your custom email Lambda function. The only supported value is <code>V1_0</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CustomSMSLambdaVersionConfigType">
            <summary>
            A custom SMS sender Lambda configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CustomSMSLambdaVersionConfigType.LambdaArn">
            <summary>
            Gets and sets the property LambdaArn. 
            <para>
            The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates
            to send SMS notifications to users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.CustomSMSLambdaVersionConfigType.LambdaVersion">
            <summary>
            Gets and sets the property LambdaVersion. 
            <para>
            Signature of the "request" attribute in the "event" information that Amazon Cognito
            passes to your custom SMS Lambda function. The only supported value is <code>V1_0</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest">
            <summary>
            Container for the parameters to the DeleteGroup operation.
            Deletes a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteGroupResponse">
            <summary>
            This is the response object from the DeleteGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest">
            <summary>
            Container for the parameters to the DeleteIdentityProvider operation.
            Deletes an IdP for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The IdP name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderResponse">
            <summary>
            This is the response object from the DeleteIdentityProvider operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest">
            <summary>
            Container for the parameters to the DeleteResourceServer operation.
            Deletes a resource server.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            The identifier for the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that hosts the resource server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteResourceServerResponse">
            <summary>
            This is the response object from the DeleteResourceServer operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest">
            <summary>
            Container for the parameters to the DeleteUserAttributes operation.
            Deletes the attributes for a user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose attributes you want
            to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest.UserAttributeNames">
            <summary>
            Gets and sets the property UserAttributeNames. 
            <para>
            An array of strings representing the user attribute names you want to delete.
            </para>
             
            <para>
            For custom attributes, you must prependattach the <code>custom:</code> prefix to the
            front of the attribute name.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesResponse">
            <summary>
            Represents the response from the server to delete user attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest">
            <summary>
            Container for the parameters to the DeleteUserPoolClient operation.
            Allows the developer to delete the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID of the app associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to delete the client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientResponse">
            <summary>
            This is the response object from the DeleteUserPoolClient operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest">
            <summary>
            Container for the parameters to the DeleteUserPoolDomain operation.
            Deletes a domain for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain string. For custom domains, this is the fully-qualified domain name, such
            as <code>auth.example.com</code>. For Amazon Cognito prefix domains, this is the prefix
            alone, such as <code>auth</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainResponse">
            <summary>
            This is the response object from the DeleteUserPoolDomain operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest">
            <summary>
            Container for the parameters to the DeleteUserPool operation.
            Deletes the specified Amazon Cognito user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserPoolResponse">
            <summary>
            This is the response object from the DeleteUserPool operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserRequest">
            <summary>
            Container for the parameters to the DeleteUser operation.
            Allows a user to delete himself or herself.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeleteUserRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose user profile you
            want to delete.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DeleteUserRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeleteUserResponse">
            <summary>
            This is the response object from the DeleteUser operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest">
            <summary>
            Container for the parameters to the DescribeIdentityProvider operation.
            Gets information about a specific IdP.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The IdP name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderResponse">
            <summary>
            This is the response object from the DescribeIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderResponse.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The identity provider details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest">
            <summary>
            Container for the parameters to the DescribeResourceServer operation.
            Describes a resource server.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            The identifier for the resource server
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that hosts the resource server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeResourceServerResponse">
            <summary>
            This is the response object from the DescribeResourceServer operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeResourceServerResponse.ResourceServer">
            <summary>
            Gets and sets the property ResourceServer. 
            <para>
            The resource server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeRiskConfiguration operation.
            Describes the risk configuration.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationResponse">
            <summary>
            This is the response object from the DescribeRiskConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationResponse.RiskConfiguration">
            <summary>
            Gets and sets the property RiskConfiguration. 
            <para>
            The risk configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest">
            <summary>
            Container for the parameters to the DescribeUserImportJob operation.
            Describes the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to describe the user import
            job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest">
            <summary>
            Container for the parameters to the DescribeUserPoolClient operation.
            Client method for returning the configuration information and metadata of the specified
            user pool app client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID of the app associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientResponse">
            <summary>
            Represents the response from the server from a request to describe the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientResponse.UserPoolClient">
            <summary>
            Gets and sets the property UserPoolClient. 
            <para>
            The user pool client from a server response to describe the user pool client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest">
            <summary>
            Container for the parameters to the DescribeUserPoolDomain operation.
            Gets information about a domain.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain string. For custom domains, this is the fully-qualified domain name, such
            as <code>auth.example.com</code>. For Amazon Cognito prefix domains, this is the prefix
            alone, such as <code>auth</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainResponse">
            <summary>
            This is the response object from the DescribeUserPoolDomain operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainResponse.DomainDescription">
            <summary>
            Gets and sets the property DomainDescription. 
            <para>
            A domain description object containing information about the domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest">
            <summary>
            Container for the parameters to the DescribeUserPool operation.
            Returns the configuration information and metadata of the specified user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolResponse">
            <summary>
            Represents the response to describe the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DescribeUserPoolResponse.UserPool">
            <summary>
            Gets and sets the property UserPool. 
            <para>
            The container of metadata returned by the server to describe the pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType">
            <summary>
            The device-remembering configuration for a user pool. A <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html">
            DescribeUserPool</a> request returns a null value for this object when the user pool
            isn't configured to remember devices. When device remembering is active, you can remember
            a user's device with a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html">ConfirmDevice</a>
            API request. Additionally. when the property <code>DeviceOnlyRememberedOnUserPrompt</code>
            is <code>true</code>, you must follow <code>ConfirmDevice</code> with an <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html">UpdateDeviceStatus</a>
            API request that sets the user's device to <code>remembered</code> or <code>not_remembered</code>.
            
             
            <para>
            To sign in with a remembered device, include <code>DEVICE_KEY</code> in the authentication
            parameters in your user's <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html">
            InitiateAuth</a> request. If your app doesn't include a <code>DEVICE_KEY</code> parameter,
            the <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html#API_InitiateAuth_ResponseSyntax">response</a>
            from Amazon Cognito includes newly-generated <code>DEVICE_KEY</code> and <code>DEVICE_GROUP_KEY</code>
            values under <code>NewDeviceMetadata</code>. Store these values to use in future device-authentication
            requests.
            </para>
             <note> 
            <para>
            When you provide a value for any property of <code>DeviceConfiguration</code>, you
            activate the device remembering for the user pool.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType.ChallengeRequiredOnNewDevice">
            <summary>
            Gets and sets the property ChallengeRequiredOnNewDevice. 
            <para>
            When true, a remembered device can sign in with device authentication instead of SMS
            and time-based one-time password (TOTP) factors for multi-factor authentication (MFA).
            </para>
             <note> 
            <para>
            Whether or not <code>ChallengeRequiredOnNewDevice</code> is true, users who sign in
            with devices that have not been confirmed or remembered must still provide a second
            factor in a user pool that requires MFA.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType.DeviceOnlyRememberedOnUserPrompt">
            <summary>
            Gets and sets the property DeviceOnlyRememberedOnUserPrompt. 
            <para>
            When true, Amazon Cognito doesn't automatically remember a user's device when your
            app sends a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html">
            ConfirmDevice</a> API request. In your app, create a prompt for your user to choose
            whether they want to remember their device. Return the user's choice in an <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html">
            UpdateDeviceStatus</a> API request.
            </para>
             
            <para>
            When <code>DeviceOnlyRememberedOnUserPrompt</code> is <code>false</code>, Amazon Cognito
            immediately remembers devices that you register in a <code>ConfirmDevice</code> API
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType">
            <summary>
            The device verifier against which it is authenticated.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType.PasswordVerifier">
            <summary>
            Gets and sets the property PasswordVerifier. 
            <para>
            The password verifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType.Salt">
            <summary>
            Gets and sets the property Salt. 
            <para>
            The <a href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DeviceType">
            <summary>
            The device type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceAttributes">
            <summary>
            Gets and sets the property DeviceAttributes. 
            <para>
            The device attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceCreateDate">
            <summary>
            Gets and sets the property DeviceCreateDate. 
            <para>
            The creation date of the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceLastAuthenticatedDate">
            <summary>
            Gets and sets the property DeviceLastAuthenticatedDate. 
            <para>
            The date when the device was last authenticated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DeviceType.DeviceLastModifiedDate">
            <summary>
            Gets and sets the property DeviceLastModifiedDate. 
            <para>
            The last modified date of the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType">
            <summary>
            A container for information about a domain.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.AWSAccountId">
            <summary>
            Gets and sets the property AWSAccountId. 
            <para>
            The Amazon Web Services ID for the user pool owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.CloudFrontDistribution">
            <summary>
            Gets and sets the property CloudFrontDistribution. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon CloudFront distribution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.CustomDomainConfig">
            <summary>
            Gets and sets the property CustomDomainConfig. 
            <para>
            The configuration for a custom domain that hosts the sign-up and sign-in webpages
            for your application.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain string. For custom domains, this is the fully-qualified domain name, such
            as <code>auth.example.com</code>. For Amazon Cognito prefix domains, this is the prefix
            alone, such as <code>auth</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The Amazon S3 bucket where the static files for this domain are stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The domain status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.DomainDescriptionType.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The app version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException">
            <summary>
            This exception is thrown when the provider is already supported by the user pool.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicateProviderException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DuplicateProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException.#ctor(System.Exception)">
            <summary>
            Construct instance of DuplicateProviderException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DuplicateProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DuplicateProviderException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DuplicateProviderException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType">
            <summary>
            The email configuration of your user pool. The email configuration type sets your
            preferred sending method, Amazon Web Services Region, and sender for messages from
            your user pool.
            
             <note> 
            <para>
            Amazon Cognito can send email messages with Amazon Simple Email Service resources
            in the Amazon Web Services Region where you created your user pool, and in alternate
            Regions in some cases. For more information on the supported Regions, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html">Email
            settings for Amazon Cognito user pools</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType.ConfigurationSet">
            <summary>
            Gets and sets the property ConfigurationSet. 
            <para>
            The set of configuration rules that can be applied to emails sent using Amazon Simple
            Email Service. A configuration set is applied to an email by including a reference
            to the configuration set in the headers of the email. Once applied, all of the rules
            in that configuration set are applied to the email. Configuration sets can be used
            to apply the following types of rules to emails: 
            </para>
             <dl> <dt>Event publishing</dt> <dd> 
            <para>
            Amazon Simple Email Service can track the number of send, delivery, open, click, bounce,
            and complaint events for each email sent. Use event publishing to send information
            about these events to other Amazon Web Services services such as and Amazon CloudWatch
            </para>
             </dd> <dt>IP pool management</dt> <dd> 
            <para>
            When leasing dedicated IP addresses with Amazon Simple Email Service, you can create
            groups of IP addresses, called dedicated IP pools. You can then associate the dedicated
            IP pools with configuration sets.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType.EmailSendingAccount">
            <summary>
            Gets and sets the property EmailSendingAccount. 
            <para>
            Specifies whether Amazon Cognito uses its built-in functionality to send your users
            email messages, or uses your Amazon Simple Email Service email configuration. Specify
            one of the following values:
            </para>
             <dl> <dt>COGNITO_DEFAULT</dt> <dd> 
            <para>
            When Amazon Cognito emails your users, it uses its built-in email functionality. When
            you use the default option, Amazon Cognito allows only a limited number of emails
            each day for your user pool. For typical production environments, the default email
            limit is less than the required delivery volume. To achieve a higher delivery volume,
            specify DEVELOPER to use your Amazon SES email configuration.
            </para>
             
            <para>
            To look up the email delivery limit for the default option, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html">Limits</a>
            in the <i>Amazon Cognito Developer Guide</i>.
            </para>
             
            <para>
            The default FROM address is <code>no-reply@verificationemail.com</code>. To customize
            the FROM address, provide the Amazon Resource Name (ARN) of an Amazon SES verified
            email address for the <code>SourceArn</code> parameter.
            </para>
             </dd> <dt>DEVELOPER</dt> <dd> 
            <para>
            When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon
            Cognito calls Amazon SES on your behalf to send email from your verified email address.
            When you use this option, the email delivery limits are the same limits that apply
            to your Amazon SES verified email address in your Amazon Web Services account.
            </para>
             
            <para>
            If you use this option, provide the ARN of an Amazon SES verified email address for
            the <code>SourceArn</code> parameter.
            </para>
             
            <para>
            Before Amazon Cognito can email your users, it requires additional permissions to
            call Amazon SES on your behalf. When you update your user pool with this option, Amazon
            Cognito creates a <i>service-linked role</i>, which is a type of role in your Amazon
            Web Services account. This role contains the permissions that allow you to access
            Amazon SES and send email messages from your email address. For more information about
            the service-linked role that Amazon Cognito creates, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html">Using
            Service-Linked Roles for Amazon Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType.From">
            <summary>
            Gets and sets the property From. 
            <para>
            Either the sender’s email address or the sender’s name with their email address. For
            example, <code>testuser@example.com</code> or <code>Test User &lt;testuser@example.com&gt;</code>.
            This address appears before the body of the email.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType.ReplyToEmailAddress">
            <summary>
            Gets and sets the property ReplyToEmailAddress. 
            <para>
            The destination to which the receiver of the email should reply.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EmailConfigurationType.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The ARN of a verified email address in Amazon SES. Amazon Cognito uses this email
            address in one of the following ways, depending on the value that you specify for
            the <code>EmailSendingAccount</code> parameter:
            </para>
             <ul> <li> 
            <para>
            If you specify <code>COGNITO_DEFAULT</code>, Amazon Cognito uses this address as the
            custom FROM address when it emails your users using its built-in email account.
            </para>
             </li> <li> 
            <para>
            If you specify <code>DEVELOPER</code>, Amazon Cognito emails your users with this
            address by calling Amazon SES on your behalf.
            </para>
             </li> </ul> 
            <para>
            The Region value of the <code>SourceArn</code> parameter must indicate a supported
            Amazon Web Services Region of your user pool. Typically, the Region in the <code>SourceArn</code>
            and the user pool Region are the same. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping">Amazon
            SES email configuration regions</a> in the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html">Amazon
            Cognito Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException">
            <summary>
            This exception is thrown when there is a code mismatch and the service fails to configure
            the software token TOTP multi-factor authentication (MFA).
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException.#ctor(System.String)">
            <summary>
            Constructs a new EnableSoftwareTokenMFAException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EnableSoftwareTokenMFAException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException.#ctor(System.Exception)">
            <summary>
            Construct instance of EnableSoftwareTokenMFAException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EnableSoftwareTokenMFAException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EnableSoftwareTokenMFAException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EnableSoftwareTokenMFAException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.EventContextDataType">
            <summary>
            Specifies the user context data captured at the time of an event request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventContextDataType.City">
            <summary>
            Gets and sets the property City. 
            <para>
            The user's city.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventContextDataType.Country">
            <summary>
            Gets and sets the property Country. 
            <para>
            The user's country.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventContextDataType.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The user's device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventContextDataType.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The source IP address of your user's device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventContextDataType.Timezone">
            <summary>
            Gets and sets the property Timezone. 
            <para>
            The user's time zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.EventFeedbackType">
            <summary>
            Specifies the event feedback type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventFeedbackType.FeedbackDate">
            <summary>
            Gets and sets the property FeedbackDate. 
            <para>
            The event feedback date.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventFeedbackType.FeedbackValue">
            <summary>
            Gets and sets the property FeedbackValue. 
            <para>
            The event feedback value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventFeedbackType.Provider">
            <summary>
            Gets and sets the property Provider. 
            <para>
            The provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.EventRiskType">
            <summary>
            The event risk type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventRiskType.CompromisedCredentialsDetected">
            <summary>
            Gets and sets the property CompromisedCredentialsDetected. 
            <para>
            Indicates whether compromised credentials were detected during an authentication event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventRiskType.RiskDecision">
            <summary>
            Gets and sets the property RiskDecision. 
            <para>
            The risk decision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.EventRiskType.RiskLevel">
            <summary>
            Gets and sets the property RiskLevel. 
            <para>
            The risk level.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            <summary>
            This exception is thrown if a code has expired.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String)">
            <summary>
            Constructs a new ExpiredCodeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.Exception)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ExpiredCodeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ExpiredCodeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            <summary>
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForbiddenException.#ctor(System.String)">
            <summary>
            Constructs a new ForbiddenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForbiddenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForbiddenException.#ctor(System.Exception)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForbiddenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForbiddenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ForbiddenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForbiddenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ForbiddenException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForbiddenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest">
            <summary>
            Container for the parameters to the ForgetDevice operation.
            Forgets the specified device.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose registered device
            you want to forget.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgetDeviceResponse">
            <summary>
            This is the response object from the ForgetDevice operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest">
            <summary>
            Container for the parameters to the ForgotPassword operation.
            Calling this API causes a message to be sent to the end user with a confirmation code
            that is required to change the user's password. For the <code>Username</code> parameter,
            you can use the username or user alias. The method used to send the confirmation code
            is sent according to the specified AccountRecoverySetting. For more information, see
            <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html">Recovering
            User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>. If neither a verified
            phone number nor a verified email exists, an <code>InvalidParameterException</code>
            is thrown. To use the confirmation code for resetting the password, call <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html">ConfirmForgotPassword</a>.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The Amazon Pinpoint analytics metadata that contributes to your metrics for <code>ForgotPassword</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the ForgotPassword API action, Amazon Cognito invokes any functions that are
            assigned to the following triggers: <i>pre sign-up</i>, <i>custom message</i>, and
            <i>user migration</i>. When Amazon Cognito invokes any of these functions, it passes
            a JSON payload, which the function receives as input. This payload contains a <code>clientMetadata</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your ForgotPassword request. In your function code in Lambda, you can process the
            <code>clientMetadata</code> value to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.UserContextData">
            <summary>
            Gets and sets the property UserContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user for whom you want to enter a code to reset a forgotten password.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ForgotPasswordResponse">
            <summary>
            The response from Amazon Cognito to a request to reset a password.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ForgotPasswordResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server in response to the request to reset
            a password.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest">
            <summary>
            Container for the parameters to the GetCSVHeader operation.
            Gets the header information for the comma-separated value (CSV) file to be used as
            input for the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are to be imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse">
            <summary>
            Represents the response from the server to the request to get the header information
            of the CSV file for the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse.CSVHeader">
            <summary>
            Gets and sets the property CSVHeader. 
            <para>
            The header information of the CSV file for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetCSVHeaderResponse.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are to be imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetDeviceRequest">
            <summary>
            Container for the parameters to the GetDevice operation.
            Gets the device.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetDeviceRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose device information
            you want to request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetDeviceRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetDeviceResponse">
            <summary>
            Gets the device response.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetDeviceResponse.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetGroupRequest">
            <summary>
            Container for the parameters to the GetGroup operation.
            Gets a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetGroupResponse">
            <summary>
            This is the response object from the GetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetGroupResponse.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The group object for the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest">
            <summary>
            Container for the parameters to the GetIdentityProviderByIdentifier operation.
            Gets the specified IdP.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest.IdpIdentifier">
            <summary>
            Gets and sets the property IdpIdentifier. 
            <para>
            The IdP identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierResponse">
            <summary>
            This is the response object from the GetIdentityProviderByIdentifier operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierResponse.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The identity provider details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest">
            <summary>
            Container for the parameters to the GetSigningCertificate operation.
            This method takes a user pool ID, and returns the signing certificate. The issued
            certificate is valid for 10 years from the date of issue.
            
             
            <para>
            Amazon Cognito issues and assigns a new signing certificate annually. This process
            returns a new value in the response to <code>GetSigningCertificate</code>, but doesn't
            invalidate the original certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetSigningCertificateResponse">
            <summary>
            Response from Amazon Cognito for a signing certificate request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetSigningCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The signing certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest">
            <summary>
            Container for the parameters to the GetUICustomization operation.
            Gets the user interface (UI) Customization information for a particular app client's
            app UI, if any such information exists for the client. If nothing is set for the particular
            client, but there is an existing pool level customization (the app <code>clientId</code>
            is <code>ALL</code>), then that information is returned. If nothing is present, then
            an empty shape is returned.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client ID for the client app.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUICustomizationResponse">
            <summary>
            This is the response object from the GetUICustomization operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUICustomizationResponse.UICustomization">
            <summary>
            Gets and sets the property UICustomization. 
            <para>
            The UI customization information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest">
            <summary>
            Container for the parameters to the GetUserAttributeVerificationCode operation.
            Generates a user attribute verification code for the specified attribute name. Sends
            a message to a user with a code that they must return in a VerifyUserAttribute request.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A non-expired access token for the user whose attribute verification code you want
            to generate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The attribute name returned by the server response to get the user attribute verification
            code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the GetUserAttributeVerificationCode API action, Amazon Cognito invokes the
            function that is assigned to the <i>custom message</i> trigger. When Amazon Cognito
            invokes this function, it passes a JSON payload, which the function receives as input.
            This payload contains a <code>clientMetadata</code> attribute, which provides the
            data that you assigned to the ClientMetadata parameter in your GetUserAttributeVerificationCode
            request. In your function code in Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeResponse">
            <summary>
            The verification code response returned by the server response to get the user attribute
            verification code.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server in response to the request to get
            the user attribute verification code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest">
            <summary>
            Container for the parameters to the GetUserPoolMfaConfig operation.
            Gets the user pool multi-factor authentication (MFA) configuration.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigResponse">
            <summary>
            This is the response object from the GetUserPoolMfaConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigResponse.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            The multi-factor authentication (MFA) configuration. Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>OFF</code> MFA won't be used for any users.
            </para>
             </li> <li> 
            <para>
             <code>ON</code> MFA is required for all users to sign in.
            </para>
             </li> <li> 
            <para>
             <code>OPTIONAL</code> MFA will be required only for individual users who have an
            MFA factor activated.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigResponse.SmsMfaConfiguration">
            <summary>
            Gets and sets the property SmsMfaConfiguration. 
            <para>
            The SMS text message multi-factor authentication (MFA) configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigResponse.SoftwareTokenMfaConfiguration">
            <summary>
            Gets and sets the property SoftwareTokenMfaConfiguration. 
            <para>
            The software token multi-factor authentication (MFA) configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserRequest">
            <summary>
            Container for the parameters to the GetUser operation.
            Gets the user attributes and metadata for a user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A non-expired access token for the user whose information you want to query.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GetUserRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GetUserResponse">
            <summary>
            Represents the response from the server from the request to get information about
            the user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
             <i>This response parameter is no longer supported.</i> It provides information only
            about SMS MFA configurations. It doesn't provide information about time-based one-time
            password (TOTP) software token MFA configurations. To look up information about either
            type of MFA configuration, use UserMFASettingList instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.PreferredMfaSetting">
            <summary>
            Gets and sets the property PreferredMfaSetting. 
            <para>
            The user's preferred MFA setting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.UserMFASettingList">
            <summary>
            Gets and sets the property UserMFASettingList. 
            <para>
            The MFA options that are activated for the user. The possible values in this list
            are <code>SMS_MFA</code> and <code>SOFTWARE_TOKEN_MFA</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GetUserResponse.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you want to retrieve from the get user request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest">
            <summary>
            Container for the parameters to the GlobalSignOut operation.
            Signs out users from all devices. It also invalidates all refresh tokens that Amazon
            Cognito has issued to a user. A user can still use a hosted UI cookie to retrieve
            new tokens for the duration of the 1-hour cookie validity period.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user who you want to sign out.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GlobalSignOutResponse">
            <summary>
            The response to the request to sign out all devices.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            <summary>
            This exception is thrown when Amazon Cognito encounters a group that already exists
            in the user pool.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String)">
            <summary>
            Constructs a new GroupExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GroupExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the GroupExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.GroupExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.GroupType">
            <summary>
            The group type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the group was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the group was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.Precedence">
            <summary>
            Gets and sets the property Precedence. 
            <para>
            A non-negative integer value that specifies the precedence of this group relative
            to the other groups that a user can belong to in the user pool. Zero is the highest
            precedence value. Groups with lower <code>Precedence</code> values take precedence
            over groups with higher ornull <code>Precedence</code> values. If a user belongs to
            two or more groups, it is the group with the lowest precedence value whose role ARN
            is given in the user's tokens for the <code>cognito:roles</code> and <code>cognito:preferred_role</code>
            claims.
            </para>
             
            <para>
            Two groups can have the same <code>Precedence</code> value. If this happens, neither
            group takes precedence over the other. If two groups with the same <code>Precedence</code>
            have the same role ARN, that role is used in the <code>cognito:preferred_role</code>
            claim in tokens for users in each group. If the two groups have different role ARNs,
            the <code>cognito:preferred_role</code> claim isn't set in users' tokens.
            </para>
             
            <para>
            The default <code>Precedence</code> value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The role Amazon Resource Name (ARN) for the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.GroupType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.HttpHeader">
            <summary>
            The HTTP header.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.HttpHeader.HeaderName">
            <summary>
            Gets and sets the property HeaderName. 
            <para>
            The header name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.HttpHeader.HeaderValue">
            <summary>
            Gets and sets the property HeaderValue. 
            <para>
            The header value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IdentityProviderType">
            <summary>
            A container for information about an IdP.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.AttributeMapping">
            <summary>
            Gets and sets the property AttributeMapping. 
            <para>
            A mapping of IdP attributes to standard and custom user pool attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the IdP was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.IdpIdentifiers">
            <summary>
            Gets and sets the property IdpIdentifiers. 
            <para>
            A list of IdP identifiers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the IdP was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.ProviderDetails">
            <summary>
            Gets and sets the property ProviderDetails. 
            <para>
            The IdP details. The following list describes the provider detail keys for each IdP
            type.
            </para>
             <ul> <li> 
            <para>
            For Google and Login with Amazon:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            client_secret
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> </ul> </li> <li> 
            <para>
            For Facebook:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            client_secret
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> <li> 
            <para>
            api_version
            </para>
             </li> </ul> </li> <li> 
            <para>
            For Sign in with Apple:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            team_id
            </para>
             </li> <li> 
            <para>
            key_id
            </para>
             </li> <li> 
            <para>
            private_key
            </para>
             
            <para>
             <i>You can submit a private_key when you add or update an IdP. Describe operations
            don't return the private key.</i> 
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> </ul> </li> <li> 
            <para>
            For OIDC providers:
            </para>
             <ul> <li> 
            <para>
            client_id
            </para>
             </li> <li> 
            <para>
            client_secret
            </para>
             </li> <li> 
            <para>
            attributes_request_method
            </para>
             </li> <li> 
            <para>
            oidc_issuer
            </para>
             </li> <li> 
            <para>
            authorize_scopes
            </para>
             </li> <li> 
            <para>
            The following keys are only present if Amazon Cognito didn't discover them at the
            <code>oidc_issuer</code> URL.
            </para>
             <ul> <li> 
            <para>
            authorize_url 
            </para>
             </li> <li> 
            <para>
            token_url 
            </para>
             </li> <li> 
            <para>
            attributes_url 
            </para>
             </li> <li> 
            <para>
            jwks_uri 
            </para>
             </li> </ul> </li> <li> 
            <para>
            Amazon Cognito sets the value of the following keys automatically. They are read-only.
            </para>
             <ul> <li> 
            <para>
            attributes_url_add_attributes 
            </para>
             </li> </ul> </li> </ul> </li> <li> 
            <para>
            For SAML providers:
            </para>
             <ul> <li> 
            <para>
            MetadataFile or MetadataURL
            </para>
             </li> <li> 
            <para>
            IDPSignout <i>optional</i> 
            </para>
             </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The IdP name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.ProviderType">
            <summary>
            Gets and sets the property ProviderType. 
            <para>
            The IdP type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IdentityProviderType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest">
            <summary>
            Container for the parameters to the InitiateAuth operation.
            Initiates sign-in for a user in the Amazon Cognito user directory. You can't sign
            in a user with a federated IdP with <code>InitiateAuth</code>. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation.html">
            Adding user pool sign-in through a third party</a>.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The Amazon Pinpoint analytics metadata that contributes to your metrics for <code>InitiateAuth</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.AuthFlow">
            <summary>
            Gets and sets the property AuthFlow. 
            <para>
            The authentication flow for this call to run. The API action will depend on this value.
            For example:
            </para>
             <ul> <li> 
            <para>
             <code>REFRESH_TOKEN_AUTH</code> takes in a valid refresh token and returns new tokens.
            </para>
             </li> <li> 
            <para>
             <code>USER_SRP_AUTH</code> takes in <code>USERNAME</code> and <code>SRP_A</code>
            and returns the SRP variables to be used for next challenge execution.
            </para>
             </li> <li> 
            <para>
             <code>USER_PASSWORD_AUTH</code> takes in <code>USERNAME</code> and <code>PASSWORD</code>
            and returns the next challenge or tokens.
            </para>
             </li> </ul> 
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>USER_SRP_AUTH</code>: Authentication flow for the Secure Remote Password (SRP)
            protocol.
            </para>
             </li> <li> 
            <para>
             <code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>: Authentication flow for
            refreshing the access token and ID token by supplying a valid refresh token.
            </para>
             </li> <li> 
            <para>
             <code>CUSTOM_AUTH</code>: Custom authentication flow.
            </para>
             </li> <li> 
            <para>
             <code>USER_PASSWORD_AUTH</code>: Non-SRP authentication flow; user name and password
            are passed directly. If a user migration Lambda trigger is set, this flow will invoke
            the user migration Lambda if it doesn't find the user name in the user pool. 
            </para>
             </li> </ul> 
            <para>
             <code>ADMIN_NO_SRP_AUTH</code> isn't a valid value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.AuthParameters">
            <summary>
            Gets and sets the property AuthParameters. 
            <para>
            The authentication parameters. These are inputs corresponding to the <code>AuthFlow</code>
            that you're invoking. The required values depend on the value of <code>AuthFlow</code>:
            </para>
             <ul> <li> 
            <para>
            For <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>
            (required), <code>SECRET_HASH</code> (required if the app client is configured with
            a client secret), <code>DEVICE_KEY</code>.
            </para>
             </li> <li> 
            <para>
            For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>: <code>REFRESH_TOKEN</code> (required),
            <code>SECRET_HASH</code> (required if the app client is configured with a client secret),
            <code>DEVICE_KEY</code>.
            </para>
             </li> <li> 
            <para>
            For <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required), <code>SECRET_HASH</code>
            (if app client is configured with client secret), <code>DEVICE_KEY</code>. To start
            the authentication flow with password verification, include <code>ChallengeName: SRP_A</code>
            and <code>SRP_A: (The SRP_A Value)</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for certain custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the InitiateAuth API action, Amazon Cognito invokes the Lambda functions that
            are specified for various triggers. The ClientMetadata value is passed as input to
            the functions for only the following triggers:
            </para>
             <ul> <li> 
            <para>
            Pre signup
            </para>
             </li> <li> 
            <para>
            Pre authentication
            </para>
             </li> <li> 
            <para>
            User migration
            </para>
             </li> </ul> 
            <para>
            When Amazon Cognito invokes the functions for these triggers, it passes a JSON payload,
            which the function receives as input. This payload contains a <code>validationData</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your InitiateAuth request. In your function code in Lambda, you can process the
            <code>validationData</code> value to enhance your workflow for your specific needs.
            </para>
             
            <para>
            When you use the InitiateAuth API action, Amazon Cognito also invokes the functions
            for the following triggers, but it doesn't provide the ClientMetadata value as input:
            </para>
             <ul> <li> 
            <para>
            Post authentication
            </para>
             </li> <li> 
            <para>
            Custom message
            </para>
             </li> <li> 
            <para>
            Pre token generation
            </para>
             </li> <li> 
            <para>
            Create auth challenge
            </para>
             </li> <li> 
            <para>
            Define auth challenge
            </para>
             </li> <li> 
            <para>
            Verify auth challenge
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.UserContextData">
            <summary>
            Gets and sets the property UserContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse">
            <summary>
            Initiates the authentication response.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result of the authentication response. This result is only returned if the caller
            doesn't need to pass another challenge. If the caller does need to pass another challenge
            before it gets tokens, <code>ChallengeName</code>, <code>ChallengeParameters</code>,
            and <code>Session</code> are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The name of the challenge that you're responding to with this call. This name is returned
            in the <code>AdminInitiateAuth</code> response if you must pass another challenge.
            </para>
             
            <para>
            Valid values include the following:
            </para>
             <note> 
            <para>
            All of the following challenges require <code>USERNAME</code> and <code>SECRET_HASH</code>
            (if applicable) in the parameters.
            </para>
             </note> <ul> <li> 
            <para>
             <code>SMS_MFA</code>: Next challenge is to supply an <code>SMS_MFA_CODE</code>, delivered
            via SMS.
            </para>
             </li> <li> 
            <para>
             <code>PASSWORD_VERIFIER</code>: Next challenge is to supply <code>PASSWORD_CLAIM_SIGNATURE</code>,
            <code>PASSWORD_CLAIM_SECRET_BLOCK</code>, and <code>TIMESTAMP</code> after the client-side
            SRP calculations.
            </para>
             </li> <li> 
            <para>
             <code>CUSTOM_CHALLENGE</code>: This is returned if your custom authentication flow
            determines that the user should pass another challenge before tokens are issued.
            </para>
             </li> <li> 
            <para>
             <code>DEVICE_SRP_AUTH</code>: If device tracking was activated on your user pool
            and the previous challenges were passed, this challenge is returned so that Amazon
            Cognito can start tracking this device.
            </para>
             </li> <li> 
            <para>
             <code>DEVICE_PASSWORD_VERIFIER</code>: Similar to <code>PASSWORD_VERIFIER</code>,
            but for devices only.
            </para>
             </li> <li> 
            <para>
             <code>NEW_PASSWORD_REQUIRED</code>: For users who are required to change their passwords
            after successful first login. 
            </para>
             
            <para>
            Respond to this challenge with <code>NEW_PASSWORD</code> and any required attributes
            that Amazon Cognito returned in the <code>requiredAttributes</code> parameter. You
            can also set values for attributes that aren't required by your user pool and that
            your app client can write. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RespondToAuthChallenge.html">RespondToAuthChallenge</a>.
            </para>
             <note> 
            <para>
            In a <code>NEW_PASSWORD_REQUIRED</code> challenge response, you can't modify a required
            attribute that already has a value. In <code>RespondToAuthChallenge</code>, set a
            value for any keys that Amazon Cognito returned in the <code>requiredAttributes</code>
            parameter, then use the <code>UpdateUserAttributes</code> API operation to modify
            the value of any additional attributes.
            </para>
             </note> </li> <li> 
            <para>
             <code>MFA_SETUP</code>: For users who are required to setup an MFA factor before
            they can sign in. The MFA types activated for the user pool will be listed in the
            challenge parameters <code>MFA_CAN_SETUP</code> value. 
            </para>
             
            <para>
             To set up software token MFA, use the session returned here from <code>InitiateAuth</code>
            as an input to <code>AssociateSoftwareToken</code>. Use the session returned by <code>VerifySoftwareToken</code>
            as an input to <code>RespondToAuthChallenge</code> with challenge name <code>MFA_SETUP</code>
            to complete sign-in. To set up SMS MFA, an administrator should help the user to add
            a phone number to their account, and then the user should call <code>InitiateAuth</code>
            again to restart sign-in.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters. These are returned in the <code>InitiateAuth</code> response
            if you must pass another challenge. The responses in this parameter should be used
            to compute inputs to the next call (<code>RespondToAuthChallenge</code>). 
            </para>
             
            <para>
            All challenges require <code>USERNAME</code> and <code>SECRET_HASH</code> (if applicable).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.InitiateAuthResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should pass both ways in challenge-response calls to the service.
            If the caller must pass another challenge, they return a session with other challenge
            parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
            API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            <summary>
            This exception is thrown when Amazon Cognito encounters an internal error.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalErrorException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InternalErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeMarshaller">
            <summary>
            AccountRecoverySettingType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AccountRecoverySettingType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AccountRecoverySettingType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AccountRecoverySettingType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountRecoverySettingTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeMarshaller">
            <summary>
            AccountTakeoverActionsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AccountTakeoverActionsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AccountTakeoverActionsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeMarshaller">
            <summary>
            AccountTakeoverActionType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AccountTakeoverActionType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AccountTakeoverActionType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AccountTakeoverActionType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverActionTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeMarshaller">
            <summary>
            AccountTakeoverRiskConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AccountTakeoverRiskConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AccountTakeoverRiskConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AccountTakeoverRiskConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AccountTakeoverRiskConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller">
            <summary>
            AddCustomAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddCustomAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AddCustomAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller">
            <summary>
            AdminAddUserToGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminAddUserToGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminAddUserToGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller">
            <summary>
            AdminConfirmSignUp Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminConfirmSignUp operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminConfirmSignUpResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeMarshaller">
            <summary>
            AdminCreateUserConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminCreateUserConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AdminCreateUserConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AdminCreateUserConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller">
            <summary>
            AdminCreateUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminCreateUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminCreateUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller">
            <summary>
            AdminDeleteUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminDeleteUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller">
            <summary>
            AdminDeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminDeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserRequestMarshaller">
            <summary>
            AdminDisableProviderForUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminDisableProviderForUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableProviderForUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller">
            <summary>
            AdminDisableUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminDisableUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminDisableUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller">
            <summary>
            AdminEnableUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminEnableUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminEnableUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller">
            <summary>
            AdminForgetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminForgetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminForgetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller">
            <summary>
            AdminGetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminGetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller">
            <summary>
            AdminGetUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminGetUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminGetUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller">
            <summary>
            AdminInitiateAuth Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminInitiateAuth operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminInitiateAuthResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserRequestMarshaller">
            <summary>
            AdminLinkProviderForUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminLinkProviderForUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminLinkProviderForUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller">
            <summary>
            AdminListDevices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminListDevices operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListDevicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller">
            <summary>
            AdminListGroupsForUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminListGroupsForUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListGroupsForUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsRequestMarshaller">
            <summary>
            AdminListUserAuthEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminListUserAuthEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminListUserAuthEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller">
            <summary>
            AdminRemoveUserFromGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminRemoveUserFromGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRemoveUserFromGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller">
            <summary>
            AdminResetUserPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminResetUserPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminResetUserPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller">
            <summary>
            AdminRespondToAuthChallenge Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminRespondToAuthChallenge operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminRespondToAuthChallengeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceRequestMarshaller">
            <summary>
            AdminSetUserMFAPreference Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminSetUserMFAPreference operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserMFAPreferenceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordRequestMarshaller">
            <summary>
            AdminSetUserPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminSetUserPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller">
            <summary>
            AdminSetUserSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminSetUserSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminSetUserSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackRequestMarshaller">
            <summary>
            AdminUpdateAuthEventFeedback Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminUpdateAuthEventFeedback operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateAuthEventFeedbackResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller">
            <summary>
            AdminUpdateDeviceStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminUpdateDeviceStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateDeviceStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller">
            <summary>
            AdminUpdateUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminUpdateUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUpdateUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller">
            <summary>
            AdminUserGlobalSignOut Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AdminUserGlobalSignOut operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AdminUserGlobalSignOutResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AliasExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AliasExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AliasExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AliasExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AliasExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeMarshaller">
            <summary>
            AnalyticsConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AnalyticsConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AnalyticsConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AnalyticsConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsMetadataTypeMarshaller">
            <summary>
            AnalyticsMetadataType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsMetadataTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AnalyticsMetadataType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AnalyticsMetadataTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenRequestMarshaller">
            <summary>
            AssociateSoftwareToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateSoftwareToken operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AssociateSoftwareTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeMarshaller">
            <summary>
            AttributeType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.AttributeType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AttributeType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AttributeType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AttributeTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AuthenticationResultType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AuthenticationResultType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthenticationResultTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthEventTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AuthEventType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthEventTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#AuthEventType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthEventTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.AuthEventTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChallengeResponseTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ChallengeResponseType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChallengeResponseTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#ChallengeResponseType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChallengeResponseTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChallengeResponseTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller">
            <summary>
            ChangePassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ChangePassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ChangePasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for CodeDeliveryDetailsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#CodeDeliveryDetailsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryDetailsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CodeDeliveryFailureException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeDeliveryFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeMismatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CodeMismatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CodeMismatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeMarshaller">
            <summary>
            CompromisedCredentialsActionsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsActionsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for CompromisedCredentialsActionsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#CompromisedCredentialsActionsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsActionsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeMarshaller">
            <summary>
            CompromisedCredentialsRiskConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CompromisedCredentialsRiskConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for CompromisedCredentialsRiskConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#CompromisedCredentialsRiskConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CompromisedCredentialsRiskConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConcurrentModificationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller">
            <summary>
            ConfirmDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller">
            <summary>
            ConfirmForgotPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmForgotPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmForgotPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller">
            <summary>
            ConfirmSignUp Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmSignUp operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ConfirmSignUpResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ContextDataTypeMarshaller">
            <summary>
            ContextDataType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ContextDataTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ContextDataType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ContextDataTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller">
            <summary>
            CreateGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderRequestMarshaller">
            <summary>
            CreateIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerRequestMarshaller">
            <summary>
            CreateResourceServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateResourceServer operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateResourceServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller">
            <summary>
            CreateUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller">
            <summary>
            CreateUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainRequestMarshaller">
            <summary>
            CreateUserPoolDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUserPoolDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller">
            <summary>
            CreateUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CreateUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeMarshaller">
            <summary>
            CustomDomainConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CustomDomainConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for CustomDomainConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#CustomDomainConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomDomainConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeMarshaller">
            <summary>
            CustomEmailLambdaVersionConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CustomEmailLambdaVersionConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for CustomEmailLambdaVersionConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#CustomEmailLambdaVersionConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomEmailLambdaVersionConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeMarshaller">
            <summary>
            CustomSMSLambdaVersionConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.CustomSMSLambdaVersionConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for CustomSMSLambdaVersionConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#CustomSMSLambdaVersionConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.CustomSMSLambdaVersionConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller">
            <summary>
            DeleteGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderRequestMarshaller">
            <summary>
            DeleteIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerRequestMarshaller">
            <summary>
            DeleteResourceServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteResourceServer operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteResourceServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller">
            <summary>
            DeleteUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller">
            <summary>
            DeleteUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainRequestMarshaller">
            <summary>
            DeleteUserPoolDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUserPoolDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller">
            <summary>
            DeleteUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller">
            <summary>
            DeleteUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeleteUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderRequestMarshaller">
            <summary>
            DescribeIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerRequestMarshaller">
            <summary>
            DescribeResourceServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeResourceServer operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeResourceServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationRequestMarshaller">
            <summary>
            DescribeRiskConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRiskConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeRiskConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller">
            <summary>
            DescribeUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller">
            <summary>
            DescribeUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainRequestMarshaller">
            <summary>
            DescribeUserPoolDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUserPoolDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller">
            <summary>
            DescribeUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DescribeUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeMarshaller">
            <summary>
            DeviceConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeviceConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for DeviceConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#DeviceConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceSecretVerifierConfigTypeMarshaller">
            <summary>
            DeviceSecretVerifierConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceSecretVerifierConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.DeviceSecretVerifierConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceSecretVerifierConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller">
            <summary>
            Response Unmarshaller for DeviceType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#DeviceType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DeviceTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DomainDescriptionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for DomainDescriptionType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DomainDescriptionTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#DomainDescriptionType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DomainDescriptionTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DomainDescriptionTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DuplicateProviderExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DuplicateProviderException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DuplicateProviderExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DuplicateProviderExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.DuplicateProviderExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeMarshaller">
            <summary>
            EmailConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.EmailConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for EmailConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#EmailConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EmailConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EnableSoftwareTokenMFAExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EnableSoftwareTokenMFAException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EnableSoftwareTokenMFAExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EnableSoftwareTokenMFAExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EnableSoftwareTokenMFAExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventContextDataTypeUnmarshaller">
            <summary>
            Response Unmarshaller for EventContextDataType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventContextDataTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#EventContextDataType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventContextDataTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventContextDataTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventFeedbackTypeUnmarshaller">
            <summary>
            Response Unmarshaller for EventFeedbackType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventFeedbackTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#EventFeedbackType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventFeedbackTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventFeedbackTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventRiskTypeUnmarshaller">
            <summary>
            Response Unmarshaller for EventRiskType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventRiskTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#EventRiskType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventRiskTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.EventRiskTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ExpiredCodeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ExpiredCodeException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ExpiredCodeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ExpiredCodeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ExpiredCodeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ForbiddenException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForbiddenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller">
            <summary>
            ForgetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ForgetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller">
            <summary>
            ForgotPassword Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ForgotPassword operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ForgotPasswordResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller">
            <summary>
            GetCSVHeader Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCSVHeader operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetCSVHeaderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller">
            <summary>
            GetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller">
            <summary>
            GetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierRequestMarshaller">
            <summary>
            GetIdentityProviderByIdentifier Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityProviderByIdentifier operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetIdentityProviderByIdentifierResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateRequestMarshaller">
            <summary>
            GetSigningCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSigningCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetSigningCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationRequestMarshaller">
            <summary>
            GetUICustomization Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUICustomization operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUICustomizationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller">
            <summary>
            GetUserAttributeVerificationCode Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUserAttributeVerificationCode operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserAttributeVerificationCodeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigRequestMarshaller">
            <summary>
            GetUserPoolMfaConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUserPoolMfaConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserPoolMfaConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller">
            <summary>
            GetUser Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GetUserRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUser operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GetUserResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller">
            <summary>
            GlobalSignOut Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalSignOut operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GlobalSignOutResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for GroupExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller">
            <summary>
            Response Unmarshaller for GroupType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#GroupType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.GroupTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.HttpHeaderMarshaller">
            <summary>
            HttpHeader Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.HttpHeaderMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.HttpHeader,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.HttpHeaderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.IdentityProviderTypeUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityProviderType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.IdentityProviderTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#IdentityProviderType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.IdentityProviderTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.IdentityProviderTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller">
            <summary>
            InitiateAuth Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller">
            <summary>
            Response Unmarshaller for InitiateAuth operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InitiateAuthResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InternalErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InternalErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InternalErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InternalErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidEmailRoleAccessPolicyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidEmailRoleAccessPolicyException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidEmailRoleAccessPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidEmailRoleAccessPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidEmailRoleAccessPolicyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidLambdaResponseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidLambdaResponseException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidLambdaResponseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidLambdaResponseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidLambdaResponseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidOAuthFlowExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidOAuthFlowException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidOAuthFlowExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidOAuthFlowExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidOAuthFlowExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidPasswordExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPasswordException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidPasswordExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidPasswordExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidPasswordExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleAccessPolicyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSmsRoleAccessPolicyException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleAccessPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleAccessPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleAccessPolicyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleTrustRelationshipExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSmsRoleTrustRelationshipException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleTrustRelationshipExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleTrustRelationshipExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidSmsRoleTrustRelationshipExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidUserPoolConfigurationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidUserPoolConfigurationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidUserPoolConfigurationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidUserPoolConfigurationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.InvalidUserPoolConfigurationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeMarshaller">
            <summary>
            LambdaConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.LambdaConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#LambdaConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LambdaConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller">
            <summary>
            ListDevices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDevices operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller">
            <summary>
            ListGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller">
            <summary>
            ListIdentityProviders Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentityProviders operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListIdentityProvidersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersRequestMarshaller">
            <summary>
            ListResourceServers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListResourceServers operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListResourceServersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller">
            <summary>
            ListUserImportJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserImportJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserImportJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller">
            <summary>
            ListUserPoolClients Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserPoolClients operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolClientsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller">
            <summary>
            ListUserPools Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUserPools operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUserPoolsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller">
            <summary>
            ListUsersInGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsersInGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersInGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller">
            <summary>
            ListUsers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUsers operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ListUsersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeMarshaller">
            <summary>
            MessageTemplateType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.MessageTemplateType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller">
            <summary>
            Response Unmarshaller for MessageTemplateType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#MessageTemplateType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MessageTemplateTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAMethodNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MFAMethodNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAMethodNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAMethodNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAMethodNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeMarshaller">
            <summary>
            MFAOptionType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.MFAOptionType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for MFAOptionType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#MFAOptionType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.MFAOptionTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller">
            <summary>
            Response Unmarshaller for NewDeviceMetadataType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#NewDeviceMetadataType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NewDeviceMetadataTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotAuthorizedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeMarshaller">
            <summary>
            NotifyConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for NotifyConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#NotifyConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeMarshaller">
            <summary>
            NotifyEmailType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.NotifyEmailType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeUnmarshaller">
            <summary>
            Response Unmarshaller for NotifyEmailType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#NotifyEmailType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NotifyEmailTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeMarshaller">
            <summary>
            NumberAttributeConstraintsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for NumberAttributeConstraintsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#NumberAttributeConstraintsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.NumberAttributeConstraintsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeMarshaller">
            <summary>
            PasswordPolicyType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.PasswordPolicyType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller">
            <summary>
            Response Unmarshaller for PasswordPolicyType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#PasswordPolicyType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordPolicyTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordResetRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PasswordResetRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordResetRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordResetRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PasswordResetRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PreconditionNotMetException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.PreconditionNotMetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProviderDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#ProviderDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderUserIdentifierTypeMarshaller">
            <summary>
            ProviderUserIdentifierType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderUserIdentifierTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ProviderUserIdentifierType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ProviderUserIdentifierTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeMarshaller">
            <summary>
            RecoveryOptionType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.RecoveryOptionType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for RecoveryOptionType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#RecoveryOptionType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RecoveryOptionTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller">
            <summary>
            ResendConfirmationCode Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResendConfirmationCode operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResendConfirmationCodeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeMarshaller">
            <summary>
            ResourceServerScopeType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.ResourceServerScopeType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceServerScopeType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#ResourceServerScopeType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerScopeTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceServerType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#ResourceServerType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ResourceServerTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller">
            <summary>
            RespondToAuthChallenge Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RespondToAuthChallenge operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RespondToAuthChallengeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenRequestMarshaller">
            <summary>
            RevokeToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeToken operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RevokeTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for RiskConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#RiskConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeMarshaller">
            <summary>
            RiskExceptionConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.RiskExceptionConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for RiskExceptionConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#RiskExceptionConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.RiskExceptionConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeMarshaller">
            <summary>
            SchemaAttributeType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SchemaAttributeType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller">
            <summary>
            Response Unmarshaller for SchemaAttributeType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#SchemaAttributeType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SchemaAttributeTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ScopeDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ScopeDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ScopeDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ScopeDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.ScopeDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationRequestMarshaller">
            <summary>
            SetRiskConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetRiskConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetRiskConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationRequestMarshaller">
            <summary>
            SetUICustomization Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetUICustomization operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUICustomizationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceRequestMarshaller">
            <summary>
            SetUserMFAPreference Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetUserMFAPreference operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserMFAPreferenceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigRequestMarshaller">
            <summary>
            SetUserPoolMfaConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetUserPoolMfaConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserPoolMfaConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller">
            <summary>
            SetUserSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetUserSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SetUserSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller">
            <summary>
            SignUp Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SignUpRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SignUp operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SignUpResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeMarshaller">
            <summary>
            SmsConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SmsConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for SmsConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#SmsConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeMarshaller">
            <summary>
            SmsMfaConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SmsMfaConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for SmsMfaConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#SmsMfaConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SmsMfaConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SMSMfaSettingsTypeMarshaller">
            <summary>
            SMSMfaSettingsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SMSMfaSettingsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SMSMfaSettingsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SMSMfaSettingsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeMarshaller">
            <summary>
            SoftwareTokenMfaConfigType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaConfigType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeUnmarshaller">
            <summary>
            Response Unmarshaller for SoftwareTokenMfaConfigType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#SoftwareTokenMfaConfigType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaConfigTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMFANotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SoftwareTokenMFANotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMFANotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMFANotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMFANotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaSettingsTypeMarshaller">
            <summary>
            SoftwareTokenMfaSettingsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaSettingsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaSettingsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.SoftwareTokenMfaSettingsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller">
            <summary>
            StartUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StartUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller">
            <summary>
            StopUserImportJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopUserImportJob operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StopUserImportJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeMarshaller">
            <summary>
            StringAttributeConstraintsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for StringAttributeConstraintsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#StringAttributeConstraintsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.StringAttributeConstraintsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeMarshaller">
            <summary>
            TokenValidityUnitsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.TokenValidityUnitsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for TokenValidityUnitsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#TokenValidityUnitsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TokenValidityUnitsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyFailedAttemptsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyFailedAttemptsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyFailedAttemptsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyFailedAttemptsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyFailedAttemptsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyRequestsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.TooManyRequestsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UICustomizationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UICustomizationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UICustomizationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UICustomizationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UICustomizationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UICustomizationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnauthorizedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnauthorizedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnexpectedLambdaExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnexpectedLambdaException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnexpectedLambdaExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnexpectedLambdaExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnexpectedLambdaExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedIdentityProviderExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedIdentityProviderException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedIdentityProviderExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedIdentityProviderExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedIdentityProviderExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedOperationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedOperationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedTokenTypeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedTokenTypeException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedTokenTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedTokenTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedTokenTypeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedUserStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnsupportedUserStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedUserStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedUserStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UnsupportedUserStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackRequestMarshaller">
            <summary>
            UpdateAuthEventFeedback Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAuthEventFeedback operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateAuthEventFeedbackResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller">
            <summary>
            UpdateDeviceStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDeviceStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateDeviceStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller">
            <summary>
            UpdateGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderRequestMarshaller">
            <summary>
            UpdateIdentityProvider Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateIdentityProvider operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateIdentityProviderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerRequestMarshaller">
            <summary>
            UpdateResourceServer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateResourceServer operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateResourceServerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller">
            <summary>
            UpdateUserAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUserAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller">
            <summary>
            UpdateUserPoolClient Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUserPoolClient operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolClientResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainRequestMarshaller">
            <summary>
            UpdateUserPoolDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUserPoolDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller">
            <summary>
            UpdateUserPool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateUserPool operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UpdateUserPoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeMarshaller">
            <summary>
            UserAttributeUpdateSettingsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UserAttributeUpdateSettingsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserAttributeUpdateSettingsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserAttributeUpdateSettingsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserAttributeUpdateSettingsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserContextDataTypeMarshaller">
            <summary>
            UserContextDataType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserContextDataTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UserContextDataType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserContextDataTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportInProgressExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserImportInProgressException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportInProgressExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserImportJobType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserImportJobType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserImportJobTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserLambdaValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserLambdaValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserLambdaValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserLambdaValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserLambdaValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeMarshaller">
            <summary>
            UsernameConfigurationType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UsernameConfigurationType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UsernameConfigurationType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UsernameConfigurationType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameConfigurationTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UsernameExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UsernameExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotConfirmedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserNotConfirmedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotConfirmedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotConfirmedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotConfirmedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnNotEnabledExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolAddOnNotEnabledException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnNotEnabledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnNotEnabledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnNotEnabledExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeMarshaller">
            <summary>
            UserPoolAddOnsType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UserPoolAddOnsType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolAddOnsType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolAddOnsType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolAddOnsTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolClientDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolClientDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolClientType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolClientType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolClientTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolDescriptionType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolDescriptionType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolDescriptionTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeMarshaller">
            <summary>
            UserPoolPolicyType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolPolicyType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolPolicyType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolPolicyTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTaggingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolTaggingException Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTaggingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTaggingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTaggingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserPoolType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserPoolType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserPoolTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller">
            <summary>
            Response Unmarshaller for UserType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#UserType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.UserTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeMarshaller">
            <summary>
            VerificationMessageTemplateType Marshaller
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeUnmarshaller">
            <summary>
            Response Unmarshaller for VerificationMessageTemplateType Object
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CognitoIdentityProvider#Model#VerificationMessageTemplateType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerificationMessageTemplateTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenRequestMarshaller">
            <summary>
            VerifySoftwareToken Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifySoftwareToken operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifySoftwareTokenResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller">
            <summary>
            VerifyUserAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller.Marshall(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyUserAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.Internal.MarshallTransformations.VerifyUserAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            <summary>
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEmailRoleAccessPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEmailRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEmailRoleAccessPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            <summary>
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidLambdaResponseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLambdaResponseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidLambdaResponseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            <summary>
            This exception is thrown when the specified OAuth flow is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidOAuthFlowException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidOAuthFlowException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidOAuthFlowException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOAuthFlowException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOAuthFlowException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidOAuthFlowException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            <summary>
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            <summary>
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPasswordException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPasswordException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPasswordException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            <summary>
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSmsRoleAccessPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleAccessPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSmsRoleAccessPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            <summary>
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSmsRoleTrustRelationshipException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSmsRoleTrustRelationshipException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSmsRoleTrustRelationshipException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            <summary>
            This exception is thrown when the user pool configuration is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidUserPoolConfigurationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidUserPoolConfigurationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidUserPoolConfigurationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.LambdaConfigType">
            <summary>
            Specifies the configuration for Lambda triggers.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.CreateAuthChallenge">
            <summary>
            Gets and sets the property CreateAuthChallenge. 
            <para>
            Creates an authentication challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.CustomEmailSender">
            <summary>
            Gets and sets the property CustomEmailSender. 
            <para>
            A custom email sender Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.CustomMessage">
            <summary>
            Gets and sets the property CustomMessage. 
            <para>
            A custom Message Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.CustomSMSSender">
            <summary>
            Gets and sets the property CustomSMSSender. 
            <para>
            A custom SMS sender Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.DefineAuthChallenge">
            <summary>
            Gets and sets the property DefineAuthChallenge. 
            <para>
            Defines the authentication challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.KMSKeyID">
            <summary>
            Gets and sets the property KMSKeyID. 
            <para>
            The Amazon Resource Name (ARN) of an <a href="/kms/latest/developerguide/concepts.html#master_keys">KMS
            key</a>. Amazon Cognito uses the key to encrypt codes and temporary passwords sent
            to <code>CustomEmailSender</code> and <code>CustomSMSSender</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PostAuthentication">
            <summary>
            Gets and sets the property PostAuthentication. 
            <para>
            A post-authentication Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PostConfirmation">
            <summary>
            Gets and sets the property PostConfirmation. 
            <para>
            A post-confirmation Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PreAuthentication">
            <summary>
            Gets and sets the property PreAuthentication. 
            <para>
            A pre-authentication Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PreSignUp">
            <summary>
            Gets and sets the property PreSignUp. 
            <para>
            A pre-registration Lambda trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.PreTokenGeneration">
            <summary>
            Gets and sets the property PreTokenGeneration. 
            <para>
            A Lambda trigger that is invoked before token generation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.UserMigration">
            <summary>
            Gets and sets the property UserMigration. 
            <para>
            The user migration Lambda config type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.LambdaConfigType.VerifyAuthChallengeResponse">
            <summary>
            Gets and sets the property VerifyAuthChallengeResponse. 
            <para>
            Verifies the authentication challenge response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            <summary>
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest">
            <summary>
            Container for the parameters to the ListDevices operation.
            Lists the sign-in devices that Amazon Cognito has registered to the current user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose list of devices
            you want to view.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the device request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token for the list request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListDevicesResponse">
            <summary>
            Represents the response to list devices.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesResponse.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            The devices returned in the list devices response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListDevicesResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            The pagination token for the list device response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest">
            <summary>
            Container for the parameters to the ListGroups operation.
            Lists the groups associated with a user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the request to list groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListGroupsResponse">
            <summary>
            This is the response object from the ListGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsResponse.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The group objects for the groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest">
            <summary>
            Container for the parameters to the ListIdentityProviders operation.
            Lists information about all IdPs for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of IdPs to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersResponse">
            <summary>
            This is the response object from the ListIdentityProviders operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersResponse.Providers">
            <summary>
            Gets and sets the property Providers. 
            <para>
            A list of IdP objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest">
            <summary>
            Container for the parameters to the ListResourceServers operation.
            Lists the resource servers for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of resource servers to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListResourceServersResponse">
            <summary>
            This is the response object from the ListResourceServers operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListResourceServersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListResourceServersResponse.ResourceServers">
            <summary>
            Gets and sets the property ResourceServers. 
            <para>
            The resource servers.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists the tags that are assigned to an Amazon Cognito user pool.
            
             
            <para>
            A tag is a label that you can apply to user pools to categorize and manage them in
            different ways, such as by purpose, owner, environment, or other criteria.
            </para>
             
            <para>
            You can use this action up to 10 times per second, per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the user pool that the tags are assigned to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that are assigned to the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest">
            <summary>
            Container for the parameters to the ListUserImportJobs operation.
            Lists the user import jobs.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of import jobs you want the request to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that was returned from the previous call to <code>ListUserImportJobs</code>,
            which can be used to return the next set of import jobs in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse">
            <summary>
            Represents the response from the server to the request to list the user import jobs.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that can be used to return the next set of user import jobs in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserImportJobsResponse.UserImportJobs">
            <summary>
            Gets and sets the property UserImportJobs. 
            <para>
            The user import jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest">
            <summary>
            Container for the parameters to the ListUserPoolClients operation.
            Lists the clients that have been created for the specified user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results you want the request to return when listing the user
            pool clients.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to list user pool clients.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse">
            <summary>
            Represents the response from the server that lists user pool clients.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsResponse.UserPoolClients">
            <summary>
            Gets and sets the property UserPoolClients. 
            <para>
            The user pool clients in the response that lists user pool clients.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest">
            <summary>
            Container for the parameters to the ListUserPools operation.
            Lists the user pools associated with an Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results you want the request to return when listing the user
            pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse">
            <summary>
            Represents the response to list user pools.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsResponse.UserPools">
            <summary>
            Gets and sets the property UserPools. 
            <para>
            The user pools from the response to list users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest">
            <summary>
            Container for the parameters to the ListUsersInGroup operation.
            Lists the users in the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The limit of the request to list users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse">
            <summary>
            This is the response object from the ListUsersInGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that you can use in a later request to return the next set of items
            in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            The users returned in the request to list users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersRequest">
            <summary>
            Container for the parameters to the ListUsers operation.
            Lists the users in the Amazon Cognito user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.AttributesToGet">
            <summary>
            Gets and sets the property AttributesToGet. 
            <para>
            An array of strings, where each string is the name of a user attribute to be returned
            for each user in the search results. If the array is null, all attributes are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            A filter string of the form "<i>AttributeName</i> <i>Filter-Type</i> "<i>AttributeValue</i>"".
            Quotation marks within the filter string must be escaped using the backslash (\) character.
            For example, "<code>family_name</code> = \"Reddy\"".
            </para>
             <ul> <li> 
            <para>
             <i>AttributeName</i>: The name of the attribute to search for. You can only search
            for one attribute at a time.
            </para>
             </li> <li> 
            <para>
             <i>Filter-Type</i>: For an exact match, use =, for example, "<code>given_name</code>
            = \"Jon\"". For a prefix ("starts with") match, use ^=, for example, "<code>given_name</code>
            ^= \"Jon\"". 
            </para>
             </li> <li> 
            <para>
             <i>AttributeValue</i>: The attribute value that must be matched for each user.
            </para>
             </li> </ul> 
            <para>
            If the filter string is empty, <code>ListUsers</code> returns all users in the user
            pool.
            </para>
             
            <para>
            You can only search for the following standard attributes:
            </para>
             <ul> <li> 
            <para>
             <code>username</code> (case-sensitive)
            </para>
             </li> <li> 
            <para>
             <code>email</code> 
            </para>
             </li> <li> 
            <para>
             <code>phone_number</code> 
            </para>
             </li> <li> 
            <para>
             <code>name</code> 
            </para>
             </li> <li> 
            <para>
             <code>given_name</code> 
            </para>
             </li> <li> 
            <para>
             <code>family_name</code> 
            </para>
             </li> <li> 
            <para>
             <code>preferred_username</code> 
            </para>
             </li> <li> 
            <para>
             <code>cognito:user_status</code> (called <b>Status</b> in the Console) (case-insensitive)
            </para>
             </li> <li> 
            <para>
             <code>status (called <b>Enabled</b> in the Console) (case-sensitive)</code> 
            </para>
             </li> <li> 
            <para>
             <code>sub</code> 
            </para>
             </li> </ul> 
            <para>
            Custom attributes aren't searchable.
            </para>
             <note> 
            <para>
            You can also list users with a client-side filter. The server-side filter matches
            no more than one attribute. For an advanced search, use a client-side filter with
            the <code>--query</code> parameter of the <code>list-users</code> action in the CLI.
            When you use a client-side filter, ListUsers returns a paginated list of zero or more
            users. You can receive multiple pages in a row with zero results. Repeat the query
            with each pagination token that is returned until you receive a null pagination token
            value, and then review the combined result. 
            </para>
             
            <para>
            For more information about server-side and client-side filtering, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">FilteringCLI
            output</a> in the <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-filter.html">Command
            Line Interface User Guide</a>. 
            </para>
             </note> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-using-listusers-api">Searching
            for Users Using the ListUsers API</a> and <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-listusers-api-examples">Examples
            of Using the ListUsers API</a> in the <i>Amazon Cognito Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            Maximum number of users to be returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool on which the search should be performed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersResponse">
            <summary>
            The response from the request to list users.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersResponse.PaginationToken">
            <summary>
            Gets and sets the property PaginationToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersResponse.Users">
            <summary>
            Gets and sets the property Users. 
            <para>
            The users returned in the request to list users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.MessageTemplateType">
            <summary>
            The message template structure.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MessageTemplateType.EmailMessage">
            <summary>
            Gets and sets the property EmailMessage. 
            <para>
            The message template for email messages. EmailMessage is allowed only if <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
            is DEVELOPER. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MessageTemplateType.EmailSubject">
            <summary>
            Gets and sets the property EmailSubject. 
            <para>
            The subject line for email messages. EmailSubject is allowed only if <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
            is DEVELOPER. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MessageTemplateType.SMSMessage">
            <summary>
            Gets and sets the property SMSMessage. 
            <para>
            The message template for SMS messages.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            <summary>
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new MFAMethodNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MFAMethodNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MFAMethodNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.MFAOptionType">
            <summary>
            <i>This data type is no longer supported.</i> Applies only to SMS multi-factor authentication
            (MFA) configurations. Does not apply to time-based one-time password (TOTP) software
            token MFA configurations.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MFAOptionType.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The attribute name of the MFA option type. The only valid value is <code>phone_number</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.MFAOptionType.DeliveryMedium">
            <summary>
            Gets and sets the property DeliveryMedium. 
            <para>
            The delivery medium to send the MFA code. You can use this parameter to set only the
            <code>SMS</code> delivery medium value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType">
            <summary>
            The new device metadata type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType.DeviceGroupKey">
            <summary>
            Gets and sets the property DeviceGroupKey. 
            <para>
            The device group key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NewDeviceMetadataType.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            <summary>
            This exception is thrown when a user isn't authorized.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new NotAuthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotAuthorizedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType">
            <summary>
            The notify configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType.BlockEmail">
            <summary>
            Gets and sets the property BlockEmail. 
            <para>
            Email template used when a detected risk event is blocked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The email address that is sending the email. The address must be either individually
            verified with Amazon Simple Email Service, or from a domain that has been verified
            with Amazon SES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType.MfaEmail">
            <summary>
            Gets and sets the property MfaEmail. 
            <para>
            The multi-factor authentication (MFA) email template used when MFA is challenged as
            part of a detected risk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType.NoActionEmail">
            <summary>
            Gets and sets the property NoActionEmail. 
            <para>
            The email template used when a detected risk event is allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType.ReplyTo">
            <summary>
            Gets and sets the property ReplyTo. 
            <para>
            The destination to which the receiver of an email should reply to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyConfigurationType.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the identity that is associated with the sending
            authorization policy. This identity permits Amazon Cognito to send for the email address
            specified in the <code>From</code> parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NotifyEmailType">
            <summary>
            The notify email type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyEmailType.HtmlBody">
            <summary>
            Gets and sets the property HtmlBody. 
            <para>
            The email HTML body.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyEmailType.Subject">
            <summary>
            Gets and sets the property Subject. 
            <para>
            The email subject.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NotifyEmailType.TextBody">
            <summary>
            Gets and sets the property TextBody. 
            <para>
            The email text body.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType">
            <summary>
            The minimum and maximum values of an attribute that is of the number data type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType.MaxValue">
            <summary>
            Gets and sets the property MaxValue. 
            <para>
            The maximum value of an attribute that is of the number data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.NumberAttributeConstraintsType.MinValue">
            <summary>
            Gets and sets the property MinValue. 
            <para>
            The minimum value of an attribute that is of the number data type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType">
            <summary>
            The password policy type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.MinimumLength">
            <summary>
            Gets and sets the property MinimumLength. 
            <para>
            The minimum length of the password in the policy that you have set. This value can't
            be less than 6.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireLowercase">
            <summary>
            Gets and sets the property RequireLowercase. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one lowercase letter in their password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireNumbers">
            <summary>
            Gets and sets the property RequireNumbers. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one number in their password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireSymbols">
            <summary>
            Gets and sets the property RequireSymbols. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one symbol in their password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.RequireUppercase">
            <summary>
            Gets and sets the property RequireUppercase. 
            <para>
            In the password policy that you have set, refers to whether you have required users
            to use at least one uppercase letter in their password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.PasswordPolicyType.TemporaryPasswordValidityDays">
            <summary>
            Gets and sets the property TemporaryPasswordValidityDays. 
            <para>
            The number of days a temporary password is valid in the password policy. If the user
            doesn't sign in during this time, an administrator must reset their password.
            </para>
             <note> 
            <para>
            When you set <code>TemporaryPasswordValidityDays</code> for a user pool, you can no
            longer set a value for the legacy <code>UnusedAccountValidityDays</code> parameter
            in that user pool.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            <summary>
            This exception is thrown when a password reset is required.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new PasswordResetRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PasswordResetRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PasswordResetRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            <summary>
            This exception is thrown when a precondition is not met.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String)">
            <summary>
            Constructs a new PreconditionNotMetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.Exception)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PreconditionNotMetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PreconditionNotMetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ProviderDescription">
            <summary>
            A container for IdP details.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ProviderDescription.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the provider was added to the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ProviderDescription.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the provider was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ProviderDescription.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The IdP name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ProviderDescription.ProviderType">
            <summary>
            Gets and sets the property ProviderType. 
            <para>
            The IdP type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ProviderUserIdentifierType">
            <summary>
            A container for information about an IdP for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ProviderUserIdentifierType.ProviderAttributeName">
            <summary>
            Gets and sets the property ProviderAttributeName. 
            <para>
            The name of the provider attribute to link to, such as <code>NameID</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ProviderUserIdentifierType.ProviderAttributeValue">
            <summary>
            Gets and sets the property ProviderAttributeValue. 
            <para>
            The value of the provider attribute to link to, such as <code>xxxxx_account</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ProviderUserIdentifierType.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The name of the provider, such as Facebook, Google, or Login with Amazon.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RecoveryOptionType">
            <summary>
            A map containing a priority as a key, and recovery method name as a value.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RecoveryOptionType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The recovery method for a user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RecoveryOptionType.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            A positive integer specifying priority of a method with 1 being the highest priority.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest">
            <summary>
            Container for the parameters to the ResendConfirmationCode operation.
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The Amazon Pinpoint analytics metadata that contributes to your metrics for <code>ResendConfirmationCode</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the ResendConfirmationCode API action, Amazon Cognito invokes the function
            that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes
            this function, it passes a JSON payload, which the function receives as input. This
            payload contains a <code>clientMetadata</code> attribute, which provides the data
            that you assigned to the ClientMetadata parameter in your ResendConfirmationCode request.
            In your function code in Lambda, you can process the <code>clientMetadata</code> value
            to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.UserContextData">
            <summary>
            Gets and sets the property UserContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The <code>username</code> attribute of the user to whom you want to resend a confirmation
            code.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeResponse">
            <summary>
            The response from the server when Amazon Cognito makes the request to resend a confirmation
            code.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server in response to the request to resend
            the confirmation code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            <summary>
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResourceServerScopeType">
            <summary>
            A resource server scope.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResourceServerScopeType.ScopeDescription">
            <summary>
            Gets and sets the property ScopeDescription. 
            <para>
            A description of the scope.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResourceServerScopeType.ScopeName">
            <summary>
            Gets and sets the property ScopeName. 
            <para>
            The name of the scope.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ResourceServerType">
            <summary>
            A container for information about a resource server for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResourceServerType.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            The identifier for the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResourceServerType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResourceServerType.Scopes">
            <summary>
            Gets and sets the property Scopes. 
            <para>
            A list of scopes that are defined for the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ResourceServerType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that hosts the resource server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest">
            <summary>
            Container for the parameters to the RespondToAuthChallenge operation.
            Responds to the authentication challenge.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The Amazon Pinpoint analytics metadata that contributes to your metrics for <code>RespondToAuthChallenge</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The challenge name. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html">InitiateAuth</a>.
            </para>
             
            <para>
             <code>ADMIN_NO_SRP_AUTH</code> isn't a valid value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.ChallengeResponses">
            <summary>
            Gets and sets the property ChallengeResponses. 
            <para>
            The challenge responses. These are inputs corresponding to the value of <code>ChallengeName</code>,
            for example:
            </para>
             <note> 
            <para>
             <code>SECRET_HASH</code> (if app client is configured with client secret) applies
            to all of the inputs that follow (including <code>SOFTWARE_TOKEN_MFA</code>).
            </para>
             </note> <ul> <li> 
            <para>
             <code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>, <code>USERNAME</code>.
            </para>
             </li> <li> 
            <para>
             <code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,
            <code>TIMESTAMP</code>, <code>USERNAME</code>.
            </para>
             <note> 
            <para>
             <code>PASSWORD_VERIFIER</code> requires <code>DEVICE_KEY</code> when you sign in
            with a remembered device.
            </para>
             </note> </li> <li> 
            <para>
             <code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>, <code>USERNAME</code>,
            <code>SECRET_HASH</code> (if app client is configured with client secret). To set
            any required attributes that Amazon Cognito returned as <code>requiredAttributes</code>
            in the <code>InitiateAuth</code> response, add a <code>userAttributes.<i>attributename</i>
            </code> parameter. This parameter can also set values for writable attributes that
            aren't required by your user pool.
            </para>
             <note> 
            <para>
            In a <code>NEW_PASSWORD_REQUIRED</code> challenge response, you can't modify a required
            attribute that already has a value. In <code>RespondToAuthChallenge</code>, set a
            value for any keys that Amazon Cognito returned in the <code>requiredAttributes</code>
            parameter, then use the <code>UpdateUserAttributes</code> API operation to modify
            the value of any additional attributes.
            </para>
             </note> </li> <li> 
            <para>
             <code>SOFTWARE_TOKEN_MFA</code>: <code>USERNAME</code> and <code>SOFTWARE_TOKEN_MFA_CODE</code>
            are required attributes.
            </para>
             </li> <li> 
            <para>
             <code>DEVICE_SRP_AUTH</code> requires <code>USERNAME</code>, <code>DEVICE_KEY</code>,
            <code>SRP_A</code> (and <code>SECRET_HASH</code>).
            </para>
             </li> <li> 
            <para>
             <code>DEVICE_PASSWORD_VERIFIER</code> requires everything that <code>PASSWORD_VERIFIER</code>
            requires, plus <code>DEVICE_KEY</code>.
            </para>
             </li> <li> 
            <para>
             <code>MFA_SETUP</code> requires <code>USERNAME</code>, plus you must use the session
            value returned by <code>VerifySoftwareToken</code> in the <code>Session</code> parameter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the RespondToAuthChallenge API action, Amazon Cognito invokes any functions
            that are assigned to the following triggers: <i>post authentication</i>, <i>pre token
            generation</i>, <i>define auth challenge</i>, <i>create auth challenge</i>, and <i>verify
            auth challenge</i>. When Amazon Cognito invokes any of these functions, it passes
            a JSON payload, which the function receives as input. This payload contains a <code>clientMetadata</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your RespondToAuthChallenge request. In your function code in Lambda, you can process
            the <code>clientMetadata</code> value to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            If <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code> API call determines
            that the caller must pass another challenge, they return a session with other challenge
            parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
            API call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.UserContextData">
            <summary>
            Gets and sets the property UserContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse">
            <summary>
            The response to respond to the authentication challenge.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.AuthenticationResult">
            <summary>
            Gets and sets the property AuthenticationResult. 
            <para>
            The result returned by the server in response to the request to respond to the authentication
            challenge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.ChallengeName">
            <summary>
            Gets and sets the property ChallengeName. 
            <para>
            The challenge name. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html">InitiateAuth</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.ChallengeParameters">
            <summary>
            Gets and sets the property ChallengeParameters. 
            <para>
            The challenge parameters. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html">InitiateAuth</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            If the caller must pass another challenge, they return a session with other challenge
            parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
            API call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest">
            <summary>
            Container for the parameters to the RevokeToken operation.
            Revokes all of the access tokens generated by, and at the same time as, the specified
            refresh token. After a token is revoked, you can't use the revoked token to access
            Amazon Cognito user APIs, or to authorize access to your resource server.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client ID for the token that you want to revoke.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest.ClientSecret">
            <summary>
            Gets and sets the property ClientSecret. 
            <para>
            The secret for the client ID. This is required only if the client ID has a secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            The refresh token that you want to revoke.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RevokeTokenResponse">
            <summary>
            This is the response object from the RevokeToken operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RiskConfigurationType">
            <summary>
            The risk configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskConfigurationType.AccountTakeoverRiskConfiguration">
            <summary>
            Gets and sets the property AccountTakeoverRiskConfiguration. 
            <para>
            The account takeover risk configuration object, including the <code>NotifyConfiguration</code>
            object and <code>Actions</code> to take if there is an account takeover.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskConfigurationType.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskConfigurationType.CompromisedCredentialsRiskConfiguration">
            <summary>
            Gets and sets the property CompromisedCredentialsRiskConfiguration. 
            <para>
            The compromised credentials risk configuration object, including the <code>EventFilter</code>
            and the <code>EventAction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskConfigurationType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The last modified date.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskConfigurationType.RiskExceptionConfiguration">
            <summary>
            Gets and sets the property RiskExceptionConfiguration. 
            <para>
            The configuration to override the risk decision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskConfigurationType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.RiskExceptionConfigurationType">
            <summary>
            The type of the configuration to override the risk decision.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskExceptionConfigurationType.BlockedIPRangeList">
            <summary>
            Gets and sets the property BlockedIPRangeList. 
            <para>
            Overrides the risk decision to always block the pre-authentication requests. The IP
            range is in CIDR notation, a compact representation of an IP address and its routing
            prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.RiskExceptionConfigurationType.SkippedIPRangeList">
            <summary>
            Gets and sets the property SkippedIPRangeList. 
            <para>
            Risk detection isn't performed on the IP addresses in this range list. The IP range
            is in CIDR notation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType">
            <summary>
            Contains information about the schema attribute.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.AttributeDataType">
            <summary>
            Gets and sets the property AttributeDataType. 
            <para>
            The attribute data type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.DeveloperOnlyAttribute">
            <summary>
            Gets and sets the property DeveloperOnlyAttribute. <note> 
            <para>
            You should use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes">WriteAttributes</a>
            in the user pool client to control how attributes can be mutated for new use cases
            instead of using <code>DeveloperOnlyAttribute</code>.
            </para>
             </note> 
            <para>
            Specifies whether the attribute type is developer only. This attribute can only be
            modified by an administrator. Users won't be able to modify this attribute using their
            access token. For example, <code>DeveloperOnlyAttribute</code> can be modified using
            AdminUpdateUserAttributes but can't be updated using UpdateUserAttributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.Mutable">
            <summary>
            Gets and sets the property Mutable. 
            <para>
            Specifies whether the value of the attribute can be changed.
            </para>
             
            <para>
            For any user pool attribute that is mapped to an IdP attribute, you must set this
            parameter to <code>true</code>. Amazon Cognito updates mapped attributes when users
            sign in to your application through an IdP. If an attribute is immutable, Amazon Cognito
            throws an error when it attempts to update the attribute. For more information, see
            <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html">Specifying
            Identity Provider Attribute Mappings for Your User Pool</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A schema attribute of the name type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.NumberAttributeConstraints">
            <summary>
            Gets and sets the property NumberAttributeConstraints. 
            <para>
            Specifies the constraints for an attribute of the number type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.Required">
            <summary>
            Gets and sets the property Required. 
            <para>
            Specifies whether a user pool attribute is required. If the attribute is required
            and the user doesn't provide a value, registration or sign-in will fail.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SchemaAttributeType.StringAttributeConstraints">
            <summary>
            Gets and sets the property StringAttributeConstraints. 
            <para>
            Specifies the constraints for an attribute of the string type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            <summary>
            This exception is thrown when the specified scope doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new ScopeDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ScopeDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of ScopeDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ScopeDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ScopeDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ScopeDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest">
            <summary>
            Container for the parameters to the SetRiskConfiguration operation.
            Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code>
            or <code>ClientId</code>, pass null values for all four configuration types.
            
             
            <para>
            To activate Amazon Cognito advanced security features, update the user pool to include
            the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest.AccountTakeoverRiskConfiguration">
            <summary>
            Gets and sets the property AccountTakeoverRiskConfiguration. 
            <para>
            The account takeover risk configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The app client ID. If <code>ClientId</code> is null, then the risk configuration is
            mapped to <code>userPoolId</code>. When the client ID is null, the same risk configuration
            is applied to all the clients in the userPool.
            </para>
             
            <para>
            Otherwise, <code>ClientId</code> is mapped to the client. When the client ID isn't
            null, the user pool configuration is overridden and the risk configuration for the
            client is used instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest.CompromisedCredentialsRiskConfiguration">
            <summary>
            Gets and sets the property CompromisedCredentialsRiskConfiguration. 
            <para>
            The compromised credentials risk configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest.RiskExceptionConfiguration">
            <summary>
            Gets and sets the property RiskExceptionConfiguration. 
            <para>
            The configuration to override the risk decision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationResponse">
            <summary>
            This is the response object from the SetRiskConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationResponse.RiskConfiguration">
            <summary>
            Gets and sets the property RiskConfiguration. 
            <para>
            The risk configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest">
            <summary>
            Container for the parameters to the SetUICustomization operation.
            Sets the user interface (UI) customization information for a user pool's built-in
            app UI.
            
             
            <para>
            You can specify app UI customization settings for a single client (with a specific
            <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to
            <code>ALL</code>). If you specify <code>ALL</code>, the default configuration is used
            for every client that has no previously set UI customization. If you specify UI customization
            settings for a particular client, it will no longer return to the <code>ALL</code>
            configuration.
            </para>
             <note> 
            <para>
            To use this API, your user pool must have a domain associated with it. Otherwise,
            there is no place to host the app's pages, and the service will throw an error.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client ID for the client app.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest.CSS">
            <summary>
            Gets and sets the property CSS. 
            <para>
            The CSS values in the UI customization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest.ImageFile">
            <summary>
            Gets and sets the property ImageFile. 
            <para>
            The uploaded logo image for the UI customization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUICustomizationResponse">
            <summary>
            This is the response object from the SetUICustomization operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUICustomizationResponse.UICustomization">
            <summary>
            Gets and sets the property UICustomization. 
            <para>
            The UI customization information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest">
            <summary>
            Container for the parameters to the SetUserMFAPreference operation.
            Set the user's multi-factor authentication (MFA) method preference, including which
            MFA factors are activated and if any are preferred. Only one factor can be set as
            preferred. The preferred MFA factor will be used to authenticate a user if multiple
            factors are activated. If multiple options are activated and no preference is set,
            a challenge to choose an MFA option will be returned during sign-in. If an MFA type
            is activated for a user, the user will be prompted for MFA during all sign-in attempts
            unless device tracking is turned on and the device has been trusted. If you want MFA
            to be applied selectively based on the assessed risk level of sign-in attempts, deactivate
            MFA for users and turn on Adaptive Authentication for the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose MFA preference you
            want to set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest.SMSMfaSettings">
            <summary>
            Gets and sets the property SMSMfaSettings. 
            <para>
            The SMS text message multi-factor authentication (MFA) settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest.SoftwareTokenMfaSettings">
            <summary>
            Gets and sets the property SoftwareTokenMfaSettings. 
            <para>
            The time-based one-time password (TOTP) software token MFA settings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceResponse">
            <summary>
            This is the response object from the SetUserMFAPreference operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest">
            <summary>
            Container for the parameters to the SetUserPoolMfaConfig operation.
            Sets the user pool multi-factor authentication (MFA) configuration.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            The MFA configuration. If you set the MfaConfiguration value to ‘ON’, only users who
            have set up an MFA factor can sign in. To learn more, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">Adding
            Multi-Factor Authentication (MFA) to a user pool</a>. Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>OFF</code> MFA won't be used for any users.
            </para>
             </li> <li> 
            <para>
             <code>ON</code> MFA is required for all users to sign in.
            </para>
             </li> <li> 
            <para>
             <code>OPTIONAL</code> MFA will be required only for individual users who have an
            MFA factor activated.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest.SmsMfaConfiguration">
            <summary>
            Gets and sets the property SmsMfaConfiguration. 
            <para>
            The SMS text message MFA configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest.SoftwareTokenMfaConfiguration">
            <summary>
            Gets and sets the property SoftwareTokenMfaConfiguration. 
            <para>
            The software token MFA configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigResponse">
            <summary>
            This is the response object from the SetUserPoolMfaConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigResponse.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            The MFA configuration. Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>OFF</code> MFA won't be used for any users.
            </para>
             </li> <li> 
            <para>
             <code>ON</code> MFA is required for all users to sign in.
            </para>
             </li> <li> 
            <para>
             <code>OPTIONAL</code> MFA will be required only for individual users who have an
            MFA factor enabled.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigResponse.SmsMfaConfiguration">
            <summary>
            Gets and sets the property SmsMfaConfiguration. 
            <para>
            The SMS text message MFA configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigResponse.SoftwareTokenMfaConfiguration">
            <summary>
            Gets and sets the property SoftwareTokenMfaConfiguration. 
            <para>
            The software token MFA configuration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest">
            <summary>
            Container for the parameters to the SetUserSettings operation.
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html">SetUserMFAPreference</a>
            instead.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose user settings you
            want to configure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            You can use this parameter only to set an SMS configuration that uses SMS for delivery.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SetUserSettingsResponse">
            <summary>
            The response from the server for a set user settings request.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SignUpRequest">
            <summary>
            Container for the parameters to the SignUp operation.
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.AnalyticsMetadata">
            <summary>
            Gets and sets the property AnalyticsMetadata. 
            <para>
            The Amazon Pinpoint analytics metadata that contributes to your metrics for <code>SignUp</code>
            calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action triggers.
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the SignUp API action, Amazon Cognito invokes any functions that are assigned
            to the following triggers: <i>pre sign-up</i>, <i>custom message</i>, and <i>post
            confirmation</i>. When Amazon Cognito invokes any of these functions, it passes a
            JSON payload, which the function receives as input. This payload contains a <code>clientMetadata</code>
            attribute, which provides the data that you assigned to the ClientMetadata parameter
            in your SignUp request. In your function code in Lambda, you can process the <code>clientMetadata</code>
            value to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password of the user you want to register.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.SecretHash">
            <summary>
            Gets and sets the property SecretHash. 
            <para>
            A keyed-hash message authentication code (HMAC) calculated using the secret key of
            a user pool client and username plus the client ID in the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.UserContextData">
            <summary>
            Gets and sets the property UserContextData. 
            <para>
            Contextual data about your user session, such as the device fingerprint, IP address,
            or location. Amazon Cognito advanced security evaluates the risk of an authentication
            event based on the context that your app generates and passes to Amazon Cognito when
            it makes API requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you want to register.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpRequest.ValidationData">
            <summary>
            Gets and sets the property ValidationData. 
            <para>
            The validation data in the request to register a user.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SignUpRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SignUpResponse">
            <summary>
            The response from the server for a registration request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpResponse.CodeDeliveryDetails">
            <summary>
            Gets and sets the property CodeDeliveryDetails. 
            <para>
            The code delivery details returned by the server response to the user registration
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpResponse.UserConfirmed">
            <summary>
            Gets and sets the property UserConfirmed. 
            <para>
            A response from the server indicating that a user registration has been confirmed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SignUpResponse.UserSub">
            <summary>
            Gets and sets the property UserSub. 
            <para>
            The UUID of the authenticated user. This isn't the same as <code>username</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SmsConfigurationType">
            <summary>
            The SMS configuration type is the settings that your Amazon Cognito user pool must
            use to send an SMS message from your Amazon Web Services account through Amazon Simple
            Notification Service. To send SMS messages with Amazon SNS in the Amazon Web Services
            Region that you want, the Amazon Cognito user pool uses an Identity and Access Management
            (IAM) role in your Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SmsConfigurationType.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            The external ID provides additional security for your IAM role. You can use an <code>ExternalId</code>
            with the IAM role that you use with Amazon SNS to send SMS messages for your user
            pool. If you provide an <code>ExternalId</code>, your Amazon Cognito user pool includes
            it in the request to assume your IAM role. You can configure the role trust policy
            to require that Amazon Cognito, and any principal, provide the <code>ExternalID</code>.
            If you use the Amazon Cognito Management Console to create a role for SMS multi-factor
            authentication (MFA), Amazon Cognito creates a role with the required permissions
            and a trust policy that demonstrates use of the <code>ExternalId</code>.
            </para>
             
            <para>
            For more information about the <code>ExternalId</code> of a role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html">How
            to use an external ID when granting access to your Amazon Web Services resources to
            a third party</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SmsConfigurationType.SnsCallerArn">
            <summary>
            Gets and sets the property SnsCallerArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS caller. This is the ARN of the IAM
            role in your Amazon Web Services account that Amazon Cognito will use to send SMS
            messages. SMS messages are subject to a <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html">spending
            limit</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SmsConfigurationType.SnsRegion">
            <summary>
            Gets and sets the property SnsRegion. 
            <para>
            The Amazon Web Services Region to use with Amazon SNS integration. You can choose
            the same Region as your user pool, or a supported <b>Legacy Amazon SNS alternate Region</b>.
            
            </para>
             
            <para>
             Amazon Cognito resources in the Asia Pacific (Seoul) Amazon Web Services Region must
            use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html">SMS
            message settings for Amazon Cognito user pools</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SmsMfaConfigType">
            <summary>
            The SMS text message multi-factor authentication (MFA) configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SmsMfaConfigType.SmsAuthenticationMessage">
            <summary>
            Gets and sets the property SmsAuthenticationMessage. 
            <para>
            The SMS authentication message that will be sent to users with the code they must
            sign in. The message must contain the ‘{####}’ placeholder, which is replaced with
            the code. If the message isn't included, and default message will be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SmsMfaConfigType.SmsConfiguration">
            <summary>
            Gets and sets the property SmsConfiguration. 
            <para>
            The SMS configuration with the settings that your Amazon Cognito user pool must use
            to send an SMS message from your Amazon Web Services account through Amazon Simple
            Notification Service. To request Amazon SNS in the Amazon Web Services Region that
            you want, the Amazon Cognito user pool uses an Identity and Access Management (IAM)
            role that you provide for your Amazon Web Services account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SMSMfaSettingsType">
            <summary>
            The type used for enabling SMS multi-factor authentication (MFA) at the user level.
            Phone numbers don't need to be verified to be used for SMS MFA. If an MFA type is
            activated for a user, the user will be prompted for MFA during all sign-in attempts,
            unless device tracking is turned on and the device has been trusted. If you would
            like MFA to be applied selectively based on the assessed risk level of sign-in attempts,
            deactivate MFA for users and turn on Adaptive Authentication for the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SMSMfaSettingsType.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether SMS text message MFA is activated. If an MFA type is activated for
            a user, the user will be prompted for MFA during all sign-in attempts, unless device
            tracking is turned on and the device has been trusted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SMSMfaSettingsType.PreferredMfa">
            <summary>
            Gets and sets the property PreferredMfa. 
            <para>
            Specifies whether SMS is the preferred MFA method.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaConfigType">
            <summary>
            The type used for enabling software token MFA at the user pool level.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaConfigType.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether software token MFA is activated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            <summary>
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SoftwareTokenMFANotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SoftwareTokenMFANotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SoftwareTokenMFANotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SoftwareTokenMFANotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SoftwareTokenMFANotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SoftwareTokenMFANotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaSettingsType">
            <summary>
            The type used for enabling software token MFA at the user level. If an MFA type is
            activated for a user, the user will be prompted for MFA during all sign-in attempts,
            unless device tracking is turned on and the device has been trusted. If you want MFA
            to be applied selectively based on the assessed risk level of sign-in attempts, deactivate
            MFA for users and turn on Adaptive Authentication for the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaSettingsType.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether software token MFA is activated. If an MFA type is activated for
            a user, the user will be prompted for MFA during all sign-in attempts, unless device
            tracking is turned on and the device has been trusted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMfaSettingsType.PreferredMfa">
            <summary>
            Gets and sets the property PreferredMfa. 
            <para>
            Specifies whether software token MFA is the preferred MFA method.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest">
            <summary>
            Container for the parameters to the StartUserImportJob operation.
            Starts the user import.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StartUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to start the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StartUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest">
            <summary>
            Container for the parameters to the StopUserImportJob operation.
            Stops the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StopUserImportJobResponse">
            <summary>
            Represents the response from the server to the request to stop the user import job.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StopUserImportJobResponse.UserImportJob">
            <summary>
            Gets and sets the property UserImportJob. 
            <para>
            The job object that represents the user import job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType">
            <summary>
            The constraints associated with a string attribute.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType.MaxLength">
            <summary>
            Gets and sets the property MaxLength. 
            <para>
            The maximum length.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.StringAttributeConstraintsType.MinLength">
            <summary>
            Gets and sets the property MinLength. 
            <para>
            The minimum length.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            
             
            <para>
            Each tag consists of a key and value, both of which you define. A key is a general
            category for more specific values. For example, if you have two versions of a user
            pool, one for testing and another for production, you might assign an <code>Environment</code>
            tag key to both user pools. The value of this key might be <code>Test</code> for one
            user pool, and <code>Production</code> for the other.
            </para>
             
            <para>
            Tags are useful for cost tracking and access control. You can activate your tags so
            that they appear on the Billing and Cost Management console, where you can track the
            costs associated with your user pools. In an Identity and Access Management policy,
            you can constrain permissions for user pools based on specific tags or tag values.
            </para>
             
            <para>
            You can use this action up to 5 times per second, per account. A user pool can have
            as many as 50 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the user pool to assign the tags to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to assign to the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.TokenValidityUnitsType">
            <summary>
            The data type TokenValidityUnits specifies the time units you use when you set the
            duration of ID, access, and refresh tokens.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.TokenValidityUnitsType.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
             A time unit of <code>seconds</code>, <code>minutes</code>, <code>hours</code>, or
            <code>days</code> for the value that you set in the <code>AccessTokenValidity</code>
            parameter. The default <code>AccessTokenValidity</code> time unit is hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.TokenValidityUnitsType.IdToken">
            <summary>
            Gets and sets the property IdToken. 
            <para>
            A time unit of <code>seconds</code>, <code>minutes</code>, <code>hours</code>, or
            <code>days</code> for the value that you set in the <code>IdTokenValidity</code> parameter.
            The default <code>IdTokenValidity</code> time unit is hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.TokenValidityUnitsType.RefreshToken">
            <summary>
            Gets and sets the property RefreshToken. 
            <para>
            A time unit of <code>seconds</code>, <code>minutes</code>, <code>hours</code>, or
            <code>days</code> for the value that you set in the <code>RefreshTokenValidity</code>
            parameter. The default <code>RefreshTokenValidity</code> time unit is days.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            <summary>
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyFailedAttemptsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyFailedAttemptsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyFailedAttemptsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            <summary>
            This exception is thrown when the user has made too many requests for a given operation.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyRequestsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UICustomizationType">
            <summary>
            A container for the UI customization information for a user pool's built-in app UI.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UICustomizationType.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The client ID for the client app.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UICustomizationType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The creation date for the UI customization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UICustomizationType.CSS">
            <summary>
            Gets and sets the property CSS. 
            <para>
            The CSS values in the UI customization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UICustomizationType.CSSVersion">
            <summary>
            Gets and sets the property CSSVersion. 
            <para>
            The CSS version number.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UICustomizationType.ImageUrl">
            <summary>
            Gets and sets the property ImageUrl. 
            <para>
            The logo image for the UI customization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UICustomizationType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The last-modified date for the UI customization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UICustomizationType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnauthorizedException">
            <summary>
            Exception that is thrown when the request isn't authorized. This can happen due to
            an invalid access token in the request.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnauthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new UnauthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnauthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnauthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnauthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnauthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnauthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnauthorizedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnauthorizedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            <summary>
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String)">
            <summary>
            Constructs a new UnexpectedLambdaException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnexpectedLambdaException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnexpectedLambdaException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            <summary>
            This exception is thrown when the specified identifier isn't supported.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedIdentityProviderException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedIdentityProviderException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedIdentityProviderException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedIdentityProviderException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException">
            <summary>
            Exception that is thrown when you attempt to perform an operation that isn't enabled
            for the user pool client.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedOperationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedOperationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException">
            <summary>
            Exception that is thrown when an unsupported token is passed to an operation.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedTokenTypeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedTokenTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedTokenTypeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedTokenTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedTokenTypeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedTokenTypeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            <summary>
            The request failed because the user is in an unsupported state.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedUserStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedUserStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnsupportedUserStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes the specified tags from an Amazon Cognito user pool. You can use this action
            up to 5 times per second, per account.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the user pool that the tags are assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The keys of the tags to remove from the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest">
            <summary>
            Container for the parameters to the UpdateAuthEventFeedback operation.
            Provides the feedback for an authentication event, whether it was from a valid user
            or not. This feedback is used for improving the risk evaluation decision for the user
            pool as part of Amazon Cognito advanced security.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The event ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest.FeedbackToken">
            <summary>
            Gets and sets the property FeedbackToken. 
            <para>
            The feedback token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest.FeedbackValue">
            <summary>
            Gets and sets the property FeedbackValue. 
            <para>
            The authentication event feedback value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user pool username.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackResponse">
            <summary>
            This is the response object from the UpdateAuthEventFeedback operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest">
            <summary>
            Container for the parameters to the UpdateDeviceStatus operation.
            Updates the device status.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose device status you
            want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest.DeviceKey">
            <summary>
            Gets and sets the property DeviceKey. 
            <para>
            The device key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest.DeviceRememberedStatus">
            <summary>
            Gets and sets the property DeviceRememberedStatus. 
            <para>
            The status of whether a device is remembered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusResponse">
            <summary>
            The response to the request to update the device status.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest">
            <summary>
            Container for the parameters to the UpdateGroup operation.
            Updates the specified group with the specified attributes.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string containing the new description of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.Precedence">
            <summary>
            Gets and sets the property Precedence. 
            <para>
            The new precedence value for the group. For more information about this parameter,
            see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateGroup.html">CreateGroup</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The new role Amazon Resource Name (ARN) for the group. This is used for setting the
            <code>cognito:roles</code> and <code>cognito:preferred_role</code> claims in the token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateGroupResponse">
            <summary>
            This is the response object from the UpdateGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateGroupResponse.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The group object for the group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest">
            <summary>
            Container for the parameters to the UpdateIdentityProvider operation.
            Updates IdP information for a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest.AttributeMapping">
            <summary>
            Gets and sets the property AttributeMapping. 
            <para>
            The IdP attribute mapping to be changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest.IdpIdentifiers">
            <summary>
            Gets and sets the property IdpIdentifiers. 
            <para>
            A list of IdP identifiers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest.ProviderDetails">
            <summary>
            Gets and sets the property ProviderDetails. 
            <para>
            The IdP details to be updated, such as <code>MetadataURL</code> and <code>MetadataFile</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest.ProviderName">
            <summary>
            Gets and sets the property ProviderName. 
            <para>
            The IdP name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderResponse">
            <summary>
            This is the response object from the UpdateIdentityProvider operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderResponse.IdentityProvider">
            <summary>
            Gets and sets the property IdentityProvider. 
            <para>
            The identity provider details.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest">
            <summary>
            Container for the parameters to the UpdateResourceServer operation.
            Updates the name and scopes of resource server. All other fields are read-only.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it is set to the default value.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest.Identifier">
            <summary>
            Gets and sets the property Identifier. 
            <para>
            The identifier for the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest.Scopes">
            <summary>
            Gets and sets the property Scopes. 
            <para>
            The scope values to be set for the resource server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateResourceServerResponse">
            <summary>
            This is the response object from the UpdateResourceServer operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateResourceServerResponse.ResourceServer">
            <summary>
            Gets and sets the property ResourceServer. 
            <para>
            The resource server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest">
            <summary>
            Container for the parameters to the UpdateUserAttributes operation.
            Allows a user to update a specific attribute (one at a time).
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose user attributes
            you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest.ClientMetadata">
            <summary>
            Gets and sets the property ClientMetadata. 
            <para>
            A map of custom key-value pairs that you can provide as input for any custom workflows
            that this action initiates. 
            </para>
             
            <para>
            You create custom workflows by assigning Lambda functions to user pool triggers. When
            you use the UpdateUserAttributes API action, Amazon Cognito invokes the function that
            is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes this
            function, it passes a JSON payload, which the function receives as input. This payload
            contains a <code>clientMetadata</code> attribute, which provides the data that you
            assigned to the ClientMetadata parameter in your UpdateUserAttributes request. In
            your function code in Lambda, you can process the <code>clientMetadata</code> value
            to enhance your workflow for your specific needs.
            </para>
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">
            Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito
            Developer Guide</i>.
            </para>
             <note> 
            <para>
            When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the
            following:
            </para>
             <ul> <li> 
            <para>
            Store the ClientMetadata value. This data is available only to Lambda triggers that
            are assigned to a user pool to support custom workflows. If your user pool configuration
            doesn't include triggers, the ClientMetadata parameter serves no purpose.
            </para>
             </li> <li> 
            <para>
            Validate the ClientMetadata value.
            </para>
             </li> <li> 
            <para>
            Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.
            </para>
             </li> </ul> </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest.UserAttributes">
            <summary>
            Gets and sets the property UserAttributes. 
            <para>
            An array of name-value pairs representing user attributes.
            </para>
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            If you have set an attribute to require verification before Amazon Cognito updates
            its value, this request doesn’t immediately update the value of that attribute. After
            your user receives and responds to a verification message to verify the new value,
            Amazon Cognito updates the attribute value. Your user can sign in and receive messages
            with the original attribute value until they verify the new value.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesResponse">
            <summary>
            Represents the response from the server for the request to update user attributes.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesResponse.CodeDeliveryDetailsList">
            <summary>
            Gets and sets the property CodeDeliveryDetailsList. 
            <para>
            The code delivery details list from the server for the request to update user attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest">
            <summary>
            Container for the parameters to the UpdateUserPoolClient operation.
            Updates the specified user pool app client with the specified attributes. You can
            get a list of the current user pool app client settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html">DescribeUserPoolClient</a>.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para>
             </important> 
            <para>
            You can also use this operation to enable token revocation for user pool clients.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.AccessTokenValidity">
            <summary>
            Gets and sets the property AccessTokenValidity. 
            <para>
            The access token time limit. After this limit expires, your user can't use their access
            token. To specify the time unit for <code>AccessTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>AccessTokenValidity</code> to <code>10</code> and
            <code>TokenValidityUnits</code> to <code>hours</code>, your user can authorize access
            with their access token for 10 hours.
            </para>
             
            <para>
            The default time unit for <code>AccessTokenValidity</code> in an API request is hours.
            <i>Valid range</i> is displayed below in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your access
            tokens are valid for one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.AllowedOAuthFlows">
            <summary>
            Gets and sets the property AllowedOAuthFlows. 
            <para>
            The allowed OAuth flows.
            </para>
             <dl> <dt>code</dt> <dd> 
            <para>
            Use a code grant flow, which provides an authorization code as the response. This
            code can be exchanged for access tokens with the <code>/oauth2/token</code> endpoint.
            </para>
             </dd> <dt>implicit</dt> <dd> 
            <para>
            Issue the access token (and, optionally, ID token, based on scopes) directly to your
            user.
            </para>
             </dd> <dt>client_credentials</dt> <dd> 
            <para>
            Issue the access token from the <code>/oauth2/token</code> endpoint directly to a
            non-person user using a combination of the client ID and client secret.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.AllowedOAuthFlowsUserPoolClient">
            <summary>
            Gets and sets the property AllowedOAuthFlowsUserPoolClient. 
            <para>
            Set to true if the client is allowed to follow the OAuth protocol when interacting
            with Amazon Cognito user pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.AllowedOAuthScopes">
            <summary>
            Gets and sets the property AllowedOAuthScopes. 
            <para>
            The allowed OAuth scopes. Possible values provided by OAuth are <code>phone</code>,
            <code>email</code>, <code>openid</code>, and <code>profile</code>. Possible values
            provided by Amazon Web Services are <code>aws.cognito.signin.user.admin</code>. Custom
            scopes created in Resource Servers are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.AnalyticsConfiguration">
            <summary>
            Gets and sets the property AnalyticsConfiguration. 
            <para>
            The Amazon Pinpoint analytics configuration necessary to collect metrics for this
            user pool.
            </para>
             <note> 
            <para>
            In Amazon Web Services Regions where Amazon Pinpoint isn't available, user pools only
            support sending events to Amazon Pinpoint projects in us-east-1. In Regions where
            Amazon Pinpoint is available, user pools support sending events to Amazon Pinpoint
            projects within that same Region.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.AuthSessionValidity">
            <summary>
            Gets and sets the property AuthSessionValidity. 
            <para>
            Amazon Cognito creates a session token for each API request in an authentication flow.
            <code>AuthSessionValidity</code> is the duration, in minutes, of that session token.
            Your user pool native user must respond to each authentication challenge before the
            session expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.CallbackURLs">
            <summary>
            Gets and sets the property CallbackURLs. 
            <para>
            A list of allowed redirect (callback) URLs for the IdPs.
            </para>
             
            <para>
            A redirect URI must:
            </para>
             <ul> <li> 
            <para>
            Be an absolute URI.
            </para>
             </li> <li> 
            <para>
            Be registered with the authorization server.
            </para>
             </li> <li> 
            <para>
            Not include a fragment component.
            </para>
             </li> </ul> 
            <para>
            See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.
            </para>
             
            <para>
            Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.
            </para>
             
            <para>
            App callback URLs such as <code>myapp://example</code> are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name from the update user pool client request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.DefaultRedirectURI">
            <summary>
            Gets and sets the property DefaultRedirectURI. 
            <para>
            The default redirect URI. Must be in the <code>CallbackURLs</code> list.
            </para>
             
            <para>
            A redirect URI must:
            </para>
             <ul> <li> 
            <para>
            Be an absolute URI.
            </para>
             </li> <li> 
            <para>
            Be registered with the authorization server.
            </para>
             </li> <li> 
            <para>
            Not include a fragment component.
            </para>
             </li> </ul> 
            <para>
            See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.
            </para>
             
            <para>
            Amazon Cognito requires HTTPS over HTTP except for <code>http://localhost</code> for
            testing purposes only.
            </para>
             
            <para>
            App callback URLs such as <code>myapp://example</code> are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.EnablePropagateAdditionalUserContextData">
            <summary>
            Gets and sets the property EnablePropagateAdditionalUserContextData. 
            <para>
            Activates the propagation of additional user context data. For more information about
            propagation of user context data, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html">
            Adding advanced security to a user pool</a>. If you don’t include this parameter,
            you can't send device fingerprint information, including source IP address, to Amazon
            Cognito advanced security. You can only activate <code>EnablePropagateAdditionalUserContextData</code>
            in an app client that has a client secret.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.EnableTokenRevocation">
            <summary>
            Gets and sets the property EnableTokenRevocation. 
            <para>
            Activates or deactivates token revocation. For more information about revoking tokens,
            see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ExplicitAuthFlows">
            <summary>
            Gets and sets the property ExplicitAuthFlows. 
            <para>
            The authentication flows that you want your user pool client to support. For each
            app client in your user pool, you can sign in your users with any combination of one
            or more flows, including with a user name and Secure Remote Password (SRP), a user
            name and password, or a custom authentication process that you define with Lambda
            functions.
            </para>
             <note> 
            <para>
            If you don't specify a value for <code>ExplicitAuthFlows</code>, your user client
            supports <code>ALLOW_REFRESH_TOKEN_AUTH</code>, <code>ALLOW_USER_SRP_AUTH</code>,
            and <code>ALLOW_CUSTOM_AUTH</code>.
            </para>
             </note> 
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable admin based user password authentication
            flow <code>ADMIN_USER_PASSWORD_AUTH</code>. This setting replaces the <code>ADMIN_NO_SRP_AUTH</code>
            setting. With this authentication flow, your app passes a user name and password to
            Amazon Cognito in the request, instead of using the Secure Remote Password (SRP) protocol
            to securely transmit the password.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based authentication.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_USER_PASSWORD_AUTH</code>: Enable user password-based authentication.
            In this flow, Amazon Cognito receives the password in the request instead of using
            the SRP protocol to verify passwords.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_USER_SRP_AUTH</code>: Enable SRP-based authentication.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_REFRESH_TOKEN_AUTH</code>: Enable authflow to refresh tokens.
            </para>
             </li> </ul> 
            <para>
            In some environments, you will see the values <code>ADMIN_NO_SRP_AUTH</code>, <code>CUSTOM_AUTH_FLOW_ONLY</code>,
            or <code>USER_PASSWORD_AUTH</code>. You can't assign these legacy <code>ExplicitAuthFlows</code>
            values to user pool clients at the same time as values that begin with <code>ALLOW_</code>,
            like <code>ALLOW_USER_SRP_AUTH</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.IdTokenValidity">
            <summary>
            Gets and sets the property IdTokenValidity. 
            <para>
            The ID token time limit. After this limit expires, your user can't use their ID token.
            To specify the time unit for <code>IdTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>IdTokenValidity</code> as <code>10</code> and <code>TokenValidityUnits</code>
            as <code>hours</code>, your user can authenticate their session with their ID token
            for 10 hours.
            </para>
             
            <para>
            The default time unit for <code>AccessTokenValidity</code> in an API request is hours.
            <i>Valid range</i> is displayed below in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your ID tokens
            are valid for one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.LogoutURLs">
            <summary>
            Gets and sets the property LogoutURLs. 
            <para>
            A list of allowed logout URLs for the IdPs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.PreventUserExistenceErrors">
            <summary>
            Gets and sets the property PreventUserExistenceErrors. 
            <para>
            Errors and responses that you want Amazon Cognito APIs to return during authentication,
            account confirmation, and password recovery when the user doesn't exist in the user
            pool. When set to <code>ENABLED</code> and the user doesn't exist, authentication
            returns an error indicating either the username or password was incorrect. Account
            confirmation and password recovery return a response indicating a code was sent to
            a simulated destination. When set to <code>LEGACY</code>, those APIs return a <code>UserNotFoundException</code>
            exception if the user doesn't exist in the user pool.
            </para>
             
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>ENABLED</code> - This prevents user existence-related errors.
            </para>
             </li> <li> 
            <para>
             <code>LEGACY</code> - This represents the early behavior of Amazon Cognito where
            user existence related errors aren't prevented.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.ReadAttributes">
            <summary>
            Gets and sets the property ReadAttributes. 
            <para>
            The read-only attributes of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.RefreshTokenValidity">
            <summary>
            Gets and sets the property RefreshTokenValidity. 
            <para>
            The refresh token time limit. After this limit expires, your user can't use their
            refresh token. To specify the time unit for <code>RefreshTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>RefreshTokenValidity</code> as <code>10</code> and
            <code>TokenValidityUnits</code> as <code>days</code>, your user can refresh their
            session and retrieve new access and ID tokens for 10 days.
            </para>
             
            <para>
            The default time unit for <code>RefreshTokenValidity</code> in an API request is days.
            You can't set <code>RefreshTokenValidity</code> to 0. If you do, Amazon Cognito overrides
            the value with the default value of 30 days. <i>Valid range</i> is displayed below
            in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your refresh
            tokens are valid for 30 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.SupportedIdentityProviders">
            <summary>
            Gets and sets the property SupportedIdentityProviders. 
            <para>
            A list of provider names for the IdPs that this client supports. The following are
            supported: <code>COGNITO</code>, <code>Facebook</code>, <code>Google</code>, <code>SignInWithApple</code>,
            <code>LoginWithAmazon</code>, and the names of your own SAML and OIDC providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.TokenValidityUnits">
            <summary>
            Gets and sets the property TokenValidityUnits. 
            <para>
            The units in which the validity times are represented. The default unit for RefreshToken
            is days, and the default for ID and access tokens is hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to update the user pool client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest.WriteAttributes">
            <summary>
            Gets and sets the property WriteAttributes. 
            <para>
            The writeable attributes of the user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientResponse">
            <summary>
            Represents the response from the server to the request to update the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientResponse.UserPoolClient">
            <summary>
            Gets and sets the property UserPoolClient. 
            <para>
            The user pool client value from the response from the server when you request to update
            the user pool client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest">
            <summary>
            Container for the parameters to the UpdateUserPoolDomain operation.
            Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your
            user pool.
            
             
            <para>
            You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate
            to Amazon Cognito. You can't use it to change the domain for a user pool.
            </para>
             
            <para>
            A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up
            and sign-in pages for your application. When you set up a custom domain, you provide
            a certificate that you manage with Certificate Manager (ACM). When necessary, you
            can use this operation to change the certificate that you applied to your custom domain.
            </para>
             
            <para>
            Usually, this is unnecessary following routine certificate renewal with ACM. When
            you renew your existing certificate in ACM, the ARN for your certificate remains the
            same, and your custom domain uses the new certificate automatically.
            </para>
             
            <para>
            However, if you replace your existing certificate with a new one, ACM gives the new
            certificate a new ARN. To apply the new certificate to your custom domain, you must
            provide this ARN to Amazon Cognito.
            </para>
             
            <para>
            When you add your new certificate in ACM, you must choose US East (N. Virginia) as
            the Amazon Web Services Region.
            </para>
             
            <para>
            After you submit your request, Amazon Cognito requires up to 1 hour to distribute
            your new certificate to your custom domain.
            </para>
             
            <para>
            For more information about adding a custom domain to your user pool, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html">Using
            Your Own Domain for the Hosted UI</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest.CustomDomainConfig">
            <summary>
            Gets and sets the property CustomDomainConfig. 
            <para>
            The configuration for a custom domain that hosts the sign-up and sign-in pages for
            your application. Use this object to specify an SSL certificate that is managed by
            ACM.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain name for the custom domain that hosts the sign-up and sign-in pages for
            your application. One example might be <code>auth.example.com</code>. 
            </para>
             
            <para>
            This string can include only lowercase letters, numbers, and hyphens. Don't use a
            hyphen for the first or last character. Use periods to separate subdomain names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The ID of the user pool that is associated with the custom domain whose certificate
            you're updating.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainResponse">
            <summary>
            The UpdateUserPoolDomain response output.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainResponse.CloudFrontDomain">
            <summary>
            Gets and sets the property CloudFrontDomain. 
            <para>
            The Amazon CloudFront endpoint that Amazon Cognito set up when you added the custom
            domain to your user pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest">
            <summary>
            Container for the parameters to the UpdateUserPool operation.
            Updates the specified user pool with the specified attributes. You can get a list
            of the current user pool settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html">DescribeUserPool</a>.
            If you don't provide a value for an attribute, it will be set to the default value.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.AccountRecoverySetting">
            <summary>
            Gets and sets the property AccountRecoverySetting. 
            <para>
            The available verified method a user can use to recover their password when they call
            <code>ForgotPassword</code>. You can use this setting to define a preferred method
            when a user has more than one method available. With this setting, SMS doesn't qualify
            for a valid password recovery mechanism if the user also has SMS multi-factor authentication
            (MFA) activated. In the absence of this setting, Amazon Cognito uses the legacy behavior
            to determine the recovery method where SMS is preferred through email.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.AdminCreateUserConfig">
            <summary>
            Gets and sets the property AdminCreateUserConfig. 
            <para>
            The configuration for <code>AdminCreateUser</code> requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.AutoVerifiedAttributes">
            <summary>
            Gets and sets the property AutoVerifiedAttributes. 
            <para>
            The attributes that are automatically verified when Amazon Cognito requests to update
            user pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            When active, <code>DeletionProtection</code> prevents accidental deletion of your
            user pool. Before you can delete a user pool that you have protected against deletion,
            you must deactivate this feature.
            </para>
             
            <para>
            When you try to delete a protected user pool in a <code>DeleteUserPool</code> API
            request, Amazon Cognito returns an <code>InvalidParameterException</code> error. To
            delete a protected user pool, send a new <code>DeleteUserPool</code> request after
            you deactivate deletion protection in an <code>UpdateUserPool</code> API request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.DeviceConfiguration">
            <summary>
            Gets and sets the property DeviceConfiguration. 
            <para>
            The device-remembering configuration for a user pool. A null value indicates that
            you have deactivated device remembering in your user pool.
            </para>
             <note> 
            <para>
            When you provide a value for any <code>DeviceConfiguration</code> field, you activate
            the Amazon Cognito device-remembering feature.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.EmailConfiguration">
            <summary>
            Gets and sets the property EmailConfiguration. 
            <para>
            The email configuration of your user pool. The email configuration type sets your
            preferred sending method, Amazon Web Services Region, and sender for email invitation
            and verification messages from your user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.EmailVerificationMessage">
            <summary>
            Gets and sets the property EmailVerificationMessage. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.EmailVerificationSubject">
            <summary>
            Gets and sets the property EmailVerificationSubject. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            The Lambda configuration information from the request to update the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            Possible values include:
            </para>
             <ul> <li> 
            <para>
             <code>OFF</code> - MFA tokens aren't required and can't be specified during user
            registration.
            </para>
             </li> <li> 
            <para>
             <code>ON</code> - MFA tokens are required for all user registrations. You can only
            specify ON when you're initially creating a user pool. You can use the <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserPoolMfaConfig.html">SetUserPoolMfaConfig</a>
            API operation to turn MFA "ON" for existing user pools. 
            </para>
             </li> <li> 
            <para>
             <code>OPTIONAL</code> - Users have the option when registering to create an MFA token.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            A container with the policies you want to update in a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.SmsAuthenticationMessage">
            <summary>
            Gets and sets the property SmsAuthenticationMessage. 
            <para>
            The contents of the SMS authentication message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.SmsConfiguration">
            <summary>
            Gets and sets the property SmsConfiguration. 
            <para>
            The SMS configuration with the settings that your Amazon Cognito user pool must use
            to send an SMS message from your Amazon Web Services account through Amazon Simple
            Notification Service. To send SMS messages with Amazon SNS in the Amazon Web Services
            Region that you want, the Amazon Cognito user pool uses an Identity and Access Management
            (IAM) role in your Amazon Web Services account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.SmsVerificationMessage">
            <summary>
            Gets and sets the property SmsVerificationMessage. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.UserAttributeUpdateSettings">
            <summary>
            Gets and sets the property UserAttributeUpdateSettings. 
            <para>
            The settings for updates to user attributes. These settings include the property <code>AttributesRequireVerificationBeforeUpdate</code>,
            a user-pool setting that tells Amazon Cognito how to handle changes to the value of
            your users' email address and phone number attributes. For more information, see <a
            href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates">
            Verifying updates to email addresses and phone numbers</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.UserPoolAddOns">
            <summary>
            Gets and sets the property UserPoolAddOns. 
            <para>
            Enables advanced security risk detection. Set the key <code>AdvancedSecurityMode</code>
            to the value "AUDIT".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.UserPoolTags">
            <summary>
            Gets and sets the property UserPoolTags. 
            <para>
            The tag keys and values to assign to the user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest.VerificationMessageTemplate">
            <summary>
            Gets and sets the property VerificationMessageTemplate. 
            <para>
            The template for verification messages.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UpdateUserPoolResponse">
            <summary>
            Represents the response from the server when you make a request to update the user
            pool.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserAttributeUpdateSettingsType">
            <summary>
            The settings for updates to user attributes. These settings include the property <code>AttributesRequireVerificationBeforeUpdate</code>,
            a user-pool setting that tells Amazon Cognito how to handle changes to the value of
            your users' email address and phone number attributes. For more information, see <a
            href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates">
            Verifying updates to email addresses and phone numbers</a>.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserAttributeUpdateSettingsType.AttributesRequireVerificationBeforeUpdate">
            <summary>
            Gets and sets the property AttributesRequireVerificationBeforeUpdate. 
            <para>
            Requires that your user verifies their email address, phone number, or both before
            Amazon Cognito updates the value of that attribute. When you update a user attribute
            that has this option activated, Amazon Cognito sends a verification message to the
            new phone number or email address. Amazon Cognito doesn’t change the value of the
            attribute until your user responds to the verification message and confirms the new
            value.
            </para>
             
            <para>
            You can verify an updated email address or phone number with a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html">VerifyUserAttribute</a>
            API request. You can also call the <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateUserAttributes.html">UpdateUserAttributes</a>
            or <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html">AdminUpdateUserAttributes</a>
            API and set <code>email_verified</code> or <code>phone_number_verified</code> to true.
            </para>
             
            <para>
            When <code>AttributesRequireVerificationBeforeUpdate</code> is false, your user pool
            doesn't require that your users verify attribute changes before Amazon Cognito updates
            them. In a user pool where <code>AttributesRequireVerificationBeforeUpdate</code>
            is false, API operations that change attribute values can immediately update a user’s
            <code>email</code> or <code>phone_number</code> attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserContextDataType">
            <summary>
            Contextual data, such as the user's device fingerprint, IP address, or location, used
            for evaluating the risk of an unexpected event by Amazon Cognito advanced security.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserContextDataType.EncodedData">
            <summary>
            Gets and sets the property EncodedData. 
            <para>
            Encoded device-fingerprint details that your app collected with the Amazon Cognito
            context data collection library. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-adaptive-authentication.html#user-pool-settings-adaptive-authentication-device-fingerprint">Adding
            user device and session data to API requests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserContextDataType.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The source IP address of your user's device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            <summary>
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new UserImportInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserImportInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserImportInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserImportJobType">
            <summary>
            The user import job type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CloudWatchLogsRoleArn">
            <summary>
            Gets and sets the property CloudWatchLogsRoleArn. 
            <para>
            The role Amazon Resource Name (ARN) for the Amazon CloudWatch Logging role for the
            user import job. For more information, see "Creating the CloudWatch Logs IAM Role"
            in the Amazon Cognito Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CompletionDate">
            <summary>
            Gets and sets the property CompletionDate. 
            <para>
            The date when the user import job was completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CompletionMessage">
            <summary>
            Gets and sets the property CompletionMessage. 
            <para>
            The message returned when the user import job is completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the user import job was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.FailedUsers">
            <summary>
            Gets and sets the property FailedUsers. 
            <para>
            The number of users that couldn't be imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.ImportedUsers">
            <summary>
            Gets and sets the property ImportedUsers. 
            <para>
            The number of users that were successfully imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The job name for the user import job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl. 
            <para>
            The pre-signed URL to be used to upload the <code>.csv</code> file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.SkippedUsers">
            <summary>
            Gets and sets the property SkippedUsers. 
            <para>
            The number of users that were skipped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.StartDate">
            <summary>
            Gets and sets the property StartDate. 
            <para>
            The date when the user import job was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the user import job. One of the following:
            </para>
             <ul> <li> 
            <para>
             <code>Created</code> - The job was created but not started.
            </para>
             </li> <li> 
            <para>
             <code>Pending</code> - A transition state. You have started the job, but it has not
            begun importing users yet.
            </para>
             </li> <li> 
            <para>
             <code>InProgress</code> - The job has started, and users are being imported.
            </para>
             </li> <li> 
            <para>
             <code>Stopping</code> - You have stopped the job, but the job has not stopped importing
            users yet.
            </para>
             </li> <li> 
            <para>
             <code>Stopped</code> - You have stopped the job, and the job has stopped importing
            users.
            </para>
             </li> <li> 
            <para>
             <code>Succeeded</code> - The job has completed successfully.
            </para>
             </li> <li> 
            <para>
             <code>Failed</code> - The job has stopped due to an error.
            </para>
             </li> <li> 
            <para>
             <code>Expired</code> - You created a job, but did not start the job within 24-48
            hours. All data associated with the job was deleted, and the job can't be started.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserImportJobType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool that the users are being imported into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            <summary>
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String)">
            <summary>
            Constructs a new UserLambdaValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserLambdaValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserLambdaValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UsernameConfigurationType">
            <summary>
            The username configuration type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UsernameConfigurationType.CaseSensitive">
            <summary>
            Gets and sets the property CaseSensitive. 
            <para>
            Specifies whether user name case sensitivity will be applied for all users in the
            user pool through Amazon Cognito APIs.
            </para>
             
            <para>
            Valid values include:
            </para>
             <dl> <dt>True</dt> <dd> 
            <para>
            Enables case sensitivity for all username input. When this option is set to <code>True</code>,
            users must sign in using the exact capitalization of their given username, such as
            “UserName”. This is the default value.
            </para>
             </dd> <dt>False</dt> <dd> 
            <para>
            Enables case insensitivity for all username input. For example, when this option is
            set to <code>False</code>, users can sign in using either "username" or "Username".
            This option also enables both <code>preferred_username</code> and <code>email</code>
            alias to be case insensitive, in addition to the <code>username</code> attribute.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            <summary>
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String)">
            <summary>
            Constructs a new UsernameExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UsernameExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UsernameExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UsernameExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            <summary>
            This exception is thrown when a user isn't confirmed successfully.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String)">
            <summary>
            Constructs a new UserNotConfirmedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotConfirmedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserNotConfirmedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            <summary>
            This exception is thrown when a user isn't found.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new UserNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            <summary>
            This exception is thrown when user pool add-ons aren't enabled.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException.#ctor(System.String)">
            <summary>
            Constructs a new UserPoolAddOnNotEnabledException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserPoolAddOnNotEnabledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserPoolAddOnNotEnabledException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserPoolAddOnNotEnabledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserPoolAddOnNotEnabledException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserPoolAddOnNotEnabledException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnsType">
            <summary>
            The user pool add-ons type.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnsType.AdvancedSecurityMode">
            <summary>
            Gets and sets the property AdvancedSecurityMode. 
            <para>
            The advanced security mode.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription">
            <summary>
            The description of the user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name from the user pool client description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientDescription.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool where you want to describe the user pool client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolClientType">
            <summary>
            Contains information about a user pool client.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.AccessTokenValidity">
            <summary>
            Gets and sets the property AccessTokenValidity. 
            <para>
            The access token time limit. After this limit expires, your user can't use their access
            token. To specify the time unit for <code>AccessTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>AccessTokenValidity</code> to <code>10</code> and
            <code>TokenValidityUnits</code> to <code>hours</code>, your user can authorize access
            with their access token for 10 hours.
            </para>
             
            <para>
            The default time unit for <code>AccessTokenValidity</code> in an API request is hours.
            <i>Valid range</i> is displayed below in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your access
            tokens are valid for one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.AllowedOAuthFlows">
            <summary>
            Gets and sets the property AllowedOAuthFlows. 
            <para>
            The allowed OAuth flows.
            </para>
             <dl> <dt>code</dt> <dd> 
            <para>
            Use a code grant flow, which provides an authorization code as the response. This
            code can be exchanged for access tokens with the <code>/oauth2/token</code> endpoint.
            </para>
             </dd> <dt>implicit</dt> <dd> 
            <para>
            Issue the access token (and, optionally, ID token, based on scopes) directly to your
            user.
            </para>
             </dd> <dt>client_credentials</dt> <dd> 
            <para>
            Issue the access token from the <code>/oauth2/token</code> endpoint directly to a
            non-person user using a combination of the client ID and client secret.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.AllowedOAuthFlowsUserPoolClient">
            <summary>
            Gets and sets the property AllowedOAuthFlowsUserPoolClient. 
            <para>
            Set to true if the client is allowed to follow the OAuth protocol when interacting
            with Amazon Cognito user pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.AllowedOAuthScopes">
            <summary>
            Gets and sets the property AllowedOAuthScopes. 
            <para>
            The OAuth scopes that your app client supports. Possible values that OAuth provides
            are <code>phone</code>, <code>email</code>, <code>openid</code>, and <code>profile</code>.
            Possible values that Amazon Web Services provides are <code>aws.cognito.signin.user.admin</code>.
            Amazon Cognito also supports custom scopes that you create in Resource Servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.AnalyticsConfiguration">
            <summary>
            Gets and sets the property AnalyticsConfiguration. 
            <para>
            The Amazon Pinpoint analytics configuration for the user pool client.
            </para>
             <note> 
            <para>
            Amazon Cognito user pools only support sending events to Amazon Pinpoint projects
            in the US East (N. Virginia) us-east-1 Region, regardless of the Region where the
            user pool resides.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.AuthSessionValidity">
            <summary>
            Gets and sets the property AuthSessionValidity. 
            <para>
            Amazon Cognito creates a session token for each API request in an authentication flow.
            <code>AuthSessionValidity</code> is the duration, in minutes, of that session token.
            Your user pool native user must respond to each authentication challenge before the
            session expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.CallbackURLs">
            <summary>
            Gets and sets the property CallbackURLs. 
            <para>
            A list of allowed redirect (callback) URLs for the IdPs.
            </para>
             
            <para>
            A redirect URI must:
            </para>
             <ul> <li> 
            <para>
            Be an absolute URI.
            </para>
             </li> <li> 
            <para>
            Be registered with the authorization server.
            </para>
             </li> <li> 
            <para>
            Not include a fragment component.
            </para>
             </li> </ul> 
            <para>
            See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.
            </para>
             
            <para>
            Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.
            </para>
             
            <para>
            App callback URLs such as myapp://example are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            The ID of the client associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ClientName">
            <summary>
            Gets and sets the property ClientName. 
            <para>
            The client name from the user pool request of the client type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ClientSecret">
            <summary>
            Gets and sets the property ClientSecret. 
            <para>
            The client secret from the user pool request of the client type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the user pool client was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.DefaultRedirectURI">
            <summary>
            Gets and sets the property DefaultRedirectURI. 
            <para>
            The default redirect URI. Must be in the <code>CallbackURLs</code> list.
            </para>
             
            <para>
            A redirect URI must:
            </para>
             <ul> <li> 
            <para>
            Be an absolute URI.
            </para>
             </li> <li> 
            <para>
            Be registered with the authorization server.
            </para>
             </li> <li> 
            <para>
            Not include a fragment component.
            </para>
             </li> </ul> 
            <para>
            See <a href="https://tools.ietf.org/html/rfc6749#section-3.1.2">OAuth 2.0 - Redirection
            Endpoint</a>.
            </para>
             
            <para>
            Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes
            only.
            </para>
             
            <para>
            App callback URLs such as myapp://example are also supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.EnablePropagateAdditionalUserContextData">
            <summary>
            Gets and sets the property EnablePropagateAdditionalUserContextData. 
            <para>
            When <code>EnablePropagateAdditionalUserContextData</code> is true, Amazon Cognito
            accepts an <code>IpAddress</code> value that you send in the <code>UserContextData</code>
            parameter. The <code>UserContextData</code> parameter sends information to Amazon
            Cognito advanced security for risk analysis. You can send <code>UserContextData</code>
            when you sign in Amazon Cognito native users with the <code>InitiateAuth</code> and
            <code>RespondToAuthChallenge</code> API operations.
            </para>
             
            <para>
            When <code>EnablePropagateAdditionalUserContextData</code> is false, you can't send
            your user's source IP address to Amazon Cognito advanced security with unauthenticated
            API operations. <code>EnablePropagateAdditionalUserContextData</code> doesn't affect
            whether you can send a source IP address in a <code>ContextData</code> parameter with
            the authenticated API operations <code>AdminInitiateAuth</code> and <code>AdminRespondToAuthChallenge</code>.
            </para>
             
            <para>
            You can only activate <code>EnablePropagateAdditionalUserContextData</code> in an
            app client that has a client secret. For more information about propagation of user
            context data, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-adaptive-authentication.html#user-pool-settings-adaptive-authentication-device-fingerprint">Adding
            user device and session data to API requests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.EnableTokenRevocation">
            <summary>
            Gets and sets the property EnableTokenRevocation. 
            <para>
            Indicates whether token revocation is activated for the user pool client. When you
            create a new user pool client, token revocation is activated by default. For more
            information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ExplicitAuthFlows">
            <summary>
            Gets and sets the property ExplicitAuthFlows. 
            <para>
            The authentication flows that you want your user pool client to support. For each
            app client in your user pool, you can sign in your users with any combination of one
            or more flows, including with a user name and Secure Remote Password (SRP), a user
            name and password, or a custom authentication process that you define with Lambda
            functions.
            </para>
             <note> 
            <para>
            If you don't specify a value for <code>ExplicitAuthFlows</code>, your user client
            supports <code>ALLOW_REFRESH_TOKEN_AUTH</code>, <code>ALLOW_USER_SRP_AUTH</code>,
            and <code>ALLOW_CUSTOM_AUTH</code>.
            </para>
             </note> 
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>ALLOW_ADMIN_USER_PASSWORD_AUTH</code>: Enable admin based user password authentication
            flow <code>ADMIN_USER_PASSWORD_AUTH</code>. This setting replaces the <code>ADMIN_NO_SRP_AUTH</code>
            setting. With this authentication flow, your app passes a user name and password to
            Amazon Cognito in the request, instead of using the Secure Remote Password (SRP) protocol
            to securely transmit the password.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_CUSTOM_AUTH</code>: Enable Lambda trigger based authentication.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_USER_PASSWORD_AUTH</code>: Enable user password-based authentication.
            In this flow, Amazon Cognito receives the password in the request instead of using
            the SRP protocol to verify passwords.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_USER_SRP_AUTH</code>: Enable SRP-based authentication.
            </para>
             </li> <li> 
            <para>
             <code>ALLOW_REFRESH_TOKEN_AUTH</code>: Enable authflow to refresh tokens.
            </para>
             </li> </ul> 
            <para>
            In some environments, you will see the values <code>ADMIN_NO_SRP_AUTH</code>, <code>CUSTOM_AUTH_FLOW_ONLY</code>,
            or <code>USER_PASSWORD_AUTH</code>. You can't assign these legacy <code>ExplicitAuthFlows</code>
            values to user pool clients at the same time as values that begin with <code>ALLOW_</code>,
            like <code>ALLOW_USER_SRP_AUTH</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.IdTokenValidity">
            <summary>
            Gets and sets the property IdTokenValidity. 
            <para>
            The ID token time limit. After this limit expires, your user can't use their ID token.
            To specify the time unit for <code>IdTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>IdTokenValidity</code> as <code>10</code> and <code>TokenValidityUnits</code>
            as <code>hours</code>, your user can authenticate their session with their ID token
            for 10 hours.
            </para>
             
            <para>
            The default time unit for <code>AccessTokenValidity</code> in an API request is hours.
            <i>Valid range</i> is displayed below in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your ID tokens
            are valid for one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the user pool client was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.LogoutURLs">
            <summary>
            Gets and sets the property LogoutURLs. 
            <para>
            A list of allowed logout URLs for the IdPs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.PreventUserExistenceErrors">
            <summary>
            Gets and sets the property PreventUserExistenceErrors. 
            <para>
            Errors and responses that you want Amazon Cognito APIs to return during authentication,
            account confirmation, and password recovery when the user doesn't exist in the user
            pool. When set to <code>ENABLED</code> and the user doesn't exist, authentication
            returns an error indicating either the username or password was incorrect. Account
            confirmation and password recovery return a response indicating a code was sent to
            a simulated destination. When set to <code>LEGACY</code>, those APIs return a <code>UserNotFoundException</code>
            exception if the user doesn't exist in the user pool.
            </para>
             
            <para>
            Valid values include:
            </para>
             <ul> <li> 
            <para>
             <code>ENABLED</code> - This prevents user existence-related errors.
            </para>
             </li> <li> 
            <para>
             <code>LEGACY</code> - This represents the old behavior of Amazon Cognito where user
            existence related errors aren't prevented.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.ReadAttributes">
            <summary>
            Gets and sets the property ReadAttributes. 
            <para>
            The Read-only attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.RefreshTokenValidity">
            <summary>
            Gets and sets the property RefreshTokenValidity. 
            <para>
            The refresh token time limit. After this limit expires, your user can't use their
            refresh token. To specify the time unit for <code>RefreshTokenValidity</code> as <code>seconds</code>,
            <code>minutes</code>, <code>hours</code>, or <code>days</code>, set a <code>TokenValidityUnits</code>
            value in your API request.
            </para>
             
            <para>
            For example, when you set <code>RefreshTokenValidity</code> as <code>10</code> and
            <code>TokenValidityUnits</code> as <code>days</code>, your user can refresh their
            session and retrieve new access and ID tokens for 10 days.
            </para>
             
            <para>
            The default time unit for <code>RefreshTokenValidity</code> in an API request is days.
            You can't set <code>RefreshTokenValidity</code> to 0. If you do, Amazon Cognito overrides
            the value with the default value of 30 days. <i>Valid range</i> is displayed below
            in seconds.
            </para>
             
            <para>
            If you don't specify otherwise in the configuration of your app client, your refresh
            tokens are valid for 30 days.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.SupportedIdentityProviders">
            <summary>
            Gets and sets the property SupportedIdentityProviders. 
            <para>
            A list of provider names for the IdPs that this client supports. The following are
            supported: <code>COGNITO</code>, <code>Facebook</code>, <code>Google</code>, <code>SignInWithApple</code>,
            <code>LoginWithAmazon</code>, and the names of your own SAML and OIDC providers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.TokenValidityUnits">
            <summary>
            Gets and sets the property TokenValidityUnits. 
            <para>
            The time units used to specify the token validity times of each token type: ID, access,
            and refresh.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.UserPoolId">
            <summary>
            Gets and sets the property UserPoolId. 
            <para>
            The user pool ID for the user pool client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolClientType.WriteAttributes">
            <summary>
            Gets and sets the property WriteAttributes. 
            <para>
            The writeable attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType">
            <summary>
            A user pool description.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the user pool description was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            The Lambda configuration information in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the user pool description was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name in a user pool description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolDescriptionType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The user pool status in a user pool description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType">
            <summary>
            The policy associated with a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolPolicyType.PasswordPolicy">
            <summary>
            Gets and sets the property PasswordPolicy. 
            <para>
            The password policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            <summary>
            This exception is thrown when a user pool tag can't be set or updated.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String)">
            <summary>
            Constructs a new UserPoolTaggingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.Exception)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UserPoolTaggingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UserPoolTaggingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserPoolType">
            <summary>
            A container for information about the user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.AccountRecoverySetting">
            <summary>
            Gets and sets the property AccountRecoverySetting. 
            <para>
            The available verified method a user can use to recover their password when they call
            <code>ForgotPassword</code>. You can use this setting to define a preferred method
            when a user has more than one method available. With this setting, SMS doesn't qualify
            for a valid password recovery mechanism if the user also has SMS multi-factor authentication
            (MFA) activated. In the absence of this setting, Amazon Cognito uses the legacy behavior
            to determine the recovery method where SMS is preferred through email.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.AdminCreateUserConfig">
            <summary>
            Gets and sets the property AdminCreateUserConfig. 
            <para>
            The configuration for <code>AdminCreateUser</code> requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.AliasAttributes">
            <summary>
            Gets and sets the property AliasAttributes. 
            <para>
            The attributes that are aliased in a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) for the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.AutoVerifiedAttributes">
            <summary>
            Gets and sets the property AutoVerifiedAttributes. 
            <para>
            The attributes that are auto-verified in a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the user pool was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.CustomDomain">
            <summary>
            Gets and sets the property CustomDomain. 
            <para>
            A custom domain name that you provide to Amazon Cognito. This parameter applies only
            if you use a custom domain to host the sign-up and sign-in pages for your application.
            An example of a custom domain name might be <code>auth.example.com</code>.
            </para>
             
            <para>
            For more information about adding a custom domain to your user pool, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html">Using
            Your Own Domain for the Hosted UI</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            When active, <code>DeletionProtection</code> prevents accidental deletion of your
            user pool. Before you can delete a user pool that you have protected against deletion,
            you must deactivate this feature.
            </para>
             
            <para>
            When you try to delete a protected user pool in a <code>DeleteUserPool</code> API
            request, Amazon Cognito returns an <code>InvalidParameterException</code> error. To
            delete a protected user pool, send a new <code>DeleteUserPool</code> request after
            you deactivate deletion protection in an <code>UpdateUserPool</code> API request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.DeviceConfiguration">
            <summary>
            Gets and sets the property DeviceConfiguration. 
            <para>
            The device-remembering configuration for a user pool. A null value indicates that
            you have deactivated device remembering in your user pool.
            </para>
             <note> 
            <para>
            When you provide a value for any <code>DeviceConfiguration</code> field, you activate
            the Amazon Cognito device-remembering feature.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain prefix, if the user pool has a domain associated with it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailConfiguration">
            <summary>
            Gets and sets the property EmailConfiguration. 
            <para>
            The email configuration of your user pool. The email configuration type sets your
            preferred sending method, Amazon Web Services Region, and sender for messages tfrom
            your user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailConfigurationFailure">
            <summary>
            Gets and sets the property EmailConfigurationFailure. 
            <para>
            Deprecated. Review error codes from API requests with <code>EventSource:cognito-idp.amazonaws.com</code>
            in CloudTrail for information about problems with user pool email configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailVerificationMessage">
            <summary>
            Gets and sets the property EmailVerificationMessage. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EmailVerificationSubject">
            <summary>
            Gets and sets the property EmailVerificationSubject. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.EstimatedNumberOfUsers">
            <summary>
            Gets and sets the property EstimatedNumberOfUsers. 
            <para>
            A number estimating the size of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.LambdaConfig">
            <summary>
            Gets and sets the property LambdaConfig. 
            <para>
            The Lambda triggers associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the user pool was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.MfaConfiguration">
            <summary>
            Gets and sets the property MfaConfiguration. 
            <para>
            Can be one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>OFF</code> - MFA tokens aren't required and can't be specified during user
            registration.
            </para>
             </li> <li> 
            <para>
             <code>ON</code> - MFA tokens are required for all user registrations. You can only
            specify required when you're initially creating a user pool.
            </para>
             </li> <li> 
            <para>
             <code>OPTIONAL</code> - Users have the option when registering to create an MFA token.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            The policies associated with the user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SchemaAttributes">
            <summary>
            Gets and sets the property SchemaAttributes. 
            <para>
            A container with the schema attributes of a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsAuthenticationMessage">
            <summary>
            Gets and sets the property SmsAuthenticationMessage. 
            <para>
            The contents of the SMS authentication message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsConfiguration">
            <summary>
            Gets and sets the property SmsConfiguration. 
            <para>
            The SMS configuration with the settings that your Amazon Cognito user pool must use
            to send an SMS message from your Amazon Web Services account through Amazon Simple
            Notification Service. To send SMS messages with Amazon SNS in the Amazon Web Services
            Region that you want, the Amazon Cognito user pool uses an Identity and Access Management
            (IAM) role in your Amazon Web Services account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsConfigurationFailure">
            <summary>
            Gets and sets the property SmsConfigurationFailure. 
            <para>
            The reason why the SMS configuration can't send the messages to your users.
            </para>
             
            <para>
            This message might include comma-separated values to describe why your SMS configuration
            can't send messages to user pool end users.
            </para>
             <dl> <dt>InvalidSmsRoleAccessPolicyException</dt> <dd> 
            <para>
            The Identity and Access Management role that Amazon Cognito uses to send SMS messages
            isn't properly configured. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SmsConfigurationType.html">SmsConfigurationType</a>.
            </para>
             </dd> <dt>SNSSandbox</dt> <dd> 
            <para>
            The Amazon Web Services account is in the SNS SMS Sandbox and messages will only reach
            verified end users. This parameter won’t get populated with SNSSandbox if the IAM
            user creating the user pool doesn’t have SNS permissions. To learn how to move your
            Amazon Web Services account out of the sandbox, see <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox-moving-to-production.html">Moving
            out of the SMS sandbox</a>.
            </para>
             </dd> </dl>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.SmsVerificationMessage">
            <summary>
            Gets and sets the property SmsVerificationMessage. 
            <para>
            This parameter is no longer used. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html">VerificationMessageTemplateType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a user pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.UserAttributeUpdateSettings">
            <summary>
            Gets and sets the property UserAttributeUpdateSettings. 
            <para>
            The settings for updates to user attributes. These settings include the property <code>AttributesRequireVerificationBeforeUpdate</code>,
            a user-pool setting that tells Amazon Cognito how to handle changes to the value of
            your users' email address and phone number attributes. For more information, see <a
            href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates">
            Verifying updates to email addresses and phone numbers</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.UsernameAttributes">
            <summary>
            Gets and sets the property UsernameAttributes. 
            <para>
            Specifies whether a user can use an email address or phone number as a username when
            they sign up.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.UsernameConfiguration">
            <summary>
            Gets and sets the property UsernameConfiguration. 
            <para>
            Case sensitivity of the username input for the selected sign-in option. For example,
            when case sensitivity is set to <code>False</code>, users can sign in using either
            "username" or "Username". This configuration is immutable once it has been set. For
            more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UsernameConfigurationType.html">UsernameConfigurationType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.UserPoolAddOns">
            <summary>
            Gets and sets the property UserPoolAddOns. 
            <para>
            The user pool add-ons.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.UserPoolTags">
            <summary>
            Gets and sets the property UserPoolTags. 
            <para>
            The tags that are assigned to the user pool. A tag is a label that you can apply to
            user pools to categorize and manage them in different ways, such as by purpose, owner,
            environment, or other criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserPoolType.VerificationMessageTemplate">
            <summary>
            Gets and sets the property VerificationMessageTemplate. 
            <para>
            The template for verification messages.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.UserType">
            <summary>
            A user profile in a Amazon Cognito user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A container with information about the user type attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether the user is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.MFAOptions">
            <summary>
            Gets and sets the property MFAOptions. 
            <para>
            The MFA options for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.UserCreateDate">
            <summary>
            Gets and sets the property UserCreateDate. 
            <para>
            The creation date of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.UserLastModifiedDate">
            <summary>
            Gets and sets the property UserLastModifiedDate. 
            <para>
            The last modified date of the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            The user name of the user you want to describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.UserType.UserStatus">
            <summary>
            Gets and sets the property UserStatus. 
            <para>
            The user status. This can be one of the following:
            </para>
             <ul> <li> 
            <para>
            UNCONFIRMED - User has been created but not confirmed.
            </para>
             </li> <li> 
            <para>
            CONFIRMED - User has been confirmed.
            </para>
             </li> <li> 
            <para>
            EXTERNAL_PROVIDER - User signed in with a third-party IdP.
            </para>
             </li> <li> 
            <para>
            ARCHIVED - User is no longer active.
            </para>
             </li> <li> 
            <para>
            UNKNOWN - User status isn't known.
            </para>
             </li> <li> 
            <para>
            RESET_REQUIRED - User is confirmed, but the user must request a code and reset their
            password before they can sign in.
            </para>
             </li> <li> 
            <para>
            FORCE_CHANGE_PASSWORD - The user is confirmed and the user can sign in using a temporary
            password, but on first sign-in, the user must change their password to a new value
            before doing anything else. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType">
            <summary>
            The template for verification messages.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType.DefaultEmailOption">
            <summary>
            Gets and sets the property DefaultEmailOption. 
            <para>
            The default email option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType.EmailMessage">
            <summary>
            Gets and sets the property EmailMessage. 
            <para>
            The template for email messages that Amazon Cognito sends to your users. You can set
            an <code>EmailMessage</code> template only if the value of <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">
            EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
            is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon
            SES configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType.EmailMessageByLink">
            <summary>
            Gets and sets the property EmailMessageByLink. 
            <para>
            The email message template for sending a confirmation link to the user. You can set
            an <code>EmailMessageByLink</code> template only if the value of <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">
            EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
            is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon
            SES configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType.EmailSubject">
            <summary>
            Gets and sets the property EmailSubject. 
            <para>
            The subject line for the email message template. You can set an <code>EmailSubject</code>
            template only if the value of <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">
            EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
            is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon
            SES configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType.EmailSubjectByLink">
            <summary>
            Gets and sets the property EmailSubjectByLink. 
            <para>
            The subject line for the email message template for sending a confirmation link to
            the user. You can set an <code>EmailSubjectByLink</code> template only if the value
            of <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">
            EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount">EmailSendingAccount</a>
            is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon
            SES configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerificationMessageTemplateType.SmsMessage">
            <summary>
            Gets and sets the property SmsMessage. 
            <para>
            The template for SMS messages that Amazon Cognito sends to your users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest">
            <summary>
            Container for the parameters to the VerifySoftwareToken operation.
            Use this API to register a user's entered time-based one-time password (TOTP) code
            and mark the user's software token MFA status as "verified" if successful. The request
            takes an access token or a session string, but not both.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose software token you
            want to verify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest.FriendlyDeviceName">
            <summary>
            Gets and sets the property FriendlyDeviceName. 
            <para>
            The friendly device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest.UserCode">
            <summary>
            Gets and sets the property UserCode. 
            <para>
            The one- time password computed using the secret code returned by <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AssociateSoftwareToken.html">AssociateSoftwareToken</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenResponse">
            <summary>
            This is the response object from the VerifySoftwareToken operation.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenResponse.Session">
            <summary>
            Gets and sets the property Session. 
            <para>
            The session that should be passed both ways in challenge-response calls to the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the verify software token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest">
            <summary>
            Container for the parameters to the VerifyUserAttribute operation.
            Verifies the specified user attributes in the user pool.
            
             
            <para>
             If your user pool requires verification before Amazon Cognito updates the attribute
            value, VerifyUserAttribute updates the affected attribute to its pending value. For
            more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserAttributeUpdateSettingsType.html">
            UserAttributeUpdateSettingsType</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.AccessToken">
            <summary>
            Gets and sets the property AccessToken. 
            <para>
            A valid access token that Amazon Cognito issued to the user whose user attributes
            you want to verify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The attribute name in the request to verify user attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The verification code in the request to verify user attributes.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest.CreateSigner">
            <summary>
            Get the signer to use for this request.
            </summary>
            <returns>A signer for this request.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeResponse">
            <summary>
            A container representing the response from the server from the request to verify user
            attributes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserPaginator">
            <summary>
            Base class for AdminListGroupsForUser paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserPaginator.Groups">
            <summary>
            Enumerable containing all of the Groups
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsPaginator">
            <summary>
            Base class for AdminListUserAuthEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsPaginator.AuthEvents">
            <summary>
            Enumerable containing all of the AuthEvents
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory">
             <summary>
             Paginators for the CognitoIdentityProvider service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.AdminListGroupsForUser(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
             <summary>
             Paginator for AdminListGroupsForUser operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.AdminListUserAuthEvents(Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest)">
             <summary>
             Paginator for AdminListUserAuthEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.ListGroups(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
             <summary>
             Paginator for ListGroups operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.ListIdentityProviders(Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest)">
             <summary>
             Paginator for ListIdentityProviders operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.ListResourceServers(Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest)">
             <summary>
             Paginator for ListResourceServers operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.ListUserPoolClients(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
             <summary>
             Paginator for ListUserPoolClients operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.ListUserPools(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
             <summary>
             Paginator for ListUserPools operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.ListUsers(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
             <summary>
             Paginator for ListUsers operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.CognitoIdentityProviderPaginatorFactory.ListUsersInGroup(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
             <summary>
             Paginator for ListUsersInGroup operation
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IAdminListGroupsForUserPaginator">
             <summary>
             Paginator for the AdminListGroupsForUser operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IAdminListGroupsForUserPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IAdminListGroupsForUserPaginator.Groups">
            <summary>
            Enumerable containing all of the Groups
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IAdminListUserAuthEventsPaginator">
             <summary>
             Paginator for the AdminListUserAuthEvents operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IAdminListUserAuthEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IAdminListUserAuthEventsPaginator.AuthEvents">
            <summary>
            Enumerable containing all of the AuthEvents
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory">
             <summary>
             Paginators for the CognitoIdentityProvider service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.AdminListGroupsForUser(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
             <summary>
             Paginator for AdminListGroupsForUser operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.AdminListUserAuthEvents(Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest)">
             <summary>
             Paginator for AdminListUserAuthEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.ListGroups(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
             <summary>
             Paginator for ListGroups operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.ListIdentityProviders(Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest)">
             <summary>
             Paginator for ListIdentityProviders operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.ListResourceServers(Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest)">
             <summary>
             Paginator for ListResourceServers operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.ListUserPoolClients(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
             <summary>
             Paginator for ListUserPoolClients operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.ListUserPools(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
             <summary>
             Paginator for ListUserPools operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.ListUsers(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
             <summary>
             Paginator for ListUsers operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.Model.ICognitoIdentityProviderPaginatorFactory.ListUsersInGroup(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
             <summary>
             Paginator for ListUsersInGroup operation
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IListGroupsPaginator">
             <summary>
             Paginator for the ListGroups operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListGroupsPaginator.Groups">
            <summary>
            Enumerable containing all of the Groups
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IListIdentityProvidersPaginator">
             <summary>
             Paginator for the ListIdentityProviders operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListIdentityProvidersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListIdentityProvidersPaginator.Providers">
            <summary>
            Enumerable containing all of the Providers
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IListResourceServersPaginator">
             <summary>
             Paginator for the ListResourceServers operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListResourceServersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListResourceServersPaginator.ResourceServers">
            <summary>
            Enumerable containing all of the ResourceServers
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IListUserPoolClientsPaginator">
             <summary>
             Paginator for the ListUserPoolClients operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUserPoolClientsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUserPoolClientsPaginator.UserPoolClients">
            <summary>
            Enumerable containing all of the UserPoolClients
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IListUserPoolsPaginator">
             <summary>
             Paginator for the ListUserPools operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUserPoolsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUserPoolsPaginator.UserPools">
            <summary>
            Enumerable containing all of the UserPools
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IListUsersInGroupPaginator">
             <summary>
             Paginator for the ListUsersInGroup operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUsersInGroupPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUsersInGroupPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.IListUsersPaginator">
             <summary>
             Paginator for the ListUsers operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUsersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.IListUsersPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListGroupsPaginator">
            <summary>
            Base class for ListGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListGroupsPaginator.Groups">
            <summary>
            Enumerable containing all of the Groups
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersPaginator">
            <summary>
            Base class for ListIdentityProviders paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersPaginator.Providers">
            <summary>
            Enumerable containing all of the Providers
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListResourceServersPaginator">
            <summary>
            Base class for ListResourceServers paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListResourceServersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListResourceServersPaginator.ResourceServers">
            <summary>
            Enumerable containing all of the ResourceServers
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsPaginator">
            <summary>
            Base class for ListUserPoolClients paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsPaginator.UserPoolClients">
            <summary>
            Enumerable containing all of the UserPoolClients
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUserPoolsPaginator">
            <summary>
            Base class for ListUserPools paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUserPoolsPaginator.UserPools">
            <summary>
            Enumerable containing all of the UserPools
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupPaginator">
            <summary>
            Base class for ListUsersInGroup paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersInGroupPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.Model.ListUsersPaginator">
            <summary>
            Base class for ListUsers paginators.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.Model.ListUsersPaginator.Users">
            <summary>
            Enumerable containing all of the Users
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderRequest">
            <summary>
            Base class for CognitoIdentityProvider operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType">
            <summary>
            Constants used for properties of type AccountTakeoverEventActionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType.BLOCK">
            <summary>
            Constant BLOCK for AccountTakeoverEventActionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType.MFA_IF_CONFIGURED">
            <summary>
            Constant MFA_IF_CONFIGURED for AccountTakeoverEventActionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType.MFA_REQUIRED">
            <summary>
            Constant MFA_REQUIRED for AccountTakeoverEventActionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType.NO_ACTION">
            <summary>
            Constant NO_ACTION for AccountTakeoverEventActionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AccountTakeoverEventActionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AdvancedSecurityModeType">
            <summary>
            Constants used for properties of type AdvancedSecurityModeType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AdvancedSecurityModeType.AUDIT">
            <summary>
            Constant AUDIT for AdvancedSecurityModeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AdvancedSecurityModeType.ENFORCED">
            <summary>
            Constant ENFORCED for AdvancedSecurityModeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AdvancedSecurityModeType.OFF">
            <summary>
            Constant OFF for AdvancedSecurityModeType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AdvancedSecurityModeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AdvancedSecurityModeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AdvancedSecurityModeType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AdvancedSecurityModeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AliasAttributeType">
            <summary>
            Constants used for properties of type AliasAttributeType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AliasAttributeType.Email">
            <summary>
            Constant Email for AliasAttributeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AliasAttributeType.Phone_number">
            <summary>
            Constant Phone_number for AliasAttributeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AliasAttributeType.Preferred_username">
            <summary>
            Constant Preferred_username for AliasAttributeType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AliasAttributeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AliasAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AliasAttributeType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AliasAttributeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AttributeDataType">
            <summary>
            Constants used for properties of type AttributeDataType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.Boolean">
            <summary>
            Constant Boolean for AttributeDataType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.DateTime">
            <summary>
            Constant DateTime for AttributeDataType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.Number">
            <summary>
            Constant Number for AttributeDataType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AttributeDataType.String">
            <summary>
            Constant String for AttributeDataType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AttributeDataType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AttributeDataType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AttributeDataType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AttributeDataType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AuthFlowType">
            <summary>
            Constants used for properties of type AuthFlowType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.ADMIN_NO_SRP_AUTH">
            <summary>
            Constant ADMIN_NO_SRP_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.ADMIN_USER_PASSWORD_AUTH">
            <summary>
            Constant ADMIN_USER_PASSWORD_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.CUSTOM_AUTH">
            <summary>
            Constant CUSTOM_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.REFRESH_TOKEN">
            <summary>
            Constant REFRESH_TOKEN for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.REFRESH_TOKEN_AUTH">
            <summary>
            Constant REFRESH_TOKEN_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.USER_PASSWORD_AUTH">
            <summary>
            Constant USER_PASSWORD_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.AuthFlowType.USER_SRP_AUTH">
            <summary>
            Constant USER_SRP_AUTH for AuthFlowType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AuthFlowType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AuthFlowType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AuthFlowType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.AuthFlowType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.ChallengeName">
            <summary>
            Constants used for properties of type ChallengeName.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeName.Mfa">
            <summary>
            Constant Mfa for ChallengeName
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeName.Password">
            <summary>
            Constant Password for ChallengeName
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeName.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.ChallengeName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.ChallengeNameType">
            <summary>
            Constants used for properties of type ChallengeNameType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.ADMIN_NO_SRP_AUTH">
            <summary>
            Constant ADMIN_NO_SRP_AUTH for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.CUSTOM_CHALLENGE">
            <summary>
            Constant CUSTOM_CHALLENGE for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.DEVICE_PASSWORD_VERIFIER">
            <summary>
            Constant DEVICE_PASSWORD_VERIFIER for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.DEVICE_SRP_AUTH">
            <summary>
            Constant DEVICE_SRP_AUTH for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.MFA_SETUP">
            <summary>
            Constant MFA_SETUP for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.NEW_PASSWORD_REQUIRED">
            <summary>
            Constant NEW_PASSWORD_REQUIRED for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.PASSWORD_VERIFIER">
            <summary>
            Constant PASSWORD_VERIFIER for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.SELECT_MFA_TYPE">
            <summary>
            Constant SELECT_MFA_TYPE for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.SMS_MFA">
            <summary>
            Constant SMS_MFA for ChallengeNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeNameType.SOFTWARE_TOKEN_MFA">
            <summary>
            Constant SOFTWARE_TOKEN_MFA for ChallengeNameType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeNameType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeNameType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeNameType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.ChallengeNameType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.ChallengeResponse">
            <summary>
            Constants used for properties of type ChallengeResponse.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeResponse.Failure">
            <summary>
            Constant Failure for ChallengeResponse
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ChallengeResponse.Success">
            <summary>
            Constant Success for ChallengeResponse
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeResponse.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeResponse.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ChallengeResponse.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.ChallengeResponse">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType">
            <summary>
            Constants used for properties of type CompromisedCredentialsEventActionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType.BLOCK">
            <summary>
            Constant BLOCK for CompromisedCredentialsEventActionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType.NO_ACTION">
            <summary>
            Constant NO_ACTION for CompromisedCredentialsEventActionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.CompromisedCredentialsEventActionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.CustomEmailSenderLambdaVersionType">
            <summary>
            Constants used for properties of type CustomEmailSenderLambdaVersionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.CustomEmailSenderLambdaVersionType.V1_0">
            <summary>
            Constant V1_0 for CustomEmailSenderLambdaVersionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CustomEmailSenderLambdaVersionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CustomEmailSenderLambdaVersionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CustomEmailSenderLambdaVersionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.CustomEmailSenderLambdaVersionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.CustomSMSSenderLambdaVersionType">
            <summary>
            Constants used for properties of type CustomSMSSenderLambdaVersionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.CustomSMSSenderLambdaVersionType.V1_0">
            <summary>
            Constant V1_0 for CustomSMSSenderLambdaVersionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CustomSMSSenderLambdaVersionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CustomSMSSenderLambdaVersionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.CustomSMSSenderLambdaVersionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.CustomSMSSenderLambdaVersionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.DefaultEmailOptionType">
            <summary>
            Constants used for properties of type DefaultEmailOptionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DefaultEmailOptionType.CONFIRM_WITH_CODE">
            <summary>
            Constant CONFIRM_WITH_CODE for DefaultEmailOptionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DefaultEmailOptionType.CONFIRM_WITH_LINK">
            <summary>
            Constant CONFIRM_WITH_LINK for DefaultEmailOptionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DefaultEmailOptionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DefaultEmailOptionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DefaultEmailOptionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.DefaultEmailOptionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.DeletionProtectionType">
            <summary>
            Constants used for properties of type DeletionProtectionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeletionProtectionType.ACTIVE">
            <summary>
            Constant ACTIVE for DeletionProtectionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeletionProtectionType.INACTIVE">
            <summary>
            Constant INACTIVE for DeletionProtectionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeletionProtectionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeletionProtectionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeletionProtectionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.DeletionProtectionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.DeliveryMediumType">
            <summary>
            Constants used for properties of type DeliveryMediumType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeliveryMediumType.EMAIL">
            <summary>
            Constant EMAIL for DeliveryMediumType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeliveryMediumType.SMS">
            <summary>
            Constant SMS for DeliveryMediumType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeliveryMediumType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeliveryMediumType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeliveryMediumType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.DeliveryMediumType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType">
            <summary>
            Constants used for properties of type DeviceRememberedStatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.Not_remembered">
            <summary>
            Constant Not_remembered for DeviceRememberedStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.Remembered">
            <summary>
            Constant Remembered for DeviceRememberedStatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DeviceRememberedStatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.DeviceRememberedStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.DomainStatusType">
            <summary>
            Constants used for properties of type DomainStatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DomainStatusType.ACTIVE">
            <summary>
            Constant ACTIVE for DomainStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DomainStatusType.CREATING">
            <summary>
            Constant CREATING for DomainStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DomainStatusType.DELETING">
            <summary>
            Constant DELETING for DomainStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DomainStatusType.FAILED">
            <summary>
            Constant FAILED for DomainStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.DomainStatusType.UPDATING">
            <summary>
            Constant UPDATING for DomainStatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DomainStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DomainStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.DomainStatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.DomainStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.EmailSendingAccountType">
            <summary>
            Constants used for properties of type EmailSendingAccountType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EmailSendingAccountType.COGNITO_DEFAULT">
            <summary>
            Constant COGNITO_DEFAULT for EmailSendingAccountType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EmailSendingAccountType.DEVELOPER">
            <summary>
            Constant DEVELOPER for EmailSendingAccountType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EmailSendingAccountType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EmailSendingAccountType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EmailSendingAccountType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.EmailSendingAccountType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.EventFilterType">
            <summary>
            Constants used for properties of type EventFilterType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventFilterType.PASSWORD_CHANGE">
            <summary>
            Constant PASSWORD_CHANGE for EventFilterType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventFilterType.SIGN_IN">
            <summary>
            Constant SIGN_IN for EventFilterType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventFilterType.SIGN_UP">
            <summary>
            Constant SIGN_UP for EventFilterType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventFilterType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventFilterType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventFilterType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.EventFilterType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.EventResponseType">
            <summary>
            Constants used for properties of type EventResponseType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventResponseType.Fail">
            <summary>
            Constant Fail for EventResponseType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventResponseType.InProgress">
            <summary>
            Constant InProgress for EventResponseType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventResponseType.Pass">
            <summary>
            Constant Pass for EventResponseType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventResponseType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventResponseType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventResponseType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.EventResponseType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.EventType">
            <summary>
            Constants used for properties of type EventType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventType.ForgotPassword">
            <summary>
            Constant ForgotPassword for EventType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventType.PasswordChange">
            <summary>
            Constant PasswordChange for EventType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventType.ResendCode">
            <summary>
            Constant ResendCode for EventType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventType.SignIn">
            <summary>
            Constant SignIn for EventType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.EventType.SignUp">
            <summary>
            Constant SignUp for EventType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.EventType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.EventType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType">
            <summary>
            Constants used for properties of type ExplicitAuthFlowsType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.ADMIN_NO_SRP_AUTH">
            <summary>
            Constant ADMIN_NO_SRP_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.ALLOW_ADMIN_USER_PASSWORD_AUTH">
            <summary>
            Constant ALLOW_ADMIN_USER_PASSWORD_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.ALLOW_CUSTOM_AUTH">
            <summary>
            Constant ALLOW_CUSTOM_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.ALLOW_REFRESH_TOKEN_AUTH">
            <summary>
            Constant ALLOW_REFRESH_TOKEN_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.ALLOW_USER_PASSWORD_AUTH">
            <summary>
            Constant ALLOW_USER_PASSWORD_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.ALLOW_USER_SRP_AUTH">
            <summary>
            Constant ALLOW_USER_SRP_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.CUSTOM_AUTH_FLOW_ONLY">
            <summary>
            Constant CUSTOM_AUTH_FLOW_ONLY for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.USER_PASSWORD_AUTH">
            <summary>
            Constant USER_PASSWORD_AUTH for ExplicitAuthFlowsType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.ExplicitAuthFlowsType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.FeedbackValueType">
            <summary>
            Constants used for properties of type FeedbackValueType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.FeedbackValueType.Invalid">
            <summary>
            Constant Invalid for FeedbackValueType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.FeedbackValueType.Valid">
            <summary>
            Constant Valid for FeedbackValueType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.FeedbackValueType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.FeedbackValueType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.FeedbackValueType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.FeedbackValueType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.IdentityProviderTypeType">
            <summary>
            Constants used for properties of type IdentityProviderTypeType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.Facebook">
            <summary>
            Constant Facebook for IdentityProviderTypeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.Google">
            <summary>
            Constant Google for IdentityProviderTypeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.LoginWithAmazon">
            <summary>
            Constant LoginWithAmazon for IdentityProviderTypeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.OIDC">
            <summary>
            Constant OIDC for IdentityProviderTypeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.SAML">
            <summary>
            Constant SAML for IdentityProviderTypeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.SignInWithApple">
            <summary>
            Constant SignInWithApple for IdentityProviderTypeType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IdentityProviderTypeType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.IdentityProviderTypeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.MessageActionType">
            <summary>
            Constants used for properties of type MessageActionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.MessageActionType.RESEND">
            <summary>
            Constant RESEND for MessageActionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.MessageActionType.SUPPRESS">
            <summary>
            Constant SUPPRESS for MessageActionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.MessageActionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.MessageActionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.MessageActionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.MessageActionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.OAuthFlowType">
            <summary>
            Constants used for properties of type OAuthFlowType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.OAuthFlowType.Client_credentials">
            <summary>
            Constant Client_credentials for OAuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.OAuthFlowType.Code">
            <summary>
            Constant Code for OAuthFlowType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.OAuthFlowType.Implicit">
            <summary>
            Constant Implicit for OAuthFlowType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.OAuthFlowType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.OAuthFlowType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.OAuthFlowType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.OAuthFlowType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes">
            <summary>
            Constants used for properties of type PreventUserExistenceErrorTypes.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes.ENABLED">
            <summary>
            Constant ENABLED for PreventUserExistenceErrorTypes
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes.LEGACY">
            <summary>
            Constant LEGACY for PreventUserExistenceErrorTypes
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.PreventUserExistenceErrorTypes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.RecoveryOptionNameType">
            <summary>
            Constants used for properties of type RecoveryOptionNameType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RecoveryOptionNameType.Admin_only">
            <summary>
            Constant Admin_only for RecoveryOptionNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RecoveryOptionNameType.Verified_email">
            <summary>
            Constant Verified_email for RecoveryOptionNameType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RecoveryOptionNameType.Verified_phone_number">
            <summary>
            Constant Verified_phone_number for RecoveryOptionNameType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RecoveryOptionNameType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RecoveryOptionNameType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RecoveryOptionNameType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.RecoveryOptionNameType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.RiskDecisionType">
            <summary>
            Constants used for properties of type RiskDecisionType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RiskDecisionType.AccountTakeover">
            <summary>
            Constant AccountTakeover for RiskDecisionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RiskDecisionType.Block">
            <summary>
            Constant Block for RiskDecisionType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RiskDecisionType.NoRisk">
            <summary>
            Constant NoRisk for RiskDecisionType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RiskDecisionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RiskDecisionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RiskDecisionType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.RiskDecisionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.RiskLevelType">
            <summary>
            Constants used for properties of type RiskLevelType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RiskLevelType.High">
            <summary>
            Constant High for RiskLevelType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RiskLevelType.Low">
            <summary>
            Constant Low for RiskLevelType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.RiskLevelType.Medium">
            <summary>
            Constant Medium for RiskLevelType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RiskLevelType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RiskLevelType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.RiskLevelType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.RiskLevelType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.StatusType.Disabled">
            <summary>
            Constant Disabled for StatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.StatusType.Enabled">
            <summary>
            Constant Enabled for StatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.StatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.StatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.StatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.TimeUnitsType">
            <summary>
            Constants used for properties of type TimeUnitsType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.TimeUnitsType.Days">
            <summary>
            Constant Days for TimeUnitsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.TimeUnitsType.Hours">
            <summary>
            Constant Hours for TimeUnitsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.TimeUnitsType.Minutes">
            <summary>
            Constant Minutes for TimeUnitsType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.TimeUnitsType.Seconds">
            <summary>
            Constant Seconds for TimeUnitsType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.TimeUnitsType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.TimeUnitsType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.TimeUnitsType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.TimeUnitsType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.UserImportJobStatusType">
            <summary>
            Constants used for properties of type UserImportJobStatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Created">
            <summary>
            Constant Created for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Expired">
            <summary>
            Constant Expired for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Failed">
            <summary>
            Constant Failed for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.InProgress">
            <summary>
            Constant InProgress for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Pending">
            <summary>
            Constant Pending for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Stopped">
            <summary>
            Constant Stopped for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Stopping">
            <summary>
            Constant Stopping for UserImportJobStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserImportJobStatusType.Succeeded">
            <summary>
            Constant Succeeded for UserImportJobStatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserImportJobStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserImportJobStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserImportJobStatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.UserImportJobStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.UsernameAttributeType">
            <summary>
            Constants used for properties of type UsernameAttributeType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UsernameAttributeType.Email">
            <summary>
            Constant Email for UsernameAttributeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UsernameAttributeType.Phone_number">
            <summary>
            Constant Phone_number for UsernameAttributeType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UsernameAttributeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UsernameAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UsernameAttributeType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.UsernameAttributeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.UserPoolMfaType">
            <summary>
            Constants used for properties of type UserPoolMfaType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserPoolMfaType.OFF">
            <summary>
            Constant OFF for UserPoolMfaType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserPoolMfaType.ON">
            <summary>
            Constant ON for UserPoolMfaType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserPoolMfaType.OPTIONAL">
            <summary>
            Constant OPTIONAL for UserPoolMfaType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserPoolMfaType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserPoolMfaType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserPoolMfaType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.UserPoolMfaType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.UserStatusType">
            <summary>
            Constants used for properties of type UserStatusType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.ARCHIVED">
            <summary>
            Constant ARCHIVED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.COMPROMISED">
            <summary>
            Constant COMPROMISED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.CONFIRMED">
            <summary>
            Constant CONFIRMED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.FORCE_CHANGE_PASSWORD">
            <summary>
            Constant FORCE_CHANGE_PASSWORD for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.RESET_REQUIRED">
            <summary>
            Constant RESET_REQUIRED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.UNCONFIRMED">
            <summary>
            Constant UNCONFIRMED for UserStatusType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.UserStatusType.UNKNOWN">
            <summary>
            Constant UNKNOWN for UserStatusType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserStatusType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.UserStatusType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.UserStatusType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.VerifiedAttributeType">
            <summary>
            Constants used for properties of type VerifiedAttributeType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.VerifiedAttributeType.Email">
            <summary>
            Constant Email for VerifiedAttributeType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.VerifiedAttributeType.Phone_number">
            <summary>
            Constant Phone_number for VerifiedAttributeType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifiedAttributeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifiedAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifiedAttributeType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.VerifiedAttributeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType">
            <summary>
            Constants used for properties of type VerifySoftwareTokenResponseType.
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType.ERROR">
            <summary>
            Constant ERROR for VerifySoftwareTokenResponseType
            </summary>
        </member>
        <member name="F:Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType.SUCCESS">
            <summary>
            Constant SUCCESS for VerifySoftwareTokenResponseType
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType.op_Implicit(System.String)~Amazon.CognitoIdentityProvider.VerifySoftwareTokenResponseType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient">
             <summary>
             Implementation for accessing CognitoIdentityProvider
            
             Using the Amazon Cognito user pools API, you can create a user pool to manage directories
             and users. You can authenticate a user to obtain tokens related to user identity and
             access policies.
             
              
             <para>
             This API reference provides information about user pools in Amazon Cognito user pools.
             </para>
              
             <para>
             For more information, see the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html">Amazon
             Cognito Documentation</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor">
             <summary>
             Constructs AmazonCognitoIdentityProviderClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCognitoIdentityProviderClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
             <summary>
             Constructs AmazonCognitoIdentityProviderClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Credentials and an
            AmazonCognitoIdentityProviderClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoIdentityProviderClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.#ctor(System.String,System.String,System.String,Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderConfig)">
            <summary>
            Constructs AmazonCognitoIdentityProviderClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoIdentityProviderClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCognitoIdentityProviderClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AddCustomAttributes(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest)">
            <summary>
            Adds additional user attributes to the user pool schema.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes service method.</param>
            
            <returns>The response from the AddCustomAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AddCustomAttributesAsync(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Adds additional user attributes to the user pool schema.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddCustomAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminAddUserToGroup(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest)">
            <summary>
            Adds the specified user to the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup service method.</param>
            
            <returns>The response from the AdminAddUserToGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminAddUserToGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified user to the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminAddUserToGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminConfirmSignUp(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest)">
            <summary>
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp service method.</param>
            
            <returns>The response from the AdminConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminCreateUser(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest)">
            <summary>
            Creates a new user in the specified user pool.
            
             
            <para>
            If <code>MessageAction</code> isn't set, the default is to send a welcome message
            via email or phone (SMS).
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            This message is based on a template that you configured in your call to create or
            update a user pool. This template includes your custom sign-up instructions and placeholders
            for user name and temporary password.
            </para>
             
            <para>
            Alternatively, you can call <code>AdminCreateUser</code> with <code>SUPPRESS</code>
            for the <code>MessageAction</code> parameter, and Amazon Cognito won't send any email.
            
            </para>
             
            <para>
            In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until
            they sign in and change their password.
            </para>
             
            <para>
             <code>AdminCreateUser</code> requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser service method.</param>
            
            <returns>The response from the AdminCreateUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            The request failed because the user is in an unsupported state.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminCreateUserAsync(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new user in the specified user pool.
            
             
            <para>
            If <code>MessageAction</code> isn't set, the default is to send a welcome message
            via email or phone (SMS).
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            This message is based on a template that you configured in your call to create or
            update a user pool. This template includes your custom sign-up instructions and placeholders
            for user name and temporary password.
            </para>
             
            <para>
            Alternatively, you can call <code>AdminCreateUser</code> with <code>SUPPRESS</code>
            for the <code>MessageAction</code> parameter, and Amazon Cognito won't send any email.
            
            </para>
             
            <para>
            In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until
            they sign in and change their password.
            </para>
             
            <para>
             <code>AdminCreateUser</code> requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminCreateUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            The request failed because the user is in an unsupported state.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUser(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest)">
            <summary>
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser service method.</param>
            
            <returns>The response from the AdminDeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest)">
            <summary>
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</param>
            
            <returns>The response from the AdminDeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDisableProviderForUser(Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest)">
            <summary>
            Prevents the user from signing in with the specified external (SAML or social) identity
            provider (IdP). If the user that you want to deactivate is a Amazon Cognito user pools
            native username + password user, they can't use their password to sign in. If the
            user to deactivate is a linked external IdP user, any link between that user and an
            existing user is removed. When the external user signs in again, and the user is no
            longer attached to the previously linked <code>DestinationUser</code>, the user must
            create a new user account. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html">AdminLinkProviderForUser</a>.
            
             
            <para>
            This action is enabled only for admin access and requires developer credentials.
            </para>
             
            <para>
            The <code>ProviderName</code> must match the value specified when creating an IdP
            for the pool. 
            </para>
             
            <para>
            To deactivate a native username + password user, the <code>ProviderName</code> value
            must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>.
            The <code>ProviderAttributeValue</code> must be the name that is used in the user
            pool for the user.
            </para>
             
            <para>
            The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code>
            for social IdPs. The <code>ProviderAttributeValue</code> must always be the exact
            subject that was used when the user was originally linked as a source user.
            </para>
             
            <para>
            For de-linking a SAML identity, there are two scenarios. If the linked identity has
            not yet been used to sign in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code>
            must be the same values that were used for the <code>SourceUser</code> when the identities
            were originally linked using <code> AdminLinkProviderForUser</code> call. (If the
            linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>,
            the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code>
            must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must
            be the subject of the SAML assertion.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableProviderForUser service method.</param>
            
            <returns>The response from the AdminDisableProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableProviderForUser">REST API Reference for AdminDisableProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDisableProviderForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Prevents the user from signing in with the specified external (SAML or social) identity
            provider (IdP). If the user that you want to deactivate is a Amazon Cognito user pools
            native username + password user, they can't use their password to sign in. If the
            user to deactivate is a linked external IdP user, any link between that user and an
            existing user is removed. When the external user signs in again, and the user is no
            longer attached to the previously linked <code>DestinationUser</code>, the user must
            create a new user account. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html">AdminLinkProviderForUser</a>.
            
             
            <para>
            This action is enabled only for admin access and requires developer credentials.
            </para>
             
            <para>
            The <code>ProviderName</code> must match the value specified when creating an IdP
            for the pool. 
            </para>
             
            <para>
            To deactivate a native username + password user, the <code>ProviderName</code> value
            must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>.
            The <code>ProviderAttributeValue</code> must be the name that is used in the user
            pool for the user.
            </para>
             
            <para>
            The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code>
            for social IdPs. The <code>ProviderAttributeValue</code> must always be the exact
            subject that was used when the user was originally linked as a source user.
            </para>
             
            <para>
            For de-linking a SAML identity, there are two scenarios. If the linked identity has
            not yet been used to sign in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code>
            must be the same values that were used for the <code>SourceUser</code> when the identities
            were originally linked using <code> AdminLinkProviderForUser</code> call. (If the
            linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>,
            the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code>
            must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must
            be the subject of the SAML assertion.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableProviderForUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDisableProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableProviderForUser">REST API Reference for AdminDisableProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDisableUser(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest)">
            <summary>
            Deactivates a user and revokes all access tokens for the user. A deactivated user
            can't sign in, but still appears in the responses to <code>GetUser</code> and <code>ListUsers</code>
            API requests.
            
             
            <para>
            You must make this API request with Amazon Web Services credentials that have <code>cognito-idp:AdminDisableUser</code>
            permissions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser service method.</param>
            
            <returns>The response from the AdminDisableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminDisableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deactivates a user and revokes all access tokens for the user. A deactivated user
            can't sign in, but still appears in the responses to <code>GetUser</code> and <code>ListUsers</code>
            API requests.
            
             
            <para>
            You must make this API request with Amazon Web Services credentials that have <code>cognito-idp:AdminDisableUser</code>
            permissions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDisableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminEnableUser(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest)">
            <summary>
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser service method.</param>
            
            <returns>The response from the AdminEnableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminEnableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminEnableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminForgetDevice(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest)">
            <summary>
            Forgets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice service method.</param>
            
            <returns>The response from the AdminForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Forgets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetDevice(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest)">
            <summary>
            Gets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice service method.</param>
            
            <returns>The response from the AdminGetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminGetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetUser(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest)">
            <summary>
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetUser service method.</param>
            
            <returns>The response from the AdminGetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminGetUserAsync(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminGetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminInitiateAuth(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest)">
            <summary>
            Initiates the authentication flow, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth service method.</param>
            
            <returns>The response from the AdminInitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminInitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the authentication flow, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminInitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminLinkProviderForUser(Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest)">
            <summary>
            Links an existing user account in a user pool (<code>DestinationUser</code>) to an
            identity from an external IdP (<code>SourceUser</code>) based on a specified attribute
            name and value from the external IdP. This allows you to create a link from the existing
            user account to an external federated user identity that has not yet been used to
            sign in. You can then use the federated user identity to sign in as the existing user
            account. 
            
             
            <para>
             For example, if there is an existing user with a username and password, this API
            links that user to a federated user identity. When the user signs in with a federated
            user identity, they sign in as the existing user account.
            </para>
             <note> 
            <para>
            The maximum number of federated identities linked to a user is five.
            </para>
             </note> <important> 
            <para>
            Because this API allows a user with an external federated identity to sign in as an
            existing user in the user pool, it is critical that it only be used with external
            IdPs and provider attributes that have been trusted by the application owner.
            </para>
             </important> 
            <para>
            This action is administrative and requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminLinkProviderForUser service method.</param>
            
            <returns>The response from the AdminLinkProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminLinkProviderForUser">REST API Reference for AdminLinkProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminLinkProviderForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Links an existing user account in a user pool (<code>DestinationUser</code>) to an
            identity from an external IdP (<code>SourceUser</code>) based on a specified attribute
            name and value from the external IdP. This allows you to create a link from the existing
            user account to an external federated user identity that has not yet been used to
            sign in. You can then use the federated user identity to sign in as the existing user
            account. 
            
             
            <para>
             For example, if there is an existing user with a username and password, this API
            links that user to a federated user identity. When the user signs in with a federated
            user identity, they sign in as the existing user account.
            </para>
             <note> 
            <para>
            The maximum number of federated identities linked to a user is five.
            </para>
             </note> <important> 
            <para>
            Because this API allows a user with an external federated identity to sign in as an
            existing user in the user pool, it is critical that it only be used with external
            IdPs and provider attributes that have been trusted by the application owner.
            </para>
             </important> 
            <para>
            This action is administrative and requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminLinkProviderForUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminLinkProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminLinkProviderForUser">REST API Reference for AdminLinkProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListDevices(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest)">
            <summary>
            Lists devices, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListDevices service method.</param>
            
            <returns>The response from the AdminListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListDevicesAsync(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists devices, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListGroupsForUser(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
            <summary>
            Lists the groups that the user belongs to.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser service method.</param>
            
            <returns>The response from the AdminListGroupsForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListGroupsForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the groups that the user belongs to.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminListGroupsForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListUserAuthEvents(Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest)">
            <summary>
            A history of user activity and any risks detected as part of Amazon Cognito advanced
            security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListUserAuthEvents service method.</param>
            
            <returns>The response from the AdminListUserAuthEvents service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListUserAuthEvents">REST API Reference for AdminListUserAuthEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminListUserAuthEventsAsync(Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest,System.Threading.CancellationToken)">
            <summary>
            A history of user activity and any risks detected as part of Amazon Cognito advanced
            security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListUserAuthEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminListUserAuthEvents service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListUserAuthEvents">REST API Reference for AdminListUserAuthEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRemoveUserFromGroup(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest)">
            <summary>
            Removes the specified user from the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</param>
            
            <returns>The response from the AdminRemoveUserFromGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRemoveUserFromGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified user from the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminRemoveUserFromGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminResetUserPassword(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest)">
            <summary>
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword service method.</param>
            
            <returns>The response from the AdminResetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminResetUserPasswordAsync(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminResetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest)">
            <summary>
            Responds to an authentication challenge, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</param>
            
            <returns>The response from the AdminRespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminRespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Responds to an authentication challenge, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminRespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserMFAPreference(Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest)">
            <summary>
            The user's multi-factor authentication (MFA) preference, including which MFA options
            are activated, and if any are preferred. Only one factor can be set as preferred.
            The preferred MFA factor will be used to authenticate a user if multiple factors are
            activated. If multiple options are activated and no preference is set, a challenge
            to choose an MFA option will be returned during sign-in.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserMFAPreference service method.</param>
            
            <returns>The response from the AdminSetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserMFAPreference">REST API Reference for AdminSetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserMFAPreferenceAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest,System.Threading.CancellationToken)">
            <summary>
            The user's multi-factor authentication (MFA) preference, including which MFA options
            are activated, and if any are preferred. Only one factor can be set as preferred.
            The preferred MFA factor will be used to authenticate a user if multiple factors are
            activated. If multiple options are activated and no preference is set, a challenge
            to choose an MFA option will be returned during sign-in.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserMFAPreference service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminSetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserMFAPreference">REST API Reference for AdminSetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserPassword(Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest)">
            <summary>
            Sets the specified user's password in a user pool as an administrator. Works on any
            user. 
            
             
            <para>
            The password can be temporary or permanent. If it is temporary, the user status enters
            the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries to sign in,
            the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code>
            challenge. If the user doesn't sign in before it expires, the user won't be able to
            sign in, and an administrator must reset their password. 
            </para>
             
            <para>
            Once the user has set a new password, or the password is permanent, the user status
            is set to <code>Confirmed</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserPassword service method.</param>
            
            <returns>The response from the AdminSetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserPassword">REST API Reference for AdminSetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserPasswordAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the specified user's password in a user pool as an administrator. Works on any
            user. 
            
             
            <para>
            The password can be temporary or permanent. If it is temporary, the user status enters
            the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries to sign in,
            the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code>
            challenge. If the user doesn't sign in before it expires, the user won't be able to
            sign in, and an administrator must reset their password. 
            </para>
             
            <para>
            Once the user has set a new password, or the password is permanent, the user status
            is set to <code>Confirmed</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminSetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserPassword">REST API Reference for AdminSetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserSettings(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html">AdminSetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings service method.</param>
            
            <returns>The response from the AdminSetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminSetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html">AdminSetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminSetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateAuthEventFeedback(Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest)">
            <summary>
            Provides feedback for an authentication event indicating if it was from a valid user.
            This feedback is used for improving the risk evaluation decision for the user pool
            as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateAuthEventFeedback service method.</param>
            
            <returns>The response from the AdminUpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateAuthEventFeedback">REST API Reference for AdminUpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateAuthEventFeedbackAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest,System.Threading.CancellationToken)">
            <summary>
            Provides feedback for an authentication event indicating if it was from a valid user.
            This feedback is used for improving the risk evaluation decision for the user pool
            as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateAuthEventFeedback service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateAuthEventFeedback">REST API Reference for AdminUpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest)">
            <summary>
            Updates the device status as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</param>
            
            <returns>The response from the AdminUpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the device status as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest)">
            <summary>
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            In addition to updating user attributes, this API can also be used to mark phone and
            email as verified.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</param>
            
            <returns>The response from the AdminUpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            In addition to updating user attributes, this API can also be used to mark phone and
            email as verified.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUserGlobalSignOut(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest)">
            <summary>
            Signs out a user from all devices. You must sign <code>AdminUserGlobalSignOut</code>
            requests with Amazon Web Services credentials. It also invalidates all refresh tokens
            that Amazon Cognito has issued to a user. The user's current access and ID tokens
            remain valid until they expire. By default, access and ID tokens expire one hour after
            they're issued. A user can still use a hosted UI cookie to retrieve new tokens for
            the duration of the cookie validity period of 1 hour.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</param>
            
            <returns>The response from the AdminUserGlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AdminUserGlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Signs out a user from all devices. You must sign <code>AdminUserGlobalSignOut</code>
            requests with Amazon Web Services credentials. It also invalidates all refresh tokens
            that Amazon Cognito has issued to a user. The user's current access and ID tokens
            remain valid until they expire. By default, access and ID tokens expire one hour after
            they're issued. A user can still use a hosted UI cookie to retrieve new tokens for
            the duration of the cookie validity period of 1 hour.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUserGlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AssociateSoftwareToken(Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest)">
            <summary>
            Begins setup of time-based one-time password (TOTP) multi-factor authentication (MFA)
            for a user, with a unique private key that Amazon Cognito generates and returns in
            the API response. You can authorize an <code>AssociateSoftwareToken</code> request
            with either the user's access token, or a session string from a challenge response
            that you received from Amazon Cognito.
            
             <note> 
            <para>
            Amazon Cognito disassociates an existing software token when you verify the new token
            in a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifySoftwareToken.html">
            VerifySoftwareToken</a> API request. If you don't verify the software token and your
            user pool doesn't require MFA, the user can then authenticate with user name and password
            credentials alone. If your user pool requires TOTP MFA, Amazon Cognito generates an
            <code>MFA_SETUP</code> or <code>SOFTWARE_TOKEN_SETUP</code> challenge each time your
            user signs. Complete setup with <code>AssociateSoftwareToken</code> and <code>VerifySoftwareToken</code>.
            </para>
             
            <para>
            After you set up software token MFA for your user, Amazon Cognito generates a <code>SOFTWARE_TOKEN_MFA</code>
            challenge when they authenticate. Respond to this challenge with your user's TOTP.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateSoftwareToken service method.</param>
            
            <returns>The response from the AssociateSoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AssociateSoftwareToken">REST API Reference for AssociateSoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.AssociateSoftwareTokenAsync(Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Begins setup of time-based one-time password (TOTP) multi-factor authentication (MFA)
            for a user, with a unique private key that Amazon Cognito generates and returns in
            the API response. You can authorize an <code>AssociateSoftwareToken</code> request
            with either the user's access token, or a session string from a challenge response
            that you received from Amazon Cognito.
            
             <note> 
            <para>
            Amazon Cognito disassociates an existing software token when you verify the new token
            in a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifySoftwareToken.html">
            VerifySoftwareToken</a> API request. If you don't verify the software token and your
            user pool doesn't require MFA, the user can then authenticate with user name and password
            credentials alone. If your user pool requires TOTP MFA, Amazon Cognito generates an
            <code>MFA_SETUP</code> or <code>SOFTWARE_TOKEN_SETUP</code> challenge each time your
            user signs. Complete setup with <code>AssociateSoftwareToken</code> and <code>VerifySoftwareToken</code>.
            </para>
             
            <para>
            After you set up software token MFA for your user, Amazon Cognito generates a <code>SOFTWARE_TOKEN_MFA</code>
            challenge when they authenticate. Respond to this challenge with your user's TOTP.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateSoftwareToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateSoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AssociateSoftwareToken">REST API Reference for AssociateSoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ChangePassword(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest)">
            <summary>
            Changes the password for a specified user in a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method.</param>
            
            <returns>The response from the ChangePassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ChangePasswordAsync(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the password for a specified user in a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ChangePassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmDevice(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest)">
            <summary>
            Confirms tracking of the device. This API call is the call that begins device tracking.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice service method.</param>
            
            <returns>The response from the ConfirmDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmDeviceAsync(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Confirms tracking of the device. This API call is the call that begins device tracking.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ConfirmDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmForgotPassword(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest)">
            <summary>
            Allows a user to enter a confirmation code to reset a forgotten password.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword service method.</param>
            
            <returns>The response from the ConfirmForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a user to enter a confirmation code to reset a forgotten password.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ConfirmForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmSignUp(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest)">
            <summary>
            Confirms registration of a new user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp service method.</param>
            
            <returns>The response from the ConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Confirms registration of a new user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateGroup(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest)">
            <summary>
            Creates a new group in the specified user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            
            <returns>The response from the CreateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            This exception is thrown when Amazon Cognito encounters a group that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateGroupAsync(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new group in the specified user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            This exception is thrown when Amazon Cognito encounters a group that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateIdentityProvider(Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest)">
            <summary>
            Creates an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdentityProvider service method.</param>
            
            <returns>The response from the CreateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException">
            This exception is thrown when the provider is already supported by the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateIdentityProvider">REST API Reference for CreateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException">
            This exception is thrown when the provider is already supported by the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateIdentityProvider">REST API Reference for CreateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateResourceServer(Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest)">
            <summary>
            Creates a new OAuth2.0 resource server and defines custom scopes within it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateResourceServer service method.</param>
            
            <returns>The response from the CreateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateResourceServer">REST API Reference for CreateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateResourceServerAsync(Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new OAuth2.0 resource server and defines custom scopes within it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateResourceServer">REST API Reference for CreateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserImportJob(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest)">
            <summary>
            Creates the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob service method.</param>
            
            <returns>The response from the CreateUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPool(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest)">
            <summary>
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPool service method.</param>
            
            <returns>The response from the CreateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolClient(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest)">
            <summary>
            Creates the user pool client.
            
             
            <para>
            When you create a new user pool client, token revocation is automatically activated.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient service method.</param>
            
            <returns>The response from the CreateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the user pool client.
            
             
            <para>
            When you create a new user pool client, token revocation is automatically activated.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolDomain(Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest)">
            <summary>
            Creates a new domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolDomain service method.</param>
            
            <returns>The response from the CreateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolDomain">REST API Reference for CreateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.CreateUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolDomain">REST API Reference for CreateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteGroup(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest)">
            <summary>
            Deletes a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            
            <returns>The response from the DeleteGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteGroupAsync(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteIdentityProvider(Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest)">
            <summary>
            Deletes an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityProvider service method.</param>
            
            <returns>The response from the DeleteIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteIdentityProvider">REST API Reference for DeleteIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteIdentityProvider">REST API Reference for DeleteIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteResourceServer(Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest)">
            <summary>
            Deletes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourceServer service method.</param>
            
            <returns>The response from the DeleteResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteResourceServer">REST API Reference for DeleteResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteResourceServerAsync(Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteResourceServer">REST API Reference for DeleteResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUser(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest)">
            <summary>
            Allows a user to delete himself or herself.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            
            <returns>The response from the DeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a user to delete himself or herself.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest)">
            <summary>
            Deletes the attributes for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes service method.</param>
            
            <returns>The response from the DeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the attributes for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPool(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest)">
            <summary>
            Deletes the specified Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool service method.</param>
            
            <returns>The response from the DeleteUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolClient(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest)">
            <summary>
            Allows the developer to delete the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient service method.</param>
            
            <returns>The response from the DeleteUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Allows the developer to delete the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolDomain(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest)">
            <summary>
            Deletes a domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolDomain service method.</param>
            
            <returns>The response from the DeleteUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolDomain">REST API Reference for DeleteUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DeleteUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolDomain">REST API Reference for DeleteUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeIdentityProvider(Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest)">
            <summary>
            Gets information about a specific IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProvider service method.</param>
            
            <returns>The response from the DescribeIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeIdentityProvider">REST API Reference for DescribeIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a specific IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeIdentityProvider">REST API Reference for DescribeIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeResourceServer(Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest)">
            <summary>
            Describes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourceServer service method.</param>
            
            <returns>The response from the DescribeResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeResourceServer">REST API Reference for DescribeResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeResourceServerAsync(Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeResourceServer">REST API Reference for DescribeResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeRiskConfiguration(Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest)">
            <summary>
            Describes the risk configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRiskConfiguration service method.</param>
            
            <returns>The response from the DescribeRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeRiskConfiguration">REST API Reference for DescribeRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeRiskConfigurationAsync(Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the risk configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRiskConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeRiskConfiguration">REST API Reference for DescribeRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserImportJob(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest)">
            <summary>
            Describes the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob service method.</param>
            
            <returns>The response from the DescribeUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPool(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest)">
            <summary>
            Returns the configuration information and metadata of the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool service method.</param>
            
            <returns>The response from the DescribeUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the configuration information and metadata of the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolClient(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest)">
            <summary>
            Client method for returning the configuration information and metadata of the specified
            user pool app client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient service method.</param>
            
            <returns>The response from the DescribeUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Client method for returning the configuration information and metadata of the specified
            user pool app client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolDomain(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest)">
            <summary>
            Gets information about a domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolDomain service method.</param>
            
            <returns>The response from the DescribeUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolDomain">REST API Reference for DescribeUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.DescribeUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolDomain">REST API Reference for DescribeUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgetDevice(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest)">
            <summary>
            Forgets the specified device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgetDevice service method.</param>
            
            <returns>The response from the ForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Forgets the specified device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgotPassword(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest)">
            <summary>
            Calling this API causes a message to be sent to the end user with a confirmation code
            that is required to change the user's password. For the <code>Username</code> parameter,
            you can use the username or user alias. The method used to send the confirmation code
            is sent according to the specified AccountRecoverySetting. For more information, see
            <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html">Recovering
            User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>. If neither a verified
            phone number nor a verified email exists, an <code>InvalidParameterException</code>
            is thrown. To use the confirmation code for resetting the password, call <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html">ConfirmForgotPassword</a>.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgotPassword service method.</param>
            
            <returns>The response from the ForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Calling this API causes a message to be sent to the end user with a confirmation code
            that is required to change the user's password. For the <code>Username</code> parameter,
            you can use the username or user alias. The method used to send the confirmation code
            is sent according to the specified AccountRecoverySetting. For more information, see
            <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html">Recovering
            User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>. If neither a verified
            phone number nor a verified email exists, an <code>InvalidParameterException</code>
            is thrown. To use the confirmation code for resetting the password, call <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html">ConfirmForgotPassword</a>.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgotPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetCSVHeader(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest)">
            <summary>
            Gets the header information for the comma-separated value (CSV) file to be used as
            input for the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader service method.</param>
            
            <returns>The response from the GetCSVHeader service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetCSVHeaderAsync(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the header information for the comma-separated value (CSV) file to be used as
            input for the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCSVHeader service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetDevice(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest)">
            <summary>
            Gets the device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            
            <returns>The response from the GetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetDeviceAsync(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetGroup(Amazon.CognitoIdentityProvider.Model.GetGroupRequest)">
            <summary>
            Gets a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroup service method.</param>
            
            <returns>The response from the GetGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetGroupAsync(Amazon.CognitoIdentityProvider.Model.GetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetIdentityProviderByIdentifier(Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest)">
            <summary>
            Gets the specified IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityProviderByIdentifier service method.</param>
            
            <returns>The response from the GetIdentityProviderByIdentifier service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetIdentityProviderByIdentifier">REST API Reference for GetIdentityProviderByIdentifier Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetIdentityProviderByIdentifierAsync(Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityProviderByIdentifier service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdentityProviderByIdentifier service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetIdentityProviderByIdentifier">REST API Reference for GetIdentityProviderByIdentifier Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetSigningCertificate(Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest)">
            <summary>
            This method takes a user pool ID, and returns the signing certificate. The issued
            certificate is valid for 10 years from the date of issue.
            
             
            <para>
            Amazon Cognito issues and assigns a new signing certificate annually. This process
            returns a new value in the response to <code>GetSigningCertificate</code>, but doesn't
            invalidate the original certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningCertificate service method.</param>
            
            <returns>The response from the GetSigningCertificate service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetSigningCertificate">REST API Reference for GetSigningCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetSigningCertificateAsync(Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            This method takes a user pool ID, and returns the signing certificate. The issued
            certificate is valid for 10 years from the date of issue.
            
             
            <para>
            Amazon Cognito issues and assigns a new signing certificate annually. This process
            returns a new value in the response to <code>GetSigningCertificate</code>, but doesn't
            invalidate the original certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSigningCertificate service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetSigningCertificate">REST API Reference for GetSigningCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUICustomization(Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest)">
            <summary>
            Gets the user interface (UI) Customization information for a particular app client's
            app UI, if any such information exists for the client. If nothing is set for the particular
            client, but there is an existing pool level customization (the app <code>clientId</code>
            is <code>ALL</code>), then that information is returned. If nothing is present, then
            an empty shape is returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUICustomization service method.</param>
            
            <returns>The response from the GetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUICustomization">REST API Reference for GetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUICustomizationAsync(Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the user interface (UI) Customization information for a particular app client's
            app UI, if any such information exists for the client. If nothing is set for the particular
            client, but there is an existing pool level customization (the app <code>clientId</code>
            is <code>ALL</code>), then that information is returned. If nothing is present, then
            an empty shape is returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUICustomization service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUICustomization">REST API Reference for GetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUser(Amazon.CognitoIdentityProvider.Model.GetUserRequest)">
            <summary>
            Gets the user attributes and metadata for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUser service method.</param>
            
            <returns>The response from the GetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserAsync(Amazon.CognitoIdentityProvider.Model.GetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the user attributes and metadata for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserAttributeVerificationCode(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest)">
            <summary>
            Generates a user attribute verification code for the specified attribute name. Sends
            a message to a user with a code that they must return in a VerifyUserAttribute request.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</param>
            
            <returns>The response from the GetUserAttributeVerificationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserAttributeVerificationCodeAsync(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a user attribute verification code for the specified attribute name. Sends
            a message to a user with a code that they must return in a VerifyUserAttribute request.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUserAttributeVerificationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserPoolMfaConfig(Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest)">
            <summary>
            Gets the user pool multi-factor authentication (MFA) configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserPoolMfaConfig service method.</param>
            
            <returns>The response from the GetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserPoolMfaConfig">REST API Reference for GetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GetUserPoolMfaConfigAsync(Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the user pool multi-factor authentication (MFA) configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserPoolMfaConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserPoolMfaConfig">REST API Reference for GetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GlobalSignOut(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest)">
            <summary>
            Signs out users from all devices. It also invalidates all refresh tokens that Amazon
            Cognito has issued to a user. A user can still use a hosted UI cookie to retrieve
            new tokens for the duration of the 1-hour cookie validity period.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut service method.</param>
            
            <returns>The response from the GlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.GlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Signs out users from all devices. It also invalidates all refresh tokens that Amazon
            Cognito has issued to a user. A user can still use a hosted UI cookie to retrieve
            new tokens for the duration of the 1-hour cookie validity period.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.InitiateAuth(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest)">
            <summary>
            Initiates sign-in for a user in the Amazon Cognito user directory. You can't sign
            in a user with a federated IdP with <code>InitiateAuth</code>. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation.html">
            Adding user pool sign-in through a third party</a>.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateAuth service method.</param>
            
            <returns>The response from the InitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.InitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates sign-in for a user in the Amazon Cognito user directory. You can't sign
            in a user with a federated IdP with <code>InitiateAuth</code>. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation.html">
            Adding user pool sign-in through a third party</a>.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateAuth service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListDevices(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest)">
            <summary>
            Lists the sign-in devices that Amazon Cognito has registered to the current user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListDevicesAsync(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the sign-in devices that Amazon Cognito has registered to the current user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListGroups(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
            <summary>
            Lists the groups associated with a user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            
            <returns>The response from the ListGroups service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListGroupsAsync(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the groups associated with a user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroups service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListIdentityProviders(Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest)">
            <summary>
            Lists information about all IdPs for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListIdentityProvidersAsync(Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about all IdPs for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListResourceServers(Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest)">
            <summary>
            Lists the resource servers for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceServers service method.</param>
            
            <returns>The response from the ListResourceServers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListResourceServers">REST API Reference for ListResourceServers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListResourceServersAsync(Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource servers for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceServers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResourceServers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListResourceServers">REST API Reference for ListResourceServers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListTagsForResource(Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest)">
            <summary>
            Lists the tags that are assigned to an Amazon Cognito user pool.
            
             
            <para>
            A tag is a label that you can apply to user pools to categorize and manage them in
            different ways, such as by purpose, owner, environment, or other criteria.
            </para>
             
            <para>
            You can use this action up to 10 times per second, per account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListTagsForResourceAsync(Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags that are assigned to an Amazon Cognito user pool.
            
             
            <para>
            A tag is a label that you can apply to user pools to categorize and manage them in
            different ways, such as by purpose, owner, environment, or other criteria.
            </para>
             
            <para>
            You can use this action up to 10 times per second, per account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserImportJobs(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest)">
            <summary>
            Lists the user import jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs service method.</param>
            
            <returns>The response from the ListUserImportJobs service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserImportJobsAsync(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user import jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserImportJobs service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPoolClients(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
            <summary>
            Lists the clients that have been created for the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients service method.</param>
            
            <returns>The response from the ListUserPoolClients service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPoolClientsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the clients that have been created for the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserPoolClients service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPools(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
            <summary>
            Lists the user pools associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPools service method.</param>
            
            <returns>The response from the ListUserPools service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUserPoolsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user pools associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPools service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserPools service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsers(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
            <summary>
            Lists the users in the Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            
            <returns>The response from the ListUsers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsersAsync(Amazon.CognitoIdentityProvider.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users in the Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsersInGroup(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
            <summary>
            Lists the users in the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup service method.</param>
            
            <returns>The response from the ListUsersInGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ListUsersInGroupAsync(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users in the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsersInGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ResendConfirmationCode(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest)">
            <summary>
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode service method.</param>
            
            <returns>The response from the ResendConfirmationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.ResendConfirmationCodeAsync(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResendConfirmationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.RespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest)">
            <summary>
            Responds to the authentication challenge.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge service method.</param>
            
            <returns>The response from the RespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.RespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Responds to the authentication challenge.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.RevokeToken(Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest)">
            <summary>
            Revokes all of the access tokens generated by, and at the same time as, the specified
            refresh token. After a token is revoked, you can't use the revoked token to access
            Amazon Cognito user APIs, or to authorize access to your resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeToken service method.</param>
            
            <returns>The response from the RevokeToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnauthorizedException">
            Exception that is thrown when the request isn't authorized. This can happen due to
            an invalid access token in the request.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException">
            Exception that is thrown when you attempt to perform an operation that isn't enabled
            for the user pool client.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException">
            Exception that is thrown when an unsupported token is passed to an operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RevokeToken">REST API Reference for RevokeToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.RevokeTokenAsync(Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes all of the access tokens generated by, and at the same time as, the specified
            refresh token. After a token is revoked, you can't use the revoked token to access
            Amazon Cognito user APIs, or to authorize access to your resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnauthorizedException">
            Exception that is thrown when the request isn't authorized. This can happen due to
            an invalid access token in the request.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException">
            Exception that is thrown when you attempt to perform an operation that isn't enabled
            for the user pool client.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException">
            Exception that is thrown when an unsupported token is passed to an operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RevokeToken">REST API Reference for RevokeToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetRiskConfiguration(Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest)">
            <summary>
            Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code>
            or <code>ClientId</code>, pass null values for all four configuration types.
            
             
            <para>
            To activate Amazon Cognito advanced security features, update the user pool to include
            the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetRiskConfiguration service method.</param>
            
            <returns>The response from the SetRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetRiskConfiguration">REST API Reference for SetRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetRiskConfigurationAsync(Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code>
            or <code>ClientId</code>, pass null values for all four configuration types.
            
             
            <para>
            To activate Amazon Cognito advanced security features, update the user pool to include
            the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetRiskConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetRiskConfiguration">REST API Reference for SetRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUICustomization(Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest)">
            <summary>
            Sets the user interface (UI) customization information for a user pool's built-in
            app UI.
            
             
            <para>
            You can specify app UI customization settings for a single client (with a specific
            <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to
            <code>ALL</code>). If you specify <code>ALL</code>, the default configuration is used
            for every client that has no previously set UI customization. If you specify UI customization
            settings for a particular client, it will no longer return to the <code>ALL</code>
            configuration.
            </para>
             <note> 
            <para>
            To use this API, your user pool must have a domain associated with it. Otherwise,
            there is no place to host the app's pages, and the service will throw an error.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUICustomization service method.</param>
            
            <returns>The response from the SetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUICustomization">REST API Reference for SetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUICustomizationAsync(Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the user interface (UI) customization information for a user pool's built-in
            app UI.
            
             
            <para>
            You can specify app UI customization settings for a single client (with a specific
            <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to
            <code>ALL</code>). If you specify <code>ALL</code>, the default configuration is used
            for every client that has no previously set UI customization. If you specify UI customization
            settings for a particular client, it will no longer return to the <code>ALL</code>
            configuration.
            </para>
             <note> 
            <para>
            To use this API, your user pool must have a domain associated with it. Otherwise,
            there is no place to host the app's pages, and the service will throw an error.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUICustomization service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUICustomization">REST API Reference for SetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserMFAPreference(Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest)">
            <summary>
            Set the user's multi-factor authentication (MFA) method preference, including which
            MFA factors are activated and if any are preferred. Only one factor can be set as
            preferred. The preferred MFA factor will be used to authenticate a user if multiple
            factors are activated. If multiple options are activated and no preference is set,
            a challenge to choose an MFA option will be returned during sign-in. If an MFA type
            is activated for a user, the user will be prompted for MFA during all sign-in attempts
            unless device tracking is turned on and the device has been trusted. If you want MFA
            to be applied selectively based on the assessed risk level of sign-in attempts, deactivate
            MFA for users and turn on Adaptive Authentication for the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserMFAPreference service method.</param>
            
            <returns>The response from the SetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserMFAPreference">REST API Reference for SetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserMFAPreferenceAsync(Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest,System.Threading.CancellationToken)">
            <summary>
            Set the user's multi-factor authentication (MFA) method preference, including which
            MFA factors are activated and if any are preferred. Only one factor can be set as
            preferred. The preferred MFA factor will be used to authenticate a user if multiple
            factors are activated. If multiple options are activated and no preference is set,
            a challenge to choose an MFA option will be returned during sign-in. If an MFA type
            is activated for a user, the user will be prompted for MFA during all sign-in attempts
            unless device tracking is turned on and the device has been trusted. If you want MFA
            to be applied selectively based on the assessed risk level of sign-in attempts, deactivate
            MFA for users and turn on Adaptive Authentication for the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserMFAPreference service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserMFAPreference">REST API Reference for SetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserPoolMfaConfig(Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest)">
            <summary>
            Sets the user pool multi-factor authentication (MFA) configuration.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserPoolMfaConfig service method.</param>
            
            <returns>The response from the SetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserPoolMfaConfig">REST API Reference for SetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserPoolMfaConfigAsync(Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the user pool multi-factor authentication (MFA) configuration.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserPoolMfaConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserPoolMfaConfig">REST API Reference for SetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserSettings(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html">SetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserSettings service method.</param>
            
            <returns>The response from the SetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html">SetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SignUp(Amazon.CognitoIdentityProvider.Model.SignUpRequest)">
            <summary>
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignUp service method.</param>
            
            <returns>The response from the SignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.SignUpAsync(Amazon.CognitoIdentityProvider.Model.SignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignUp service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StartUserImportJob(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest)">
            <summary>
            Starts the user import.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob service method.</param>
            
            <returns>The response from the StartUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StartUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the user import.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StopUserImportJob(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest)">
            <summary>
            Stops the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob service method.</param>
            
            <returns>The response from the StopUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.StopUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Stops the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.TagResource(Amazon.CognitoIdentityProvider.Model.TagResourceRequest)">
            <summary>
            Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            
             
            <para>
            Each tag consists of a key and value, both of which you define. A key is a general
            category for more specific values. For example, if you have two versions of a user
            pool, one for testing and another for production, you might assign an <code>Environment</code>
            tag key to both user pools. The value of this key might be <code>Test</code> for one
            user pool, and <code>Production</code> for the other.
            </para>
             
            <para>
            Tags are useful for cost tracking and access control. You can activate your tags so
            that they appear on the Billing and Cost Management console, where you can track the
            costs associated with your user pools. In an Identity and Access Management policy,
            you can constrain permissions for user pools based on specific tags or tag values.
            </para>
             
            <para>
            You can use this action up to 5 times per second, per account. A user pool can have
            as many as 50 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.TagResourceAsync(Amazon.CognitoIdentityProvider.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            
             
            <para>
            Each tag consists of a key and value, both of which you define. A key is a general
            category for more specific values. For example, if you have two versions of a user
            pool, one for testing and another for production, you might assign an <code>Environment</code>
            tag key to both user pools. The value of this key might be <code>Test</code> for one
            user pool, and <code>Production</code> for the other.
            </para>
             
            <para>
            Tags are useful for cost tracking and access control. You can activate your tags so
            that they appear on the Billing and Cost Management console, where you can track the
            costs associated with your user pools. In an Identity and Access Management policy,
            you can constrain permissions for user pools based on specific tags or tag values.
            </para>
             
            <para>
            You can use this action up to 5 times per second, per account. A user pool can have
            as many as 50 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UntagResource(Amazon.CognitoIdentityProvider.Model.UntagResourceRequest)">
            <summary>
            Removes the specified tags from an Amazon Cognito user pool. You can use this action
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UntagResourceAsync(Amazon.CognitoIdentityProvider.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified tags from an Amazon Cognito user pool. You can use this action
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateAuthEventFeedback(Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest)">
            <summary>
            Provides the feedback for an authentication event, whether it was from a valid user
            or not. This feedback is used for improving the risk evaluation decision for the user
            pool as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAuthEventFeedback service method.</param>
            
            <returns>The response from the UpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateAuthEventFeedback">REST API Reference for UpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateAuthEventFeedbackAsync(Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest,System.Threading.CancellationToken)">
            <summary>
            Provides the feedback for an authentication event, whether it was from a valid user
            or not. This feedback is used for improving the risk evaluation decision for the user
            pool as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAuthEventFeedback service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateAuthEventFeedback">REST API Reference for UpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest)">
            <summary>
            Updates the device status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus service method.</param>
            
            <returns>The response from the UpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the device status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateGroup(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest)">
            <summary>
            Updates the specified group with the specified attributes.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            
            <returns>The response from the UpdateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateGroupAsync(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified group with the specified attributes.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateIdentityProvider(Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest)">
            <summary>
            Updates IdP information for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProvider service method.</param>
            
            <returns>The response from the UpdateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateIdentityProvider">REST API Reference for UpdateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates IdP information for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateIdentityProvider">REST API Reference for UpdateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateResourceServer(Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest)">
            <summary>
            Updates the name and scopes of resource server. All other fields are read-only.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it is set to the default value.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResourceServer service method.</param>
            
            <returns>The response from the UpdateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateResourceServer">REST API Reference for UpdateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateResourceServerAsync(Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the name and scopes of resource server. All other fields are read-only.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it is set to the default value.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateResourceServer">REST API Reference for UpdateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest)">
            <summary>
            Allows a user to update a specific attribute (one at a time).
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes service method.</param>
            
            <returns>The response from the UpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a user to update a specific attribute (one at a time).
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPool(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest)">
            <summary>
            Updates the specified user pool with the specified attributes. You can get a list
            of the current user pool settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html">DescribeUserPool</a>.
            If you don't provide a value for an attribute, it will be set to the default value.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool service method.</param>
            
            <returns>The response from the UpdateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified user pool with the specified attributes. You can get a list
            of the current user pool settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html">DescribeUserPool</a>.
            If you don't provide a value for an attribute, it will be set to the default value.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolClient(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest)">
            <summary>
            Updates the specified user pool app client with the specified attributes. You can
            get a list of the current user pool app client settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html">DescribeUserPoolClient</a>.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para>
             </important> 
            <para>
            You can also use this operation to enable token revocation for user pool clients.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient service method.</param>
            
            <returns>The response from the UpdateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified user pool app client with the specified attributes. You can
            get a list of the current user pool app client settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html">DescribeUserPoolClient</a>.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para>
             </important> 
            <para>
            You can also use this operation to enable token revocation for user pool clients.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolDomain(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest)">
            <summary>
            Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your
            user pool.
            
             
            <para>
            You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate
            to Amazon Cognito. You can't use it to change the domain for a user pool.
            </para>
             
            <para>
            A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up
            and sign-in pages for your application. When you set up a custom domain, you provide
            a certificate that you manage with Certificate Manager (ACM). When necessary, you
            can use this operation to change the certificate that you applied to your custom domain.
            </para>
             
            <para>
            Usually, this is unnecessary following routine certificate renewal with ACM. When
            you renew your existing certificate in ACM, the ARN for your certificate remains the
            same, and your custom domain uses the new certificate automatically.
            </para>
             
            <para>
            However, if you replace your existing certificate with a new one, ACM gives the new
            certificate a new ARN. To apply the new certificate to your custom domain, you must
            provide this ARN to Amazon Cognito.
            </para>
             
            <para>
            When you add your new certificate in ACM, you must choose US East (N. Virginia) as
            the Amazon Web Services Region.
            </para>
             
            <para>
            After you submit your request, Amazon Cognito requires up to 1 hour to distribute
            your new certificate to your custom domain.
            </para>
             
            <para>
            For more information about adding a custom domain to your user pool, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html">Using
            Your Own Domain for the Hosted UI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolDomain service method.</param>
            
            <returns>The response from the UpdateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolDomain">REST API Reference for UpdateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.UpdateUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your
            user pool.
            
             
            <para>
            You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate
            to Amazon Cognito. You can't use it to change the domain for a user pool.
            </para>
             
            <para>
            A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up
            and sign-in pages for your application. When you set up a custom domain, you provide
            a certificate that you manage with Certificate Manager (ACM). When necessary, you
            can use this operation to change the certificate that you applied to your custom domain.
            </para>
             
            <para>
            Usually, this is unnecessary following routine certificate renewal with ACM. When
            you renew your existing certificate in ACM, the ARN for your certificate remains the
            same, and your custom domain uses the new certificate automatically.
            </para>
             
            <para>
            However, if you replace your existing certificate with a new one, ACM gives the new
            certificate a new ARN. To apply the new certificate to your custom domain, you must
            provide this ARN to Amazon Cognito.
            </para>
             
            <para>
            When you add your new certificate in ACM, you must choose US East (N. Virginia) as
            the Amazon Web Services Region.
            </para>
             
            <para>
            After you submit your request, Amazon Cognito requires up to 1 hour to distribute
            your new certificate to your custom domain.
            </para>
             
            <para>
            For more information about adding a custom domain to your user pool, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html">Using
            Your Own Domain for the Hosted UI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolDomain">REST API Reference for UpdateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.VerifySoftwareToken(Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest)">
            <summary>
            Use this API to register a user's entered time-based one-time password (TOTP) code
            and mark the user's software token MFA status as "verified" if successful. The request
            takes an access token or a session string, but not both.
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifySoftwareToken service method.</param>
            
            <returns>The response from the VerifySoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException">
            This exception is thrown when there is a code mismatch and the service fails to configure
            the software token TOTP multi-factor authentication (MFA).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifySoftwareToken">REST API Reference for VerifySoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.VerifySoftwareTokenAsync(Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Use this API to register a user's entered time-based one-time password (TOTP) code
            and mark the user's software token MFA status as "verified" if successful. The request
            takes an access token or a session string, but not both.
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifySoftwareToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifySoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException">
            This exception is thrown when there is a code mismatch and the service fails to configure
            the software token TOTP multi-factor authentication (MFA).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifySoftwareToken">REST API Reference for VerifySoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.VerifyUserAttribute(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest)">
            <summary>
            Verifies the specified user attributes in the user pool.
            
             
            <para>
             If your user pool requires verification before Amazon Cognito updates the attribute
            value, VerifyUserAttribute updates the affected attribute to its pending value. For
            more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserAttributeUpdateSettingsType.html">
            UserAttributeUpdateSettingsType</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute service method.</param>
            
            <returns>The response from the VerifyUserAttribute service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.AmazonCognitoIdentityProviderClient.VerifyUserAttributeAsync(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies the specified user attributes in the user pool.
            
             
            <para>
             If your user pool requires verification before Amazon Cognito updates the attribute
            value, VerifyUserAttribute updates the affected attribute to its pending value. For
            more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserAttributeUpdateSettingsType.html">
            UserAttributeUpdateSettingsType</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyUserAttribute service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
        <member name="T:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider">
             <summary>
             Interface for accessing CognitoIdentityProvider
            
             Using the Amazon Cognito user pools API, you can create a user pool to manage directories
             and users. You can authenticate a user to obtain tokens related to user identity and
             access policies.
             
              
             <para>
             This API reference provides information about user pools in Amazon Cognito user pools.
             </para>
              
             <para>
             For more information, see the <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html">Amazon
             Cognito Documentation</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AddCustomAttributes(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest)">
            <summary>
            Adds additional user attributes to the user pool schema.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes service method.</param>
            
            <returns>The response from the AddCustomAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AddCustomAttributesAsync(Amazon.CognitoIdentityProvider.Model.AddCustomAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Adds additional user attributes to the user pool schema.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddCustomAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddCustomAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AddCustomAttributes">REST API Reference for AddCustomAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminAddUserToGroup(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest)">
            <summary>
            Adds the specified user to the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup service method.</param>
            
            <returns>The response from the AdminAddUserToGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminAddUserToGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminAddUserToGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Adds the specified user to the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminAddUserToGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminAddUserToGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminAddUserToGroup">REST API Reference for AdminAddUserToGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminConfirmSignUp(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest)">
            <summary>
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp service method.</param>
            
            <returns>The response from the AdminConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.AdminConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Confirms user registration as an admin without using a confirmation code. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminConfirmSignUp service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminConfirmSignUp">REST API Reference for AdminConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminCreateUser(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest)">
            <summary>
            Creates a new user in the specified user pool.
            
             
            <para>
            If <code>MessageAction</code> isn't set, the default is to send a welcome message
            via email or phone (SMS).
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            This message is based on a template that you configured in your call to create or
            update a user pool. This template includes your custom sign-up instructions and placeholders
            for user name and temporary password.
            </para>
             
            <para>
            Alternatively, you can call <code>AdminCreateUser</code> with <code>SUPPRESS</code>
            for the <code>MessageAction</code> parameter, and Amazon Cognito won't send any email.
            
            </para>
             
            <para>
            In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until
            they sign in and change their password.
            </para>
             
            <para>
             <code>AdminCreateUser</code> requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser service method.</param>
            
            <returns>The response from the AdminCreateUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            The request failed because the user is in an unsupported state.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminCreateUserAsync(Amazon.CognitoIdentityProvider.Model.AdminCreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new user in the specified user pool.
            
             
            <para>
            If <code>MessageAction</code> isn't set, the default is to send a welcome message
            via email or phone (SMS).
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            This message is based on a template that you configured in your call to create or
            update a user pool. This template includes your custom sign-up instructions and placeholders
            for user name and temporary password.
            </para>
             
            <para>
            Alternatively, you can call <code>AdminCreateUser</code> with <code>SUPPRESS</code>
            for the <code>MessageAction</code> parameter, and Amazon Cognito won't send any email.
            
            </para>
             
            <para>
            In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until
            they sign in and change their password.
            </para>
             
            <para>
             <code>AdminCreateUser</code> requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminCreateUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminCreateUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedUserStateException">
            The request failed because the user is in an unsupported state.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUser">REST API Reference for AdminCreateUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUser(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest)">
            <summary>
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser service method.</param>
            
            <returns>The response from the AdminDeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUser">REST API Reference for AdminDeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest)">
            <summary>
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</param>
            
            <returns>The response from the AdminDeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminDeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the user attributes in a user pool as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDeleteUserAttributes">REST API Reference for AdminDeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDisableProviderForUser(Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest)">
            <summary>
            Prevents the user from signing in with the specified external (SAML or social) identity
            provider (IdP). If the user that you want to deactivate is a Amazon Cognito user pools
            native username + password user, they can't use their password to sign in. If the
            user to deactivate is a linked external IdP user, any link between that user and an
            existing user is removed. When the external user signs in again, and the user is no
            longer attached to the previously linked <code>DestinationUser</code>, the user must
            create a new user account. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html">AdminLinkProviderForUser</a>.
            
             
            <para>
            This action is enabled only for admin access and requires developer credentials.
            </para>
             
            <para>
            The <code>ProviderName</code> must match the value specified when creating an IdP
            for the pool. 
            </para>
             
            <para>
            To deactivate a native username + password user, the <code>ProviderName</code> value
            must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>.
            The <code>ProviderAttributeValue</code> must be the name that is used in the user
            pool for the user.
            </para>
             
            <para>
            The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code>
            for social IdPs. The <code>ProviderAttributeValue</code> must always be the exact
            subject that was used when the user was originally linked as a source user.
            </para>
             
            <para>
            For de-linking a SAML identity, there are two scenarios. If the linked identity has
            not yet been used to sign in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code>
            must be the same values that were used for the <code>SourceUser</code> when the identities
            were originally linked using <code> AdminLinkProviderForUser</code> call. (If the
            linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>,
            the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code>
            must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must
            be the subject of the SAML assertion.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableProviderForUser service method.</param>
            
            <returns>The response from the AdminDisableProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableProviderForUser">REST API Reference for AdminDisableProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDisableProviderForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDisableProviderForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Prevents the user from signing in with the specified external (SAML or social) identity
            provider (IdP). If the user that you want to deactivate is a Amazon Cognito user pools
            native username + password user, they can't use their password to sign in. If the
            user to deactivate is a linked external IdP user, any link between that user and an
            existing user is removed. When the external user signs in again, and the user is no
            longer attached to the previously linked <code>DestinationUser</code>, the user must
            create a new user account. See <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html">AdminLinkProviderForUser</a>.
            
             
            <para>
            This action is enabled only for admin access and requires developer credentials.
            </para>
             
            <para>
            The <code>ProviderName</code> must match the value specified when creating an IdP
            for the pool. 
            </para>
             
            <para>
            To deactivate a native username + password user, the <code>ProviderName</code> value
            must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>.
            The <code>ProviderAttributeValue</code> must be the name that is used in the user
            pool for the user.
            </para>
             
            <para>
            The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code>
            for social IdPs. The <code>ProviderAttributeValue</code> must always be the exact
            subject that was used when the user was originally linked as a source user.
            </para>
             
            <para>
            For de-linking a SAML identity, there are two scenarios. If the linked identity has
            not yet been used to sign in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code>
            must be the same values that were used for the <code>SourceUser</code> when the identities
            were originally linked using <code> AdminLinkProviderForUser</code> call. (If the
            linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>,
            the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code>
            must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must
            be the subject of the SAML assertion.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableProviderForUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDisableProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableProviderForUser">REST API Reference for AdminDisableProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDisableUser(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest)">
            <summary>
            Deactivates a user and revokes all access tokens for the user. A deactivated user
            can't sign in, but still appears in the responses to <code>GetUser</code> and <code>ListUsers</code>
            API requests.
            
             
            <para>
            You must make this API request with Amazon Web Services credentials that have <code>cognito-idp:AdminDisableUser</code>
            permissions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser service method.</param>
            
            <returns>The response from the AdminDisableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminDisableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminDisableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Deactivates a user and revokes all access tokens for the user. A deactivated user
            can't sign in, but still appears in the responses to <code>GetUser</code> and <code>ListUsers</code>
            API requests.
            
             
            <para>
            You must make this API request with Amazon Web Services credentials that have <code>cognito-idp:AdminDisableUser</code>
            permissions.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminDisableUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminDisableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminDisableUser">REST API Reference for AdminDisableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminEnableUser(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest)">
            <summary>
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser service method.</param>
            
            <returns>The response from the AdminEnableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminEnableUserAsync(Amazon.CognitoIdentityProvider.Model.AdminEnableUserRequest,System.Threading.CancellationToken)">
            <summary>
            Enables the specified user as an administrator. Works on any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminEnableUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminEnableUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminEnableUser">REST API Reference for AdminEnableUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminForgetDevice(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest)">
            <summary>
            Forgets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice service method.</param>
            
            <returns>The response from the AdminForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Forgets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminForgetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminForgetDevice">REST API Reference for AdminForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetDevice(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest)">
            <summary>
            Gets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice service method.</param>
            
            <returns>The response from the AdminGetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetDeviceAsync(Amazon.CognitoIdentityProvider.Model.AdminGetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the device, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminGetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetDevice">REST API Reference for AdminGetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetUser(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest)">
            <summary>
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetUser service method.</param>
            
            <returns>The response from the AdminGetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminGetUserAsync(Amazon.CognitoIdentityProvider.Model.AdminGetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified user by user name in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminGetUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminGetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminGetUser">REST API Reference for AdminGetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminInitiateAuth(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest)">
            <summary>
            Initiates the authentication flow, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth service method.</param>
            
            <returns>The response from the AdminInitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminInitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.AdminInitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the authentication flow, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminInitiateAuth service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminInitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminInitiateAuth">REST API Reference for AdminInitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminLinkProviderForUser(Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest)">
            <summary>
            Links an existing user account in a user pool (<code>DestinationUser</code>) to an
            identity from an external IdP (<code>SourceUser</code>) based on a specified attribute
            name and value from the external IdP. This allows you to create a link from the existing
            user account to an external federated user identity that has not yet been used to
            sign in. You can then use the federated user identity to sign in as the existing user
            account. 
            
             
            <para>
             For example, if there is an existing user with a username and password, this API
            links that user to a federated user identity. When the user signs in with a federated
            user identity, they sign in as the existing user account.
            </para>
             <note> 
            <para>
            The maximum number of federated identities linked to a user is five.
            </para>
             </note> <important> 
            <para>
            Because this API allows a user with an external federated identity to sign in as an
            existing user in the user pool, it is critical that it only be used with external
            IdPs and provider attributes that have been trusted by the application owner.
            </para>
             </important> 
            <para>
            This action is administrative and requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminLinkProviderForUser service method.</param>
            
            <returns>The response from the AdminLinkProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminLinkProviderForUser">REST API Reference for AdminLinkProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminLinkProviderForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminLinkProviderForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Links an existing user account in a user pool (<code>DestinationUser</code>) to an
            identity from an external IdP (<code>SourceUser</code>) based on a specified attribute
            name and value from the external IdP. This allows you to create a link from the existing
            user account to an external federated user identity that has not yet been used to
            sign in. You can then use the federated user identity to sign in as the existing user
            account. 
            
             
            <para>
             For example, if there is an existing user with a username and password, this API
            links that user to a federated user identity. When the user signs in with a federated
            user identity, they sign in as the existing user account.
            </para>
             <note> 
            <para>
            The maximum number of federated identities linked to a user is five.
            </para>
             </note> <important> 
            <para>
            Because this API allows a user with an external federated identity to sign in as an
            existing user in the user pool, it is critical that it only be used with external
            IdPs and provider attributes that have been trusted by the application owner.
            </para>
             </important> 
            <para>
            This action is administrative and requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminLinkProviderForUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminLinkProviderForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminLinkProviderForUser">REST API Reference for AdminLinkProviderForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListDevices(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest)">
            <summary>
            Lists devices, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListDevices service method.</param>
            
            <returns>The response from the AdminListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListDevicesAsync(Amazon.CognitoIdentityProvider.Model.AdminListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists devices, as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListDevices">REST API Reference for AdminListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListGroupsForUser(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest)">
            <summary>
            Lists the groups that the user belongs to.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser service method.</param>
            
            <returns>The response from the AdminListGroupsForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListGroupsForUserAsync(Amazon.CognitoIdentityProvider.Model.AdminListGroupsForUserRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the groups that the user belongs to.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListGroupsForUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminListGroupsForUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListGroupsForUser">REST API Reference for AdminListGroupsForUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListUserAuthEvents(Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest)">
            <summary>
            A history of user activity and any risks detected as part of Amazon Cognito advanced
            security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListUserAuthEvents service method.</param>
            
            <returns>The response from the AdminListUserAuthEvents service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListUserAuthEvents">REST API Reference for AdminListUserAuthEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminListUserAuthEventsAsync(Amazon.CognitoIdentityProvider.Model.AdminListUserAuthEventsRequest,System.Threading.CancellationToken)">
            <summary>
            A history of user activity and any risks detected as part of Amazon Cognito advanced
            security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminListUserAuthEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminListUserAuthEvents service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminListUserAuthEvents">REST API Reference for AdminListUserAuthEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRemoveUserFromGroup(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest)">
            <summary>
            Removes the specified user from the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</param>
            
            <returns>The response from the AdminRemoveUserFromGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRemoveUserFromGroupAsync(Amazon.CognitoIdentityProvider.Model.AdminRemoveUserFromGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified user from the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRemoveUserFromGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminRemoveUserFromGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRemoveUserFromGroup">REST API Reference for AdminRemoveUserFromGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminResetUserPassword(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest)">
            <summary>
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword service method.</param>
            
            <returns>The response from the AdminResetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminResetUserPasswordAsync(Amazon.CognitoIdentityProvider.Model.AdminResetUserPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Resets the specified user's password in a user pool as an administrator. Works on
            any user.
            
             
            <para>
            When a developer calls this API, the current password is invalidated, so it must be
            changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException
            exception back and should direct the user down the flow to reset the password, which
            is the same as the forgot password flow. In addition, if the user pool has phone verification
            selected and a verified phone number exists for the user, or if email verification
            is selected and a verified email exists for the user, calling this API will also result
            in sending a message to the end user with the code to change their password.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminResetUserPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminResetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminResetUserPassword">REST API Reference for AdminResetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest)">
            <summary>
            Responds to an authentication challenge, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</param>
            
            <returns>The response from the AdminRespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminRespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.AdminRespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Responds to an authentication challenge, as an administrator.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminRespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge">REST API Reference for AdminRespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserMFAPreference(Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest)">
            <summary>
            The user's multi-factor authentication (MFA) preference, including which MFA options
            are activated, and if any are preferred. Only one factor can be set as preferred.
            The preferred MFA factor will be used to authenticate a user if multiple factors are
            activated. If multiple options are activated and no preference is set, a challenge
            to choose an MFA option will be returned during sign-in.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserMFAPreference service method.</param>
            
            <returns>The response from the AdminSetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserMFAPreference">REST API Reference for AdminSetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserMFAPreferenceAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserMFAPreferenceRequest,System.Threading.CancellationToken)">
            <summary>
            The user's multi-factor authentication (MFA) preference, including which MFA options
            are activated, and if any are preferred. Only one factor can be set as preferred.
            The preferred MFA factor will be used to authenticate a user if multiple factors are
            activated. If multiple options are activated and no preference is set, a challenge
            to choose an MFA option will be returned during sign-in.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserMFAPreference service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminSetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserMFAPreference">REST API Reference for AdminSetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserPassword(Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest)">
            <summary>
            Sets the specified user's password in a user pool as an administrator. Works on any
            user. 
            
             
            <para>
            The password can be temporary or permanent. If it is temporary, the user status enters
            the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries to sign in,
            the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code>
            challenge. If the user doesn't sign in before it expires, the user won't be able to
            sign in, and an administrator must reset their password. 
            </para>
             
            <para>
            Once the user has set a new password, or the password is permanent, the user status
            is set to <code>Confirmed</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserPassword service method.</param>
            
            <returns>The response from the AdminSetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserPassword">REST API Reference for AdminSetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserPasswordAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the specified user's password in a user pool as an administrator. Works on any
            user. 
            
             
            <para>
            The password can be temporary or permanent. If it is temporary, the user status enters
            the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries to sign in,
            the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code>
            challenge. If the user doesn't sign in before it expires, the user won't be able to
            sign in, and an administrator must reset their password. 
            </para>
             
            <para>
            Once the user has set a new password, or the password is permanent, the user status
            is set to <code>Confirmed</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminSetUserPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserPassword">REST API Reference for AdminSetUserPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserSettings(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html">AdminSetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings service method.</param>
            
            <returns>The response from the AdminSetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminSetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.AdminSetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html">AdminSetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminSetUserSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminSetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminSetUserSettings">REST API Reference for AdminSetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateAuthEventFeedback(Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest)">
            <summary>
            Provides feedback for an authentication event indicating if it was from a valid user.
            This feedback is used for improving the risk evaluation decision for the user pool
            as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateAuthEventFeedback service method.</param>
            
            <returns>The response from the AdminUpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateAuthEventFeedback">REST API Reference for AdminUpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateAuthEventFeedbackAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateAuthEventFeedbackRequest,System.Threading.CancellationToken)">
            <summary>
            Provides feedback for an authentication event indicating if it was from a valid user.
            This feedback is used for improving the risk evaluation decision for the user pool
            as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateAuthEventFeedback service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateAuthEventFeedback">REST API Reference for AdminUpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest)">
            <summary>
            Updates the device status as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</param>
            
            <returns>The response from the AdminUpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the device status as an administrator.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateDeviceStatus">REST API Reference for AdminUpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest)">
            <summary>
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            In addition to updating user attributes, this API can also be used to mark phone and
            email as verified.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</param>
            
            <returns>The response from the AdminUpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified user's attributes, including developer attributes, as an administrator.
            Works on any user.
            
             
            <para>
            For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
            name.
            </para>
             
            <para>
            In addition to updating user attributes, this API can also be used to mark phone and
            email as verified.
            </para>
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note> 
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUpdateUserAttributes">REST API Reference for AdminUpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUserGlobalSignOut(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest)">
            <summary>
            Signs out a user from all devices. You must sign <code>AdminUserGlobalSignOut</code>
            requests with Amazon Web Services credentials. It also invalidates all refresh tokens
            that Amazon Cognito has issued to a user. The user's current access and ID tokens
            remain valid until they expire. By default, access and ID tokens expire one hour after
            they're issued. A user can still use a hosted UI cookie to retrieve new tokens for
            the duration of the cookie validity period of 1 hour.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</param>
            
            <returns>The response from the AdminUserGlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AdminUserGlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.AdminUserGlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Signs out a user from all devices. You must sign <code>AdminUserGlobalSignOut</code>
            requests with Amazon Web Services credentials. It also invalidates all refresh tokens
            that Amazon Cognito has issued to a user. The user's current access and ID tokens
            remain valid until they expire. By default, access and ID tokens expire one hour after
            they're issued. A user can still use a hosted UI cookie to retrieve new tokens for
            the duration of the cookie validity period of 1 hour.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AdminUserGlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminUserGlobalSignOut">REST API Reference for AdminUserGlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AssociateSoftwareToken(Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest)">
            <summary>
            Begins setup of time-based one-time password (TOTP) multi-factor authentication (MFA)
            for a user, with a unique private key that Amazon Cognito generates and returns in
            the API response. You can authorize an <code>AssociateSoftwareToken</code> request
            with either the user's access token, or a session string from a challenge response
            that you received from Amazon Cognito.
            
             <note> 
            <para>
            Amazon Cognito disassociates an existing software token when you verify the new token
            in a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifySoftwareToken.html">
            VerifySoftwareToken</a> API request. If you don't verify the software token and your
            user pool doesn't require MFA, the user can then authenticate with user name and password
            credentials alone. If your user pool requires TOTP MFA, Amazon Cognito generates an
            <code>MFA_SETUP</code> or <code>SOFTWARE_TOKEN_SETUP</code> challenge each time your
            user signs. Complete setup with <code>AssociateSoftwareToken</code> and <code>VerifySoftwareToken</code>.
            </para>
             
            <para>
            After you set up software token MFA for your user, Amazon Cognito generates a <code>SOFTWARE_TOKEN_MFA</code>
            challenge when they authenticate. Respond to this challenge with your user's TOTP.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateSoftwareToken service method.</param>
            
            <returns>The response from the AssociateSoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AssociateSoftwareToken">REST API Reference for AssociateSoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.AssociateSoftwareTokenAsync(Amazon.CognitoIdentityProvider.Model.AssociateSoftwareTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Begins setup of time-based one-time password (TOTP) multi-factor authentication (MFA)
            for a user, with a unique private key that Amazon Cognito generates and returns in
            the API response. You can authorize an <code>AssociateSoftwareToken</code> request
            with either the user's access token, or a session string from a challenge response
            that you received from Amazon Cognito.
            
             <note> 
            <para>
            Amazon Cognito disassociates an existing software token when you verify the new token
            in a <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifySoftwareToken.html">
            VerifySoftwareToken</a> API request. If you don't verify the software token and your
            user pool doesn't require MFA, the user can then authenticate with user name and password
            credentials alone. If your user pool requires TOTP MFA, Amazon Cognito generates an
            <code>MFA_SETUP</code> or <code>SOFTWARE_TOKEN_SETUP</code> challenge each time your
            user signs. Complete setup with <code>AssociateSoftwareToken</code> and <code>VerifySoftwareToken</code>.
            </para>
             
            <para>
            After you set up software token MFA for your user, Amazon Cognito generates a <code>SOFTWARE_TOKEN_MFA</code>
            challenge when they authenticate. Respond to this challenge with your user's TOTP.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateSoftwareToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateSoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AssociateSoftwareToken">REST API Reference for AssociateSoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ChangePassword(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest)">
            <summary>
            Changes the password for a specified user in a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method.</param>
            
            <returns>The response from the ChangePassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ChangePasswordAsync(Amazon.CognitoIdentityProvider.Model.ChangePasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Changes the password for a specified user in a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ChangePassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ChangePassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChangePassword">REST API Reference for ChangePassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmDevice(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest)">
            <summary>
            Confirms tracking of the device. This API call is the call that begins device tracking.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice service method.</param>
            
            <returns>The response from the ConfirmDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmDeviceAsync(Amazon.CognitoIdentityProvider.Model.ConfirmDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Confirms tracking of the device. This API call is the call that begins device tracking.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ConfirmDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmDevice">REST API Reference for ConfirmDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmForgotPassword(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest)">
            <summary>
            Allows a user to enter a confirmation code to reset a forgotten password.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword service method.</param>
            
            <returns>The response from the ConfirmForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a user to enter a confirmation code to reset a forgotten password.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmForgotPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ConfirmForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmForgotPassword">REST API Reference for ConfirmForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmSignUp(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest)">
            <summary>
            Confirms registration of a new user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp service method.</param>
            
            <returns>The response from the ConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ConfirmSignUpAsync(Amazon.CognitoIdentityProvider.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Confirms registration of a new user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConfirmSignUp service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ConfirmSignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyFailedAttemptsException">
            This exception is thrown when the user has made too many failed attempts for a given
            action, such as sign-in.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ConfirmSignUp">REST API Reference for ConfirmSignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateGroup(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest)">
            <summary>
            Creates a new group in the specified user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            
            <returns>The response from the CreateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            This exception is thrown when Amazon Cognito encounters a group that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateGroupAsync(Amazon.CognitoIdentityProvider.Model.CreateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new group in the specified user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.GroupExistsException">
            This exception is thrown when Amazon Cognito encounters a group that already exists
            in the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateGroup">REST API Reference for CreateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateIdentityProvider(Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest)">
            <summary>
            Creates an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdentityProvider service method.</param>
            
            <returns>The response from the CreateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException">
            This exception is thrown when the provider is already supported by the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateIdentityProvider">REST API Reference for CreateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.CreateIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.DuplicateProviderException">
            This exception is thrown when the provider is already supported by the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateIdentityProvider">REST API Reference for CreateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateResourceServer(Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest)">
            <summary>
            Creates a new OAuth2.0 resource server and defines custom scopes within it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateResourceServer service method.</param>
            
            <returns>The response from the CreateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateResourceServer">REST API Reference for CreateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateResourceServerAsync(Amazon.CognitoIdentityProvider.Model.CreateResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new OAuth2.0 resource server and defines custom scopes within it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateResourceServer">REST API Reference for CreateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserImportJob(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest)">
            <summary>
            Creates the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob service method.</param>
            
            <returns>The response from the CreateUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.CreateUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserImportJob">REST API Reference for CreateUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPool(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest)">
            <summary>
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPool service method.</param>
            
            <returns>The response from the CreateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Cognito user pool and sets the password policy for the pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPool">REST API Reference for CreateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolClient(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest)">
            <summary>
            Creates the user pool client.
            
             
            <para>
            When you create a new user pool client, token revocation is automatically activated.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient service method.</param>
            
            <returns>The response from the CreateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the user pool client.
            
             
            <para>
            When you create a new user pool client, token revocation is automatically activated.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolClient">REST API Reference for CreateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolDomain(Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest)">
            <summary>
            Creates a new domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolDomain service method.</param>
            
            <returns>The response from the CreateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolDomain">REST API Reference for CreateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.CreateUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.CreateUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CreateUserPoolDomain">REST API Reference for CreateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteGroup(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest)">
            <summary>
            Deletes a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            
            <returns>The response from the DeleteGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteGroupAsync(Amazon.CognitoIdentityProvider.Model.DeleteGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteGroup">REST API Reference for DeleteGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteIdentityProvider(Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest)">
            <summary>
            Deletes an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityProvider service method.</param>
            
            <returns>The response from the DeleteIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteIdentityProvider">REST API Reference for DeleteIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.DeleteIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an IdP for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteIdentityProvider">REST API Reference for DeleteIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteResourceServer(Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest)">
            <summary>
            Deletes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourceServer service method.</param>
            
            <returns>The response from the DeleteResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteResourceServer">REST API Reference for DeleteResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteResourceServerAsync(Amazon.CognitoIdentityProvider.Model.DeleteResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteResourceServer">REST API Reference for DeleteResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUser(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest)">
            <summary>
            Allows a user to delete himself or herself.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            
            <returns>The response from the DeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a user to delete himself or herself.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUser">REST API Reference for DeleteUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserAttributes(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest)">
            <summary>
            Deletes the attributes for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes service method.</param>
            
            <returns>The response from the DeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the attributes for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserAttributes">REST API Reference for DeleteUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPool(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest)">
            <summary>
            Deletes the specified Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool service method.</param>
            
            <returns>The response from the DeleteUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPool">REST API Reference for DeleteUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolClient(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest)">
            <summary>
            Allows the developer to delete the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient service method.</param>
            
            <returns>The response from the DeleteUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Allows the developer to delete the user pool client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolClient">REST API Reference for DeleteUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolDomain(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest)">
            <summary>
            Deletes a domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolDomain service method.</param>
            
            <returns>The response from the DeleteUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolDomain">REST API Reference for DeleteUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DeleteUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.DeleteUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a domain for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeleteUserPoolDomain">REST API Reference for DeleteUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeIdentityProvider(Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest)">
            <summary>
            Gets information about a specific IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProvider service method.</param>
            
            <returns>The response from the DescribeIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeIdentityProvider">REST API Reference for DescribeIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.DescribeIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a specific IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeIdentityProvider">REST API Reference for DescribeIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeResourceServer(Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest)">
            <summary>
            Describes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourceServer service method.</param>
            
            <returns>The response from the DescribeResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeResourceServer">REST API Reference for DescribeResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeResourceServerAsync(Amazon.CognitoIdentityProvider.Model.DescribeResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeResourceServer">REST API Reference for DescribeResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeRiskConfiguration(Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest)">
            <summary>
            Describes the risk configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRiskConfiguration service method.</param>
            
            <returns>The response from the DescribeRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeRiskConfiguration">REST API Reference for DescribeRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeRiskConfigurationAsync(Amazon.CognitoIdentityProvider.Model.DescribeRiskConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the risk configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeRiskConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeRiskConfiguration">REST API Reference for DescribeRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserImportJob(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest)">
            <summary>
            Describes the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob service method.</param>
            
            <returns>The response from the DescribeUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Describes the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserImportJob">REST API Reference for DescribeUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPool(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest)">
            <summary>
            Returns the configuration information and metadata of the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool service method.</param>
            
            <returns>The response from the DescribeUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the configuration information and metadata of the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPool">REST API Reference for DescribeUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolClient(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest)">
            <summary>
            Client method for returning the configuration information and metadata of the specified
            user pool app client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient service method.</param>
            
            <returns>The response from the DescribeUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Client method for returning the configuration information and metadata of the specified
            user pool app client.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolClient">REST API Reference for DescribeUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolDomain(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest)">
            <summary>
            Gets information about a domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolDomain service method.</param>
            
            <returns>The response from the DescribeUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolDomain">REST API Reference for DescribeUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.DescribeUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.DescribeUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DescribeUserPoolDomain">REST API Reference for DescribeUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgetDevice(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest)">
            <summary>
            Forgets the specified device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgetDevice service method.</param>
            
            <returns>The response from the ForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgetDeviceAsync(Amazon.CognitoIdentityProvider.Model.ForgetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Forgets the specified device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ForgetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgetDevice">REST API Reference for ForgetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgotPassword(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest)">
            <summary>
            Calling this API causes a message to be sent to the end user with a confirmation code
            that is required to change the user's password. For the <code>Username</code> parameter,
            you can use the username or user alias. The method used to send the confirmation code
            is sent according to the specified AccountRecoverySetting. For more information, see
            <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html">Recovering
            User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>. If neither a verified
            phone number nor a verified email exists, an <code>InvalidParameterException</code>
            is thrown. To use the confirmation code for resetting the password, call <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html">ConfirmForgotPassword</a>.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgotPassword service method.</param>
            
            <returns>The response from the ForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ForgotPasswordAsync(Amazon.CognitoIdentityProvider.Model.ForgotPasswordRequest,System.Threading.CancellationToken)">
            <summary>
            Calling this API causes a message to be sent to the end user with a confirmation code
            that is required to change the user's password. For the <code>Username</code> parameter,
            you can use the username or user alias. The method used to send the confirmation code
            is sent according to the specified AccountRecoverySetting. For more information, see
            <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html">Recovering
            User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>. If neither a verified
            phone number nor a verified email exists, an <code>InvalidParameterException</code>
            is thrown. To use the confirmation code for resetting the password, call <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html">ConfirmForgotPassword</a>.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ForgotPassword service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ForgotPassword service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ForgotPassword">REST API Reference for ForgotPassword Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetCSVHeader(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest)">
            <summary>
            Gets the header information for the comma-separated value (CSV) file to be used as
            input for the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader service method.</param>
            
            <returns>The response from the GetCSVHeader service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetCSVHeaderAsync(Amazon.CognitoIdentityProvider.Model.GetCSVHeaderRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the header information for the comma-separated value (CSV) file to be used as
            input for the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCSVHeader service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCSVHeader service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetCSVHeader">REST API Reference for GetCSVHeader Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetDevice(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest)">
            <summary>
            Gets the device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            
            <returns>The response from the GetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetDeviceAsync(Amazon.CognitoIdentityProvider.Model.GetDeviceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the device.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDevice service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetDevice">REST API Reference for GetDevice Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetGroup(Amazon.CognitoIdentityProvider.Model.GetGroupRequest)">
            <summary>
            Gets a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroup service method.</param>
            
            <returns>The response from the GetGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetGroupAsync(Amazon.CognitoIdentityProvider.Model.GetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetGroup">REST API Reference for GetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetIdentityProviderByIdentifier(Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest)">
            <summary>
            Gets the specified IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityProviderByIdentifier service method.</param>
            
            <returns>The response from the GetIdentityProviderByIdentifier service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetIdentityProviderByIdentifier">REST API Reference for GetIdentityProviderByIdentifier Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetIdentityProviderByIdentifierAsync(Amazon.CognitoIdentityProvider.Model.GetIdentityProviderByIdentifierRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the specified IdP.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityProviderByIdentifier service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIdentityProviderByIdentifier service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetIdentityProviderByIdentifier">REST API Reference for GetIdentityProviderByIdentifier Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetSigningCertificate(Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest)">
            <summary>
            This method takes a user pool ID, and returns the signing certificate. The issued
            certificate is valid for 10 years from the date of issue.
            
             
            <para>
            Amazon Cognito issues and assigns a new signing certificate annually. This process
            returns a new value in the response to <code>GetSigningCertificate</code>, but doesn't
            invalidate the original certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningCertificate service method.</param>
            
            <returns>The response from the GetSigningCertificate service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetSigningCertificate">REST API Reference for GetSigningCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetSigningCertificateAsync(Amazon.CognitoIdentityProvider.Model.GetSigningCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            This method takes a user pool ID, and returns the signing certificate. The issued
            certificate is valid for 10 years from the date of issue.
            
             
            <para>
            Amazon Cognito issues and assigns a new signing certificate annually. This process
            returns a new value in the response to <code>GetSigningCertificate</code>, but doesn't
            invalidate the original certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSigningCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetSigningCertificate service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetSigningCertificate">REST API Reference for GetSigningCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUICustomization(Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest)">
            <summary>
            Gets the user interface (UI) Customization information for a particular app client's
            app UI, if any such information exists for the client. If nothing is set for the particular
            client, but there is an existing pool level customization (the app <code>clientId</code>
            is <code>ALL</code>), then that information is returned. If nothing is present, then
            an empty shape is returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUICustomization service method.</param>
            
            <returns>The response from the GetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUICustomization">REST API Reference for GetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUICustomizationAsync(Amazon.CognitoIdentityProvider.Model.GetUICustomizationRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the user interface (UI) Customization information for a particular app client's
            app UI, if any such information exists for the client. If nothing is set for the particular
            client, but there is an existing pool level customization (the app <code>clientId</code>
            is <code>ALL</code>), then that information is returned. If nothing is present, then
            an empty shape is returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUICustomization service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUICustomization">REST API Reference for GetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUser(Amazon.CognitoIdentityProvider.Model.GetUserRequest)">
            <summary>
            Gets the user attributes and metadata for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUser service method.</param>
            
            <returns>The response from the GetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserAsync(Amazon.CognitoIdentityProvider.Model.GetUserRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the user attributes and metadata for a user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUser service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUser service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUser">REST API Reference for GetUser Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserAttributeVerificationCode(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest)">
            <summary>
            Generates a user attribute verification code for the specified attribute name. Sends
            a message to a user with a code that they must return in a VerifyUserAttribute request.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</param>
            
            <returns>The response from the GetUserAttributeVerificationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserAttributeVerificationCodeAsync(Amazon.CognitoIdentityProvider.Model.GetUserAttributeVerificationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Generates a user attribute verification code for the specified attribute name. Sends
            a message to a user with a code that they must return in a VerifyUserAttribute request.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUserAttributeVerificationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserAttributeVerificationCode">REST API Reference for GetUserAttributeVerificationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserPoolMfaConfig(Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest)">
            <summary>
            Gets the user pool multi-factor authentication (MFA) configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserPoolMfaConfig service method.</param>
            
            <returns>The response from the GetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserPoolMfaConfig">REST API Reference for GetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GetUserPoolMfaConfigAsync(Amazon.CognitoIdentityProvider.Model.GetUserPoolMfaConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the user pool multi-factor authentication (MFA) configuration.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUserPoolMfaConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GetUserPoolMfaConfig">REST API Reference for GetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GlobalSignOut(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest)">
            <summary>
            Signs out users from all devices. It also invalidates all refresh tokens that Amazon
            Cognito has issued to a user. A user can still use a hosted UI cookie to retrieve
            new tokens for the duration of the 1-hour cookie validity period.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut service method.</param>
            
            <returns>The response from the GlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.GlobalSignOutAsync(Amazon.CognitoIdentityProvider.Model.GlobalSignOutRequest,System.Threading.CancellationToken)">
            <summary>
            Signs out users from all devices. It also invalidates all refresh tokens that Amazon
            Cognito has issued to a user. A user can still use a hosted UI cookie to retrieve
            new tokens for the duration of the 1-hour cookie validity period.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GlobalSignOut service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GlobalSignOut service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GlobalSignOut">REST API Reference for GlobalSignOut Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.InitiateAuth(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest)">
            <summary>
            Initiates sign-in for a user in the Amazon Cognito user directory. You can't sign
            in a user with a federated IdP with <code>InitiateAuth</code>. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation.html">
            Adding user pool sign-in through a third party</a>.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateAuth service method.</param>
            
            <returns>The response from the InitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.InitiateAuthAsync(Amazon.CognitoIdentityProvider.Model.InitiateAuthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates sign-in for a user in the Amazon Cognito user directory. You can't sign
            in a user with a federated IdP with <code>InitiateAuth</code>. For more information,
            see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation.html">
            Adding user pool sign-in through a third party</a>.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the InitiateAuth service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the InitiateAuth service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/InitiateAuth">REST API Reference for InitiateAuth Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListDevices(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest)">
            <summary>
            Lists the sign-in devices that Amazon Cognito has registered to the current user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListDevicesAsync(Amazon.CognitoIdentityProvider.Model.ListDevicesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the sign-in devices that Amazon Cognito has registered to the current user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDevices service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListDevices">REST API Reference for ListDevices Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListGroups(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest)">
            <summary>
            Lists the groups associated with a user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            
            <returns>The response from the ListGroups service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListGroupsAsync(Amazon.CognitoIdentityProvider.Model.ListGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the groups associated with a user pool.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListGroups service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListGroups">REST API Reference for ListGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListIdentityProviders(Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest)">
            <summary>
            Lists information about all IdPs for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListIdentityProvidersAsync(Amazon.CognitoIdentityProvider.Model.ListIdentityProvidersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about all IdPs for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityProviders service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListIdentityProviders service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListIdentityProviders">REST API Reference for ListIdentityProviders Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListResourceServers(Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest)">
            <summary>
            Lists the resource servers for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceServers service method.</param>
            
            <returns>The response from the ListResourceServers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListResourceServers">REST API Reference for ListResourceServers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListResourceServersAsync(Amazon.CognitoIdentityProvider.Model.ListResourceServersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resource servers for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResourceServers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResourceServers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListResourceServers">REST API Reference for ListResourceServers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListTagsForResource(Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest)">
            <summary>
            Lists the tags that are assigned to an Amazon Cognito user pool.
            
             
            <para>
            A tag is a label that you can apply to user pools to categorize and manage them in
            different ways, such as by purpose, owner, environment, or other criteria.
            </para>
             
            <para>
            You can use this action up to 10 times per second, per account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListTagsForResourceAsync(Amazon.CognitoIdentityProvider.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags that are assigned to an Amazon Cognito user pool.
            
             
            <para>
            A tag is a label that you can apply to user pools to categorize and manage them in
            different ways, such as by purpose, owner, environment, or other criteria.
            </para>
             
            <para>
            You can use this action up to 10 times per second, per account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserImportJobs(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest)">
            <summary>
            Lists the user import jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs service method.</param>
            
            <returns>The response from the ListUserImportJobs service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserImportJobsAsync(Amazon.CognitoIdentityProvider.Model.ListUserImportJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user import jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserImportJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserImportJobs service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserImportJobs">REST API Reference for ListUserImportJobs Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPoolClients(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest)">
            <summary>
            Lists the clients that have been created for the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients service method.</param>
            
            <returns>The response from the ListUserPoolClients service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPoolClientsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolClientsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the clients that have been created for the specified user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPoolClients service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserPoolClients service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPoolClients">REST API Reference for ListUserPoolClients Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPools(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest)">
            <summary>
            Lists the user pools associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPools service method.</param>
            
            <returns>The response from the ListUserPools service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUserPoolsAsync(Amazon.CognitoIdentityProvider.Model.ListUserPoolsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the user pools associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUserPools service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUserPools service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUserPools">REST API Reference for ListUserPools Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsers(Amazon.CognitoIdentityProvider.Model.ListUsersRequest)">
            <summary>
            Lists the users in the Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            
            <returns>The response from the ListUsers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsersAsync(Amazon.CognitoIdentityProvider.Model.ListUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users in the Amazon Cognito user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsers service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsers">REST API Reference for ListUsers Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsersInGroup(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest)">
            <summary>
            Lists the users in the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup service method.</param>
            
            <returns>The response from the ListUsersInGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ListUsersInGroupAsync(Amazon.CognitoIdentityProvider.Model.ListUsersInGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the users in the specified group.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUsersInGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUsersInGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ListUsersInGroup">REST API Reference for ListUsersInGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ResendConfirmationCode(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest)">
            <summary>
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode service method.</param>
            
            <returns>The response from the ResendConfirmationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.ResendConfirmationCodeAsync(Amazon.CognitoIdentityProvider.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Resends the confirmation (for confirmation of registration) to a specific user in
            the user pool.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendConfirmationCode service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResendConfirmationCode service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResendConfirmationCode">REST API Reference for ResendConfirmationCode Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.RespondToAuthChallenge(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest)">
            <summary>
            Responds to the authentication challenge.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge service method.</param>
            
            <returns>The response from the RespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.RespondToAuthChallengeAsync(Amazon.CognitoIdentityProvider.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)">
            <summary>
            Responds to the authentication challenge.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondToAuthChallenge service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondToAuthChallenge service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.MFAMethodNotFoundException">
            This exception is thrown when Amazon Cognito can't find a multi-factor authentication
            (MFA) method.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RespondToAuthChallenge">REST API Reference for RespondToAuthChallenge Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.RevokeToken(Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest)">
            <summary>
            Revokes all of the access tokens generated by, and at the same time as, the specified
            refresh token. After a token is revoked, you can't use the revoked token to access
            Amazon Cognito user APIs, or to authorize access to your resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeToken service method.</param>
            
            <returns>The response from the RevokeToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnauthorizedException">
            Exception that is thrown when the request isn't authorized. This can happen due to
            an invalid access token in the request.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException">
            Exception that is thrown when you attempt to perform an operation that isn't enabled
            for the user pool client.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException">
            Exception that is thrown when an unsupported token is passed to an operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RevokeToken">REST API Reference for RevokeToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.RevokeTokenAsync(Amazon.CognitoIdentityProvider.Model.RevokeTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes all of the access tokens generated by, and at the same time as, the specified
            refresh token. After a token is revoked, you can't use the revoked token to access
            Amazon Cognito user APIs, or to authorize access to your resource server.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnauthorizedException">
            Exception that is thrown when the request isn't authorized. This can happen due to
            an invalid access token in the request.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedOperationException">
            Exception that is thrown when you attempt to perform an operation that isn't enabled
            for the user pool client.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedTokenTypeException">
            Exception that is thrown when an unsupported token is passed to an operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RevokeToken">REST API Reference for RevokeToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetRiskConfiguration(Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest)">
            <summary>
            Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code>
            or <code>ClientId</code>, pass null values for all four configuration types.
            
             
            <para>
            To activate Amazon Cognito advanced security features, update the user pool to include
            the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetRiskConfiguration service method.</param>
            
            <returns>The response from the SetRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetRiskConfiguration">REST API Reference for SetRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetRiskConfigurationAsync(Amazon.CognitoIdentityProvider.Model.SetRiskConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code>
            or <code>ClientId</code>, pass null values for all four configuration types.
            
             
            <para>
            To activate Amazon Cognito advanced security features, update the user pool to include
            the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetRiskConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetRiskConfiguration service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetRiskConfiguration">REST API Reference for SetRiskConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUICustomization(Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest)">
            <summary>
            Sets the user interface (UI) customization information for a user pool's built-in
            app UI.
            
             
            <para>
            You can specify app UI customization settings for a single client (with a specific
            <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to
            <code>ALL</code>). If you specify <code>ALL</code>, the default configuration is used
            for every client that has no previously set UI customization. If you specify UI customization
            settings for a particular client, it will no longer return to the <code>ALL</code>
            configuration.
            </para>
             <note> 
            <para>
            To use this API, your user pool must have a domain associated with it. Otherwise,
            there is no place to host the app's pages, and the service will throw an error.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUICustomization service method.</param>
            
            <returns>The response from the SetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUICustomization">REST API Reference for SetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUICustomizationAsync(Amazon.CognitoIdentityProvider.Model.SetUICustomizationRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the user interface (UI) customization information for a user pool's built-in
            app UI.
            
             
            <para>
            You can specify app UI customization settings for a single client (with a specific
            <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to
            <code>ALL</code>). If you specify <code>ALL</code>, the default configuration is used
            for every client that has no previously set UI customization. If you specify UI customization
            settings for a particular client, it will no longer return to the <code>ALL</code>
            configuration.
            </para>
             <note> 
            <para>
            To use this API, your user pool must have a domain associated with it. Otherwise,
            there is no place to host the app's pages, and the service will throw an error.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUICustomization service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUICustomization service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUICustomization">REST API Reference for SetUICustomization Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserMFAPreference(Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest)">
            <summary>
            Set the user's multi-factor authentication (MFA) method preference, including which
            MFA factors are activated and if any are preferred. Only one factor can be set as
            preferred. The preferred MFA factor will be used to authenticate a user if multiple
            factors are activated. If multiple options are activated and no preference is set,
            a challenge to choose an MFA option will be returned during sign-in. If an MFA type
            is activated for a user, the user will be prompted for MFA during all sign-in attempts
            unless device tracking is turned on and the device has been trusted. If you want MFA
            to be applied selectively based on the assessed risk level of sign-in attempts, deactivate
            MFA for users and turn on Adaptive Authentication for the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserMFAPreference service method.</param>
            
            <returns>The response from the SetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserMFAPreference">REST API Reference for SetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserMFAPreferenceAsync(Amazon.CognitoIdentityProvider.Model.SetUserMFAPreferenceRequest,System.Threading.CancellationToken)">
            <summary>
            Set the user's multi-factor authentication (MFA) method preference, including which
            MFA factors are activated and if any are preferred. Only one factor can be set as
            preferred. The preferred MFA factor will be used to authenticate a user if multiple
            factors are activated. If multiple options are activated and no preference is set,
            a challenge to choose an MFA option will be returned during sign-in. If an MFA type
            is activated for a user, the user will be prompted for MFA during all sign-in attempts
            unless device tracking is turned on and the device has been trusted. If you want MFA
            to be applied selectively based on the assessed risk level of sign-in attempts, deactivate
            MFA for users and turn on Adaptive Authentication for the user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserMFAPreference service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUserMFAPreference service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserMFAPreference">REST API Reference for SetUserMFAPreference Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserPoolMfaConfig(Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest)">
            <summary>
            Sets the user pool multi-factor authentication (MFA) configuration.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserPoolMfaConfig service method.</param>
            
            <returns>The response from the SetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserPoolMfaConfig">REST API Reference for SetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserPoolMfaConfigAsync(Amazon.CognitoIdentityProvider.Model.SetUserPoolMfaConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the user pool multi-factor authentication (MFA) configuration.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserPoolMfaConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUserPoolMfaConfig service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserPoolMfaConfig">REST API Reference for SetUserPoolMfaConfig Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserSettings(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html">SetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserSettings service method.</param>
            
            <returns>The response from the SetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SetUserSettingsAsync(Amazon.CognitoIdentityProvider.Model.SetUserSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            <i>This action is no longer supported.</i> You can use it to configure only SMS MFA.
            You can't use it to configure time-based one-time password (TOTP) software token MFA.
            To configure either type of MFA, use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html">SetUserMFAPreference</a>
            instead.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetUserSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SetUserSettings service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SetUserSettings">REST API Reference for SetUserSettings Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SignUp(Amazon.CognitoIdentityProvider.Model.SignUpRequest)">
            <summary>
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignUp service method.</param>
            
            <returns>The response from the SignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.SignUpAsync(Amazon.CognitoIdentityProvider.Model.SignUpRequest,System.Threading.CancellationToken)">
            <summary>
            Registers the user in the specified user pool and creates a user name, password, and
            user attributes.
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignUp service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SignUp service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidPasswordException">
            This exception is thrown when Amazon Cognito encounters an invalid password.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UsernameExistsException">
            This exception is thrown when Amazon Cognito encounters a user name that already exists
            in the user pool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SignUp">REST API Reference for SignUp Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StartUserImportJob(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest)">
            <summary>
            Starts the user import.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob service method.</param>
            
            <returns>The response from the StartUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StartUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StartUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Starts the user import.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StartUserImportJob">REST API Reference for StartUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StopUserImportJob(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest)">
            <summary>
            Stops the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob service method.</param>
            
            <returns>The response from the StopUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.StopUserImportJobAsync(Amazon.CognitoIdentityProvider.Model.StopUserImportJobRequest,System.Threading.CancellationToken)">
            <summary>
            Stops the user import job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopUserImportJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopUserImportJob service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PreconditionNotMetException">
            This exception is thrown when a precondition is not met.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StopUserImportJob">REST API Reference for StopUserImportJob Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.TagResource(Amazon.CognitoIdentityProvider.Model.TagResourceRequest)">
            <summary>
            Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            
             
            <para>
            Each tag consists of a key and value, both of which you define. A key is a general
            category for more specific values. For example, if you have two versions of a user
            pool, one for testing and another for production, you might assign an <code>Environment</code>
            tag key to both user pools. The value of this key might be <code>Test</code> for one
            user pool, and <code>Production</code> for the other.
            </para>
             
            <para>
            Tags are useful for cost tracking and access control. You can activate your tags so
            that they appear on the Billing and Cost Management console, where you can track the
            costs associated with your user pools. In an Identity and Access Management policy,
            you can constrain permissions for user pools based on specific tags or tag values.
            </para>
             
            <para>
            You can use this action up to 5 times per second, per account. A user pool can have
            as many as 50 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.TagResourceAsync(Amazon.CognitoIdentityProvider.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can
            use to categorize and manage user pools in different ways, such as by purpose, owner,
            environment, or other criteria.
            
             
            <para>
            Each tag consists of a key and value, both of which you define. A key is a general
            category for more specific values. For example, if you have two versions of a user
            pool, one for testing and another for production, you might assign an <code>Environment</code>
            tag key to both user pools. The value of this key might be <code>Test</code> for one
            user pool, and <code>Production</code> for the other.
            </para>
             
            <para>
            Tags are useful for cost tracking and access control. You can activate your tags so
            that they appear on the Billing and Cost Management console, where you can track the
            costs associated with your user pools. In an Identity and Access Management policy,
            you can constrain permissions for user pools based on specific tags or tag values.
            </para>
             
            <para>
            You can use this action up to 5 times per second, per account. A user pool can have
            as many as 50 tags.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UntagResource(Amazon.CognitoIdentityProvider.Model.UntagResourceRequest)">
            <summary>
            Removes the specified tags from an Amazon Cognito user pool. You can use this action
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UntagResourceAsync(Amazon.CognitoIdentityProvider.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the specified tags from an Amazon Cognito user pool. You can use this action
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateAuthEventFeedback(Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest)">
            <summary>
            Provides the feedback for an authentication event, whether it was from a valid user
            or not. This feedback is used for improving the risk evaluation decision for the user
            pool as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAuthEventFeedback service method.</param>
            
            <returns>The response from the UpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateAuthEventFeedback">REST API Reference for UpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateAuthEventFeedbackAsync(Amazon.CognitoIdentityProvider.Model.UpdateAuthEventFeedbackRequest,System.Threading.CancellationToken)">
            <summary>
            Provides the feedback for an authentication event, whether it was from a valid user
            or not. This feedback is used for improving the risk evaluation decision for the user
            pool as part of Amazon Cognito advanced security.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateAuthEventFeedback service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateAuthEventFeedback service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolAddOnNotEnabledException">
            This exception is thrown when user pool add-ons aren't enabled.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateAuthEventFeedback">REST API Reference for UpdateAuthEventFeedback Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateDeviceStatus(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest)">
            <summary>
            Updates the device status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus service method.</param>
            
            <returns>The response from the UpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateDeviceStatusAsync(Amazon.CognitoIdentityProvider.Model.UpdateDeviceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the device status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDeviceStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDeviceStatus service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateDeviceStatus">REST API Reference for UpdateDeviceStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateGroup(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest)">
            <summary>
            Updates the specified group with the specified attributes.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            
            <returns>The response from the UpdateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateGroupAsync(Amazon.CognitoIdentityProvider.Model.UpdateGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified group with the specified attributes.
            
             
            <para>
            Calling this action requires developer credentials.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateGroup service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateGroup">REST API Reference for UpdateGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateIdentityProvider(Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest)">
            <summary>
            Updates IdP information for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProvider service method.</param>
            
            <returns>The response from the UpdateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateIdentityProvider">REST API Reference for UpdateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateIdentityProviderAsync(Amazon.CognitoIdentityProvider.Model.UpdateIdentityProviderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates IdP information for a user pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityProvider service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateIdentityProvider service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnsupportedIdentityProviderException">
            This exception is thrown when the specified identifier isn't supported.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateIdentityProvider">REST API Reference for UpdateIdentityProvider Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateResourceServer(Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest)">
            <summary>
            Updates the name and scopes of resource server. All other fields are read-only.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it is set to the default value.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResourceServer service method.</param>
            
            <returns>The response from the UpdateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateResourceServer">REST API Reference for UpdateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateResourceServerAsync(Amazon.CognitoIdentityProvider.Model.UpdateResourceServerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the name and scopes of resource server. All other fields are read-only.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it is set to the default value.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResourceServer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateResourceServer service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateResourceServer">REST API Reference for UpdateResourceServer Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserAttributes(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest)">
            <summary>
            Allows a user to update a specific attribute (one at a time).
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes service method.</param>
            
            <returns>The response from the UpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserAttributesAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Allows a user to update a specific attribute (one at a time).
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserAttributes service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeDeliveryFailureException">
            This exception is thrown when a verification code fails to deliver successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidLambdaResponseException">
            This exception is thrown when Amazon Cognito encounters an invalid Lambda response.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UnexpectedLambdaException">
            This exception is thrown when Amazon Cognito encounters an unexpected exception with
            Lambda.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserLambdaValidationException">
            This exception is thrown when the Amazon Cognito service encounters a user validation
            exception with the Lambda service.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserAttributes">REST API Reference for UpdateUserAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPool(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest)">
            <summary>
            Updates the specified user pool with the specified attributes. You can get a list
            of the current user pool settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html">DescribeUserPool</a>.
            If you don't provide a value for an attribute, it will be set to the default value.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool service method.</param>
            
            <returns>The response from the UpdateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified user pool with the specified attributes. You can get a list
            of the current user pool settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html">DescribeUserPool</a>.
            If you don't provide a value for an attribute, it will be set to the default value.
            
            
             <note> 
            <para>
            This action might generate an SMS text message. Starting June 1, 2021, US telecom
            carriers require you to register an origination phone number before you can send SMS
            messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you
            must register a phone number with <a href="https://console.aws.amazon.com/pinpoint/home/">Amazon
            Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise,
            Amazon Cognito users who must receive SMS messages might not be able to sign up, activate
            their accounts, or sign in.
            </para>
             
            <para>
            If you have never used SMS text messages with Amazon Cognito or any other Amazon Web
            Service, Amazon Simple Notification Service might place your account in the SMS sandbox.
            In <i> <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html">sandbox
            mode</a> </i>, you can send messages only to verified phone numbers. After you test
            your app while in the sandbox environment, you can move out of the sandbox and into
            production. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html">
            SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPool service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserPool service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidEmailRoleAccessPolicyException">
            This exception is thrown when Amazon Cognito isn't allowed to use your email identity.
            HTTP status code: 400.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleAccessPolicyException">
            This exception is returned when the role provided for SMS configuration doesn't have
            permission to publish using Amazon SNS.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidSmsRoleTrustRelationshipException">
            This exception is thrown when the trust relationship is not valid for the role provided
            for SMS configuration. This can happen if you don't trust <code>cognito-idp.amazonaws.com</code>
            or the external ID provided in the role does not match what is provided in the SMS
            configuration for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserImportInProgressException">
            This exception is thrown when you're trying to modify a user pool while a user import
            job is in progress for that pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserPoolTaggingException">
            This exception is thrown when a user pool tag can't be set or updated.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPool">REST API Reference for UpdateUserPool Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolClient(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest)">
            <summary>
            Updates the specified user pool app client with the specified attributes. You can
            get a list of the current user pool app client settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html">DescribeUserPoolClient</a>.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para>
             </important> 
            <para>
            You can also use this operation to enable token revocation for user pool clients.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient service method.</param>
            
            <returns>The response from the UpdateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolClientAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolClientRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the specified user pool app client with the specified attributes. You can
            get a list of the current user pool app client settings using <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html">DescribeUserPoolClient</a>.
            
             <important> 
            <para>
            If you don't provide a value for an attribute, it will be set to the default value.
            </para>
             </important> 
            <para>
            You can also use this operation to enable token revocation for user pool clients.
            For more information about revoking tokens, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html">RevokeToken</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolClient service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserPoolClient service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ConcurrentModificationException">
            This exception is thrown if two or more modifications are happening concurrently.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidOAuthFlowException">
            This exception is thrown when the specified OAuth flow is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ScopeDoesNotExistException">
            This exception is thrown when the specified scope doesn't exist.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolClient">REST API Reference for UpdateUserPoolClient Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolDomain(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest)">
            <summary>
            Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your
            user pool.
            
             
            <para>
            You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate
            to Amazon Cognito. You can't use it to change the domain for a user pool.
            </para>
             
            <para>
            A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up
            and sign-in pages for your application. When you set up a custom domain, you provide
            a certificate that you manage with Certificate Manager (ACM). When necessary, you
            can use this operation to change the certificate that you applied to your custom domain.
            </para>
             
            <para>
            Usually, this is unnecessary following routine certificate renewal with ACM. When
            you renew your existing certificate in ACM, the ARN for your certificate remains the
            same, and your custom domain uses the new certificate automatically.
            </para>
             
            <para>
            However, if you replace your existing certificate with a new one, ACM gives the new
            certificate a new ARN. To apply the new certificate to your custom domain, you must
            provide this ARN to Amazon Cognito.
            </para>
             
            <para>
            When you add your new certificate in ACM, you must choose US East (N. Virginia) as
            the Amazon Web Services Region.
            </para>
             
            <para>
            After you submit your request, Amazon Cognito requires up to 1 hour to distribute
            your new certificate to your custom domain.
            </para>
             
            <para>
            For more information about adding a custom domain to your user pool, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html">Using
            Your Own Domain for the Hosted UI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolDomain service method.</param>
            
            <returns>The response from the UpdateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolDomain">REST API Reference for UpdateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.UpdateUserPoolDomainAsync(Amazon.CognitoIdentityProvider.Model.UpdateUserPoolDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your
            user pool.
            
             
            <para>
            You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate
            to Amazon Cognito. You can't use it to change the domain for a user pool.
            </para>
             
            <para>
            A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up
            and sign-in pages for your application. When you set up a custom domain, you provide
            a certificate that you manage with Certificate Manager (ACM). When necessary, you
            can use this operation to change the certificate that you applied to your custom domain.
            </para>
             
            <para>
            Usually, this is unnecessary following routine certificate renewal with ACM. When
            you renew your existing certificate in ACM, the ARN for your certificate remains the
            same, and your custom domain uses the new certificate automatically.
            </para>
             
            <para>
            However, if you replace your existing certificate with a new one, ACM gives the new
            certificate a new ARN. To apply the new certificate to your custom domain, you must
            provide this ARN to Amazon Cognito.
            </para>
             
            <para>
            When you add your new certificate in ACM, you must choose US East (N. Virginia) as
            the Amazon Web Services Region.
            </para>
             
            <para>
            After you submit your request, Amazon Cognito requires up to 1 hour to distribute
            your new certificate to your custom domain.
            </para>
             
            <para>
            For more information about adding a custom domain to your user pool, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html">Using
            Your Own Domain for the Hosted UI</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateUserPoolDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateUserPoolDomain service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UpdateUserPoolDomain">REST API Reference for UpdateUserPoolDomain Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.VerifySoftwareToken(Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest)">
            <summary>
            Use this API to register a user's entered time-based one-time password (TOTP) code
            and mark the user's software token MFA status as "verified" if successful. The request
            takes an access token or a session string, but not both.
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifySoftwareToken service method.</param>
            
            <returns>The response from the VerifySoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException">
            This exception is thrown when there is a code mismatch and the service fails to configure
            the software token TOTP multi-factor authentication (MFA).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifySoftwareToken">REST API Reference for VerifySoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.VerifySoftwareTokenAsync(Amazon.CognitoIdentityProvider.Model.VerifySoftwareTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Use this API to register a user's entered time-based one-time password (TOTP) code
            and mark the user's software token MFA status as "verified" if successful. The request
            takes an access token or a session string, but not both.
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifySoftwareToken service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifySoftwareToken service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.EnableSoftwareTokenMFAException">
            This exception is thrown when there is a code mismatch and the service fails to configure
            the software token TOTP multi-factor authentication (MFA).
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidUserPoolConfigurationException">
            This exception is thrown when the user pool configuration is not valid.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.SoftwareTokenMFANotFoundException">
            This exception is thrown when the software token time-based one-time password (TOTP)
            multi-factor authentication (MFA) isn't activated for the user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifySoftwareToken">REST API Reference for VerifySoftwareToken Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.VerifyUserAttribute(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest)">
            <summary>
            Verifies the specified user attributes in the user pool.
            
             
            <para>
             If your user pool requires verification before Amazon Cognito updates the attribute
            value, VerifyUserAttribute updates the affected attribute to its pending value. For
            more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserAttributeUpdateSettingsType.html">
            UserAttributeUpdateSettingsType</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute service method.</param>
            
            <returns>The response from the VerifyUserAttribute service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.CognitoIdentityProvider.IAmazonCognitoIdentityProvider.VerifyUserAttributeAsync(Amazon.CognitoIdentityProvider.Model.VerifyUserAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Verifies the specified user attributes in the user pool.
            
             
            <para>
             If your user pool requires verification before Amazon Cognito updates the attribute
            value, VerifyUserAttribute updates the affected attribute to its pending value. For
            more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserAttributeUpdateSettingsType.html">
            UserAttributeUpdateSettingsType</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyUserAttribute service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the VerifyUserAttribute service method, as returned by CognitoIdentityProvider.</returns>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.AliasExistsException">
            This exception is thrown when a user tries to confirm the account with an email address
            or phone number that has already been supplied as an alias for a different user profile.
            This exception indicates that an account with this email address or phone already
            exists in a user pool that you've configured to use email address or phone number
            as a sign-in alias.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.CodeMismatchException">
            This exception is thrown if the provided code doesn't match what the server was expecting.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ExpiredCodeException">
            This exception is thrown if a code has expired.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ForbiddenException">
            This exception is thrown when WAF doesn't allow your request based on a web ACL that's
            associated with your user pool.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InternalErrorException">
            This exception is thrown when Amazon Cognito encounters an internal error.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.InvalidParameterException">
            This exception is thrown when the Amazon Cognito service encounters an invalid parameter.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.LimitExceededException">
            This exception is thrown when a user exceeds the limit for a requested Amazon Web
            Services resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.NotAuthorizedException">
            This exception is thrown when a user isn't authorized.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.PasswordResetRequiredException">
            This exception is thrown when a password reset is required.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.ResourceNotFoundException">
            This exception is thrown when the Amazon Cognito service can't find the requested
            resource.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.TooManyRequestsException">
            This exception is thrown when the user has made too many requests for a given operation.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotConfirmedException">
            This exception is thrown when a user isn't confirmed successfully.
            </exception>
            <exception cref="T:Amazon.CognitoIdentityProvider.Model.UserNotFoundException">
            This exception is thrown when a user isn't found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerifyUserAttribute">REST API Reference for VerifyUserAttribute Operation</seealso>
        </member>
    </members>
</doc>
